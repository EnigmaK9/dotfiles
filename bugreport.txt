uname -a
Linux saul-PC 4.15.0-32-generic #35~16.04.1-Ubuntu SMP Fri Aug 10 21:54:34 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux


NVIM v0.2.2
Build type: RelWithDebInfo
LuaJIT 2.0.4
Compilation: /usr/bin/x86_64-linux-gnu-gcc -g -O2 -fPIE -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -DDISABLE_LOG -Wdate-time -D_FORTIFY_SOURCE=2 -Wconversion -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1 -DNVIM_UNIBI_HAS_VAR_FROM -O2 -g -DMIN_LOG_LEVEL=3 -Og -g -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wvla -fstack-protector-strong -fdiagnostics-color=auto -DINCLUDE_GENERATED_DECLARATIONS -D_GNU_SOURCE -I/build/neovim-HJnLxJ/neovim-0.2.2/build/config -I/build/neovim-HJnLxJ/neovim-0.2.2/src -I/usr/include -I/usr/include -I/usr/include -I/usr/include -I/usr/include -I/usr/include -I/usr/include -I/build/neovim-HJnLxJ/neovim-0.2.2/build/src/nvim/auto -I/build/neovim-HJnLxJ/neovim-0.2.2/build/include
Compilado por pkg-vim-maintainers@lists.alioth.debian.org

Features: +acl +iconv +jemalloc +tui 
See ":help feature-compile"

     archivo "vimrc" del sistema: "$VIM/sysinit.vim"
            predefinido para $VIM: "/usr/share/nvim"

Run :checkhealth for more info
--- Directories and Files ---
$VIM = "/usr/share/nvim"
directory "/usr/share/nvim" exists
$VIMRUNTIME = "/usr/share/nvim/runtime"
directory "/usr/share/nvim/runtime" exists
"/usr/share/nvim/runtime/doc/help.txt" is readable
"/usr/share/nvim/runtime/doc/tags" is readable
"/usr/share/nvim/runtime/menu.vim" is readable
"/usr/share/nvim/runtime/filetype.vim" is readable
"/usr/share/nvim/runtime/syntax/synload.vim" is readable
--- Scripts sourced ---
  1: ~/.config/nvim/init.vim
  2: ~/.vim/autoload/plug.vim
  3: /usr/share/nvim/runtime/filetype.vim
  4: /usr/share/nvim/runtime/ftplugin.vim
  5: /usr/share/nvim/runtime/indent.vim
  6: /usr/share/nvim/runtime/autoload/provider/python3.vim
  7: /usr/share/nvim/runtime/autoload/provider/pythonx.vim
  8: /usr/share/nvim/runtime/autoload/remote/host.vim
  9: /usr/share/nvim/runtime/ftoff.vim
 10: ~/.vim/plugged/vim-fugitive/ftdetect/fugitive.vim
 11: ~/.vim/plugged/neosnippet/ftdetect/neosnippet.vim
 12: ~/.vim/plugged/vim-polyglot/ftdetect/polyglot.vim
 13: ~/.vim/plugged/vim-polyglot/after/ftdetect/rspec.vim
 14: /usr/share/nvim/runtime/syntax/syntax.vim
 15: /usr/share/nvim/runtime/syntax/synload.vim
 16: /usr/share/nvim/runtime/syntax/syncolor.vim
 17: /usr/share/nvim/runtime/syntax/nosyntax.vim
 18: ~/.vim/plugged/awesome-vim-colorschemes/colors/tender.vim
 19: ~/.vim/plugged/vim-fugitive/plugin/fugitive.vim
 20: ~/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim
 21: ~/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim
 22: ~/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim
 23: ~/.vim/plugged/undotree/plugin/undotree.vim
 24: ~/.vim/plugged/deoplete.nvim/plugin/deoplete.vim
 25: ~/.vim/plugged/deoplete.nvim/autoload/deoplete.vim
 26: ~/.vim/plugged/deoplete.nvim/autoload/deoplete/init.vim
 27: ~/.vim/plugged/deoplete-ternjs/plugin/deoplete-ternjs.vim
 28: ~/.vim/plugged/ale/plugin/ale.vim
 29: ~/.vim/plugged/ale/autoload/ale/events.vim
 30: ~/.vim/plugged/neosnippet/plugin/neosnippet.vim
 31: ~/.vim/plugged/neoinclude.vim/plugin/neoinclude.vim
 32: ~/.vim/plugged/vim-fake/plugin/fake.vim
 33: ~/.vim/plugged/nerdtree/plugin/NERD_tree.vim
 34: ~/.vim/plugged/nerdtree/autoload/nerdtree.vim
 35: ~/.vim/plugged/nerdtree/lib/nerdtree/path.vim
 36: ~/.vim/plugged/nerdtree/lib/nerdtree/menu_controller.vim
 37: ~/.vim/plugged/nerdtree/lib/nerdtree/menu_item.vim
 38: ~/.vim/plugged/nerdtree/lib/nerdtree/key_map.vim
 39: ~/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim
 40: ~/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim
 41: ~/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim
 42: ~/.vim/plugged/nerdtree/lib/nerdtree/opener.vim
 43: ~/.vim/plugged/nerdtree/lib/nerdtree/creator.vim
 44: ~/.vim/plugged/nerdtree/lib/nerdtree/flag_set.vim
 45: ~/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim
 46: ~/.vim/plugged/nerdtree/lib/nerdtree/ui.vim
 47: ~/.vim/plugged/nerdtree/lib/nerdtree/event.vim
 48: ~/.vim/plugged/nerdtree/lib/nerdtree/notifier.vim
 49: ~/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim
 50: ~/.vim/plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim
 51: ~/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim
 52: ~/.vim/plugged/vim-devicons/nerdtree_plugin/webdevicons.vim
 53: ~/.fzf/plugin/fzf.vim
 54: ~/.vim/plugged/tagbar/plugin/tagbar.vim
 55: ~/.vim/plugged/vim-misc/plugin/xolox/misc.vim
 56: ~/.vim/plugged/vim-easytags/plugin/easytags.vim
 57: ~/.vim/plugged/vim-misc/autoload/xolox/misc.vim
 58: ~/.vim/plugged/vim-misc/autoload/xolox/misc/os.vim
 59: ~/.vim/plugged/vim-easytags/autoload/xolox/easytags.vim
 60: ~/.vim/plugged/vim-misc/autoload/xolox/misc/timer.vim
 61: ~/.vim/plugged/vim-misc/autoload/xolox/misc/option.vim
 62: ~/.vim/plugged/vim-misc/autoload/xolox/misc/path.vim
 63: ~/.vim/plugged/vim-misc/autoload/xolox/misc/list.vim
 64: ~/.vim/plugged/vim-misc/autoload/xolox/misc/msg.vim
 65: ~/.vim/plugged/vim-misc/autoload/xolox/misc/escape.vim
 66: ~/.vim/plugged/vim-misc/autoload/xolox/misc/version.vim
 67: ~/.vim/plugged/vim-misc/autoload/xolox/misc/cursorhold.vim
 68: ~/.vim/plugged/vim-signature/plugin/signature.vim
 69: ~/.vim/plugged/vim-signature/autoload/signature/utils.vim
 70: ~/.vim/plugged/vim-multiple-cursors/plugin/multiple_cursors.vim
 71: ~/.vim/plugged/Tabular/plugin/Tabular.vim
 72: ~/.vim/plugged/auto-pairs/plugin/auto-pairs.vim
 73: ~/.vim/plugged/vim-endwise/plugin/endwise.vim
 74: ~/.vim/plugged/vCoolor.vim/plugin/vCoolor.vim
 75: ~/.vim/plugged/vCoolor.vim/autoload/vcoolor/convert.vim
 76: ~/.vim/plugged/vim-you-autocorrect/plugin/vim_you_autocorrect.vim
 77: ~/.vim/plugged/nerdcommenter/plugin/NERD_commenter.vim
 78: ~/.vim/plugged/markdown-preview.vim/plugin/mkdp.vim
 79: ~/.vim/plugged/vim-textmanip/plugin/textmanip.vim
 80: ~/.vim/plugged/vim-easymotion/plugin/EasyMotion.vim
 81: ~/.vim/plugged/vim-indent-object/plugin/indent-object.vim
 82: ~/.vim/plugged/vim-argumentative/plugin/argumentative.vim
 83: ~/.vim/plugged/vim-textobj-function/plugin/textobj/function.vim
 84: ~/.vim/plugged/vim-textobj-user/autoload/textobj/user.vim
 85: ~/.vim/plugged/vim-textobj-comment/plugin/textobj/comment.vim
 86: ~/.vim/plugged/vim-next-object/plugin/next-object.vim
 87: ~/.vim/plugged/vim-surround/plugin/surround.vim
 88: ~/.vim/plugged/vim-commentary/plugin/commentary.vim
 89: ~/.vim/plugged/ReplaceWithRegister/plugin/ReplaceWithRegister.vim
 90: ~/.vim/plugged/vim-airline/plugin/airline.vim
 91: ~/.vim/plugged/vim-airline/autoload/airline.vim
 92: ~/.vim/plugged/vim-airline/autoload/airline/init.vim
 93: ~/.vim/plugged/vim-airline/autoload/airline/parts.vim
 94: ~/.vim/plugged/vim-airline-themes/plugin/airline-themes.vim
 95: ~/.vim/plugged/vim-devicons/plugin/webdevicons.vim
 96: /usr/share/nvim/runtime/plugin/gui_shim.vim
 97: /usr/share/nvim/runtime/plugin/gzip.vim
 98: /usr/share/nvim/runtime/plugin/health.vim
 99: /usr/share/nvim/runtime/plugin/man.vim
100: /usr/share/nvim/runtime/plugin/matchit.vim
101: /usr/share/nvim/runtime/plugin/matchparen.vim
102: /usr/share/nvim/runtime/plugin/netrwPlugin.vim
103: /usr/share/nvim/runtime/plugin/rplugin.vim
104: ~/.local/share/nvim/rplugin.vim
105: /usr/share/nvim/runtime/autoload/remote/define.vim
106: /usr/share/nvim/runtime/plugin/rrhelper.vim
107: /usr/share/nvim/runtime/plugin/shada.vim
108: /usr/share/nvim/runtime/plugin/spellfile.vim
109: /usr/share/nvim/runtime/plugin/tarPlugin.vim
110: /usr/share/nvim/runtime/plugin/tohtml.vim
111: /usr/share/nvim/runtime/plugin/tutor.vim
112: /usr/share/nvim/runtime/plugin/zipPlugin.vim
113: ~/.vim/plugged/vim-signature/after/plugin/signature.vim
114: ~/.vim/plugged/Tabular/after/plugin/TabularMaps.vim
115: ~/.vim/plugged/Tabular/autoload/tabular.vim
116: ~/.vim/plugged/indentLine/after/plugin/indentLine.vim
117: /usr/share/nvim/runtime/ftplugin/sh.vim
118: /usr/share/nvim/runtime/indent/sh.vim
119: /usr/share/nvim/runtime/syntax/sh.vim
120: ~/.vim/plugged/vim-airline/autoload/airline/extensions.vim
121: ~/.vim/plugged/vim-airline/autoload/airline/extensions/quickfix.vim
122: ~/.vim/plugged/vim-airline/autoload/airline/extensions/netrw.vim
123: ~/.vim/plugged/vim-airline/autoload/airline/extensions/undotree.vim
124: ~/.vim/plugged/vim-airline/autoload/airline/extensions/hunks.vim
125: ~/.vim/plugged/vim-airline/autoload/airline/extensions/tagbar.vim
126: ~/.vim/plugged/vim-airline/autoload/airline/util.vim
127: ~/.vim/plugged/vim-airline/autoload/airline/extensions/branch.vim
128: ~/.vim/plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim
129: ~/.vim/plugged/vim-airline/autoload/airline/extensions/ale.vim
130: ~/.vim/plugged/vim-airline/autoload/airline/extensions/whitespace.vim
131: ~/.vim/plugged/vim-airline/autoload/airline/extensions/po.vim
132: ~/.vim/plugged/vim-airline/autoload/airline/extensions/wordcount.vim
133: ~/.vim/plugged/vim-airline/autoload/airline/extensions/tabline.vim
134: ~/.vim/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim
135: ~/.vim/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim
136: ~/.vim/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim
137: ~/.vim/plugged/vim-airline/autoload/airline/extensions/keymap.vim
138: ~/.vim/plugged/vim-airline/autoload/airline/section.vim
139: ~/.vim/plugged/vim-airline/autoload/airline/highlighter.vim
140: ~/.vim/plugged/awesome-vim-colorschemes/autoload/airline/themes/tender.vim
141: ~/.vim/plugged/vim-airline/autoload/airline/themes.vim
142: ~/.vim/plugged/vim-airline/autoload/airline/builder.vim
143: ~/.vim/plugged/vim-airline/autoload/airline/extensions/default.vim
144: ~/.vim/plugged/vim-fugitive/autoload/fugitive.vim
145: ~/.vim/plugged/ale/autoload/ale.vim
146: ~/.vim/plugged/ale/autoload/ale/util.vim
147: ~/.vim/plugged/ale/autoload/ale/linter.vim
148: ~/.vim/plugged/ale/ale_linters/sh/language_server.vim
149: ~/.vim/plugged/ale/ale_linters/sh/shell.vim
150: ~/.vim/plugged/ale/ale_linters/sh/shellcheck.vim
151: ~/.vim/plugged/ale/autoload/ale/engine.vim
152: ~/.vim/plugged/ale/autoload/ale/lsp_linter.vim
153: ~/.vim/plugged/ale/autoload/ale/path.vim
154: ~/.vim/plugged/ale/autoload/ale/node.vim
155: ~/.vim/plugged/ale/autoload/ale/handlers/sh.vim
156: ~/.vim/plugged/ale/autoload/ale/history.vim
157: ~/.vim/plugged/ale/autoload/ale/command.vim
158: ~/.vim/plugged/ale/autoload/ale/job.vim
159: ~/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim
160: ~/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim
161: ~/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim
162: ~/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim
163: ~/.vim/plugged/vim-signature/autoload/signature/sign.vim
164: ~/.vim/plugged/vim-signature/autoload/signature/mark.vim
165: ~/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim
166: ~/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim
167: /usr/share/nvim/runtime/autoload/provider.vim
168: ~/.vim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim
169: ~/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim
170: ~/.vim/plugged/ale/autoload/ale/cursor.vim
171: ~/.vim/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim
172: ~/.vim/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim
173: ~/.vim/plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim
174: ~/.vim/plugged/vim-devicons/autoload/airline/extensions/tabline/formatters/webdevicons.vim
175: ~/.vim/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim
176: ~/.vim/plugged/vim-airline/autoload/airline/async.vim
177: ~/.vim/plugged/tagbar/autoload/tagbar.vim
178: ~/.vim/plugged/tagbar/autoload/tagbar/debug.vim
179: ~/.vim/plugged/tagbar/autoload/tagbar/types/ctags.vim
180: ~/.vim/plugged/tagbar/autoload/tagbar/prototypes/typeinfo.vim
181: ~/.vim/plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim
182: ~/.vim/plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim
183: ~/.vim/plugged/tagbar/autoload/tagbar/prototypes/basetag.vim
184: ~/.vim/plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim
185: ~/.vim/plugged/tagbar/autoload/tagbar/sorting.vim
186: ~/.vim/plugged/tagbar/autoload/tagbar/state.vim
187: ~/.vim/plugged/ale/autoload/ale/statusline.vim
188: ~/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim
189: ~/.vim/plugged/ale/autoload/ale/sign.vim
190: ~/.vim/plugged/ale/autoload/ale/list.vim
191: ~/.vim/plugged/ale/autoload/ale/highlight.vim
192: ~/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim
193: ~/.vim/plugged/neosnippet/autoload/neosnippet/helpers.vim
194: ~/.vim/plugged/neosnippet/autoload/neosnippet/init.vim
195: ~/.vim/plugged/neosnippet/autoload/neosnippet.vim
196: ~/.vim/plugged/neosnippet/autoload/neosnippet/util.vim
197: ~/.vim/plugged/neosnippet/autoload/neosnippet/mappings.vim
198: ~/.vim/plugged/neosnippet/autoload/neosnippet/commands.vim
199: ~/.vim/plugged/neosnippet/autoload/vital/neosnippet.vim
200: ~/.vim/plugged/neosnippet/autoload/vital/_neosnippet/System/Cache/Deprecated.vim
201: ~/.vim/plugged/neosnippet/autoload/vital/_neosnippet/Data/String.vim
202: ~/.vim/plugged/neosnippet/autoload/vital/_neosnippet/Data/List.vim
203: ~/.vim/plugged/neosnippet/autoload/neosnippet/variables.vim
204: ~/.vim/plugged/neosnippet/autoload/vital.vim
205: ~/.vim/plugged/neosnippet/autoload/vital/_neosnippet.vim
206: ~/.vim/plugged/neosnippet/autoload/neosnippet/parser.vim
207: ~/.vim/plugged/neosnippet/autoload/neosnippet/handlers.vim
208: ~/.vim/plugged/vim-easytags/autoload/xolox/easytags/filetypes.vim
209: ~/.vim/plugged/vim-misc/autoload/xolox/misc/str.vim
210: /usr/share/nvim/runtime/autoload/provider/python.vim
211: ~/.vim/plugged/neoinclude.vim/autoload/neoinclude/file_include.vim
212: ~/.vim/plugged/neoinclude.vim/autoload/neoinclude.vim
213: ~/.vim/plugged/neoinclude.vim/autoload/neoinclude/util.vim
214: ~/.vim/plugged/neoinclude.vim/autoload/neoinclude/include.vim
215: /usr/share/nvim/runtime/bugreport.vim
216: ~/.vim/plugged/vim-easytags/autoload/xolox/easytags/utils.vim
217: ~/.vim/plugged/vim-easytags/autoload/xolox/easytags/update.vim
218: ~/.vim/plugged/vim-misc/autoload/xolox/misc/perm.vim
219: ~/.vim/plugged/vim-misc/autoload/xolox/misc/format.vim
220: ~/.vim/plugged/vim-fake/autoload/fake.vim
221: /usr/share/nvim/runtime/scripts.vim
222: /usr/share/nvim/runtime/ftplugin/text.vim
223: ~/.vim/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim
224: ~/.vim/plugged/ale/ale_linters/text/alex.vim
225: ~/.vim/plugged/ale/ale_linters/text/proselint.vim
226: ~/.vim/plugged/ale/ale_linters/text/redpen.vim
227: ~/.vim/plugged/ale/ale_linters/text/textlint.vim
228: ~/.vim/plugged/ale/ale_linters/text/vale.vim
229: ~/.vim/plugged/ale/ale_linters/text/writegood.vim
230: ~/.vim/plugged/ale/autoload/ale/handlers/writegood.vim
231: /usr/share/nvim/runtime/ftplugin/vim.vim
232: ~/.vim/plugged/vim-textobj-function/after/ftplugin/vim/textobj-function.vim
233: /usr/share/nvim/runtime/indent/vim.vim
234: ~/.vim/plugged/neco-vim/plugin/necovim.vim
235: /usr/share/nvim/runtime/syntax/vim.vim
236: /usr/share/nvim/runtime/syntax/vim/generated.vim
237: ~/.vim/plugged/vim-css-color/after/syntax/vim.vim
238: ~/.vim/plugged/vim-css-color/autoload/css_color.vim
239: ~/.vim/plugged/neco-vim/autoload/necovim/helper.vim
240: ~/.vim/plugged/ale/ale_linters/vim/ale_custom_linting_rules.vim
241: ~/.vim/plugged/ale/ale_linters/vim/vint.vim
242: ~/.vim/plugged/ale/autoload/ale/semver.vim
243: ~/.vim/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/tabnr.vim
244: ~/.vim/plugged/ale/autoload/ale/handlers/gcc.vim
245: ~/.vim/plugged/neco-vim/autoload/necovim.vim
--- Opciones ---
  aleph=224           cscopeprg=cscope    fsync               modeline            secure              textwidth=80
noarabic              cscopequickfix=     gdefault            modelines=5         selectmode=         thesaurus=
  arabicshape       nocscoperelative      helpheight=20       modifiable          shellcmdflag=-c   notildeop
noallowrevins       nocscopetag           helplang=es       nomodified            shellquote=         timeout
noaltkeymap           cscopetagorder=0    hidden            nomore                shelltemp           timeoutlen=1000
  ambiwidth=single  nocscopeverbose       history=1000        mouse=a             shellxquote=        title
noautochdir         nocursorbind        nohkmap               mousemodel=extend   shellxescape=       titlelen=85
  autoindent          cursorcolumn      nohkmapp              mousetime=500       shiftround          titlestring=
  autoread            cursorline          hlsearch            nrformats=bin,hex   shiftwidth=4        ttimeout
  autowrite           debug=            noicon                number              showbreak=...       ttimeoutlen=1
noautowriteall      nodelcombine          iconstring=         numberwidth=3       showcmd             ttyfast
  background=light    dictionary=         ignorecase          omnifunc=         noshowfulltag         undofile
  backspace=2       nodiff                iminsert=0          operatorfunc=       showmatch           undolevels=10000
nobackup              diffexpr=           imsearch=0        nopaste               showmode            undoreload=10000
  backupcopy=auto   nodigraph             includeexpr=        pastetoggle=        showtabline=2       updatecount=200
  backupext=~         display=lastline    incsearch           patchexpr=          sidescroll=0        updatetime=500
  backupskip=/tmp/*   eadirection=both  noinfercase           patchmode=          sidescrolloff=5     verbose=0
  belloff=all       noedcompatible      noinsertmode        nopreserveindent      signcolumn=auto     verbosefile=
nobinary              emoji               isprint=@,161-255   previewheight=12    smartcase           visualbell
nobomb                encoding=utf-8    nojoinspaces        nopreviewwindow       smartindent         warn
  breakindent         endofline           keymap=             printdevice=        smarttab            wildchar=<Tab>
  breakindentopt=     equalalways         keymodel=           printencoding=      softtabstop=4       wildcharm=0
  bufhidden=          equalprg=           keywordprg=:help    printfont=courier   spell             nowildignorecase
  buflisted         noerrorbells          langmap=            printmbcharset=     spellfile=          wildmenu
  buftype=            eventignore=        langmenu=           printmbfont=        spelllang=es        wildoptions=
  cdpath=,,           expandtab           langnoremap         printoptions=       spellsuggest=best   winaltkeys=menu
  cedit=^F            exrc              nolangremap           prompt              splitbelow          winhighlight=
  charconvert=        fileformat=unix     laststatus=2        pumheight=0         splitright          window=45
nocindent           nofileignorecase      lazyredraw          quoteescape=\       startofline         winheight=1
  cinoptions=         filetype=vim        linebreak           readonly            suffixesadd=      nowinfixheight
  clipboard=          fixendofline        lines=46            redrawtime=2000   noswapfile          nowinfixwidth
  cmdheight=1       nofkmap             nolisp                regexpengine=0      switchbuf=          winminheight=1
  cmdwinheight=7      foldclose=          list                relativenumber      synmaxcol=200       winminwidth=1
  colorcolumn=+1      foldcolumn=1        loadplugins         remap               syntax=vim          winwidth=20
  columns=125         foldenable          magic               report=2            tabpagemax=15       wrap
  commentstring="%s   foldexpr=0          makeef=           norevins              tabstop=4           wrapmargin=0
nocompatible          foldignore=#        makeprg=make      norightleft           tagbsearch          wrapscan
  complete=.,w,b,u    foldlevel=0         matchtime=5         ruler               tagcase=followic    write
  concealcursor=inc   foldlevelstart=-1   maxcombine=2        rulerformat=        taglength=0       nowriteany
  conceallevel=2      foldmethod=manual   maxfuncdepth=100    scroll=21           tagrelative       nowritebackup
  completefunc=       foldminlines=1      maxmapdepth=1000    scrollback=-1       tagstack            writedelay=0
noconfirm             foldnestmax=20      maxmem=992650     noscrollbind        notermbidi
nocopyindent          formatexpr=         maxmemtot=992650    scrolljump=1      notermguicolors
  cscopepathcomp=0    formatprg=          menuitems=25        scrolloff=2       noterse
  backupdir=.,~/.local/share/nvim/backup
  breakat= ^I!@*-+;:,./?
  casemap=internal,keepascii
  cinkeys=0{,0},0),:,0#,!^F,o,O,e
  cinwords=if,else,while,do,for,switch
  comments=sO:" -,mO:"  ,eO:"",:"
  completeopt=menu,preview
  cpoptions=aABceFs_
  define=^\s*#\s*define
  diffopt=filler,vertical
  directory=~/.local/share/nvim/swap//
  errorfile=errors.err
  errorformat=%*[^"]"%f"%*\D%l: %m,"%f"%*\D%l: %m,%-G%f:%l: (Each undeclared identifier is reported only once,%-G%f:%l: for each function it appears in.),%-GIn file included from %f:%l:%c:,%-GIn file included from %f:%l:%c\,,%-GIn file included from %f:%l:%c,%-GIn file included from %f:%l,%-G%*[ ]from %f:%l:%c,%-G%*[ ]from %f:%l:,%-G%*[ ]from %f:%l\,,%-G%*[ ]from %f:%l,%f:%l:%c:%m,%f(%l):%m,%f:%l:%m,"%f"\, line %l%*\D%c%*[^ ] %m,%D%*\a[%*\d]: Entering directory %*[`']%f',%X%*\a[%*\d]: Leaving directory %*[`']%f',%D%*\a: Entering directory %*[`']%f',%X%*\a: Leaving directory %*[`']%f',%DMaking %*\a in %f,%f|%l| %m
  fileencoding=utf-8
  fileencodings=ucs-bom,utf-8,default,latin1
  fileformats=unix,dos,mac
  fillchars=vert:|,fold:-
  foldmarker={{{,}}}
  foldopen=block,hor,mark,percent,quickfix,search,tag,undo
  foldtext=foldtext()
  formatoptions=jcroql
  formatlistpat=^\s*\d\+[\]:.)}\t ]\s*
  grepformat=%f:%l:%m,%f:%l%m,%f  %l%m
  grepprg=grep -n $* /dev/null
  guicursor=n-v-c-sm:block,i-ci-ve:ver25,r-cr-o:hor20
  helpfile=/usr/share/nvim/runtime/doc/help.txt
  highlight=8:SpecialKey,~:EndOfBuffer,z:TermCursor,Z:TermCursorNC,@:NonText,d:Directory,e:ErrorMsg,i:IncSearch,l:Search,m:MoreMsg,M:ModeMsg,n:LineNr,N:CursorLineNr,r:Question,s:StatusLine,S:StatusLineNC,c:VertSplit,t:Title,v:Visual,V:VisualNOS,w:WarningMsg,W:WildMenu,f:Folded,F:FoldColumn,A:DiffAdd,C:DiffChange,D:DiffDelete,T:DiffText,>:SignColumn,-:Conceal,B:SpellBad,P:SpellCap,R:SpellRare,L:SpellLocal,+:Pmenu,=:PmenuSel,x:PmenuSbar,X:PmenuThumb,*:TabLine,#:TabLineSel,_:TabLineFill,!:CursorColumn,.:CursorLine,o:ColorColumn,q:QuickFixLine,0:Whitespace,I:NormalNC
  inccommand=nosplit
  include=^\s*#\s*include
  indentexpr=GetVimIndent()
  indentkeys=0{,0},:,0#,!^F,o,O,e,=end,=else,=cat,=fina,=END,0\
  isfname=@,48-57,/,.,-,_,+,,,#,$,%,~,=
  isident=@,48-57,_,192-255
  iskeyword=@,48-57,_,192-255,#
  lispwords=defun,define,defmacro,set!,lambda,if,case,let,flet,let*,letrec,do,do*,define-syntax,let-syntax,letrec-syntax,destructuring-bind,defpackage,defparameter,defstruct,deftype,defvar,do-all-symbols,do-external-symbols,do-symbols,dolist,dotimes,ecase,etypecase,eval-when,labels,macrolet,multiple-value-bind,multiple-value-call,multiple-value-prog1,multiple-value-setq,prog1,progv,typecase,unless,unwind-protect,when,with-input-from-string,with-open-file,with-open-stream,with-output-to-string,with-package-iterator,define-condition,handler-bind,handler-case,restart-bind,restart-case,with-simple-restart,store-value,use-value,muffle-warning,abort,continue,with-slots,with-slots*,with-accessors,with-accessors*,defclass,defmethod,print-unreadable-object
  listchars=tab:»·,trail:·,extends:❯,precedes:❮
  matchpairs=(:),{:},[:],<:>
  maxmempattern=1000
  mkspellmem=460000,2000,500
  packpath=~/.config/nvim,/etc/xdg/xdg-xubuntu/nvim,/usr/share/upstart/xdg/nvim,/etc/xdg/nvim,/etc/xdg/nvim,~/.local/share/nvim/site,/usr/share/xubuntu/nvim/site,/usr/share/xfce4/nvim/site,/usr/local/share/nvim/site,/usr/share/nvim/site,/var/lib/snapd/desktop/nvim/site,/var/lib/snapd/desktop/nvim/site,/usr/share/nvim/site,/usr/share/nvim/runtime,/usr/share/nvim/site/after,/var/lib/snapd/desktop/nvim/site/after,/var/lib/snapd/desktop/nvim/site/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/usr/share/xfce4/nvim/site/after,/usr/share/xubuntu/nvim/site/after,~/.local/share/nvim/site/after,/etc/xdg/nvim/after,/etc/xdg/nvim/after,/usr/share/upstart/xdg/nvim/after,/etc/xdg/xdg-xubuntu/nvim/after,~/.config/nvim/after
  paragraphs=IPLPPPQPP TPHPLIPpLpItpplpipbp
  path=.,/usr/include,,
  printexpr=system(['lpr'] + (empty(&printdevice)?[]:['-P', &printdevice]) + [v:fname_in]). delete(v:fname_in)+ v:shell_error
  printheader=%<%f%h%m%=Página %N
  rightleftcmd=search
  runtimepath=~/.config/nvim,~/.vim/plugged/vim-fugitive/,~/.vim/plugged/vim-gitgutter/,~/.vim/plugged/undotree/,~/.vim/plugged/deoplete.nvim/,~/.vim/plugged/deoplete-ternjs/,~/.vim/plugged/ale/,~/.vim/plugged/neosnippet/,~/.vim/plugged/neosnippet-snippets/,~/.vim/plugged/neoinclude.vim/,~/.vim/plugged/neco-vim/,~/.vim/plugged/vim-fake/,~/.vim/plugged/nerdtree/,~/.fzf/,~/.vim/plugged/tagbar/,~/.vim/plugged/vim-misc/,~/.vim/plugged/vim-easytags/,~/.vim/plugged/vim-signature/,~/.vim/plugged/vim-repeat/,~/.vim/plugged/vim-multiple-cursors/,~/.vim/plugged/Tabular/,~/.vim/plugged/auto-pairs/,~/.vim/plugged/vim-endwise/,~/.vim/plugged/vCoolor.vim/,~/.vim/plugged/vim-you-autocorrect/,~/.vim/plugged/nerdcommenter/,~/.vim/plugged/markdown-preview.vim/,~/.vim/plugged/vim-textmanip/,~/.vim/plugged/vim-easymotion/,~/.vim/plugged/vim-indent-object/,~/.vim/plugged/vim-argumentative/,~/.vim/plugged/vim-textobj-user/,~/.vim/plugged/vim-textobj-function/,~/.vim/plugged/vim-textobj-comment/,~/.vim/plugged/vim-next-object/,~/.vim/plugged/vim-surround/,~/.vim/plugged/vim-commentary/,~/.vim/plugged/ReplaceWithRegister/,~/.vim/plugged/awesome-vim-colorschemes/,~/.vim/plugged/vim-airline/,~/.vim/plugged/vim-airline-themes/,~/.vim/plugged/vim-devicons/,~/.vim/plugged/indentLine/,~/.vim/plugged/MatchTag/,~/.vim/plugged/vim-css-color/,~/.vim/plugged/vim-polyglot/,/etc/xdg/xdg-xubuntu/nvim,/usr/share/upstart/xdg/nvim,/etc/xdg/nvim,/etc/xdg/nvim,~/.local/share/nvim/site,/usr/share/xubuntu/nvim/site,/usr/share/xfce4/nvim/site,/usr/local/share/nvim/site,/usr/share/nvim/site,/var/lib/snapd/desktop/nvim/site,/var/lib/snapd/desktop/nvim/site,/usr/share/nvim/site,/usr/share/nvim/runtime,/usr/share/nvim/site/after,/var/lib/snapd/desktop/nvim/site/after,/var/lib/snapd/desktop/nvim/site/after,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,/usr/share/xfce4/nvim/site/after,/usr/share/xubuntu/nvim/site/after,~/.local/share/nvim/site/after,/etc/xdg/nvim/after,/etc/xdg/nvim/after,/usr/share/upstart/xdg/nvim/after,/etc/xdg/xdg-xubuntu/nvim/after,~/.vim/plugged/vim-signature/after,~/.vim/plugged/Tabular/after,~/.vim/plugged/vim-textobj-function/after,~/.vim/plugged/awesome-vim-colorschemes/after,~/.vim/plugged/indentLine/after,~/.vim/plugged/vim-css-color/after,~/.vim/plugged/vim-polyglot/after,~/.config/nvim/after
  scrollopt=ver,jump
  sections=SHNHH HUnhsh
  selection=inclusive
  sessionoptions=blank,buffers,curdir,folds,help,tabpages,winsize,localoptions
  shada=!,'100,<50,s10,h
  shell=/usr/bin/zsh
  shellpipe=2>&1| tee
  shellredir=>%s 2>&1
  shortmess=filnxtToO
  spellcapcheck=[.?!]\_[\])'"^I ]\+
  statusline=%!airline#statusline(1)
  suffixes=.bak,~,.o,.h,.info,.swp,.obj
  tabline=%!airline#extensions#tabline#get()
  tags=./tags;/,~/.vimtags
  titleold=Project-Id-Version: Vim 7.2.284 (rev 1692)^@Report-Msgid-Bugs-To: ^@POT-Creation-Date: 2014-05-26 14:21+0200^@PO-Revision-Date: 2009-12-04 18:52+0100^@Last-Translator: Omar Campagne <ocampagne@gmail.com>^@Language-Team: vim-doc-es http://www.assembla.com/wiki/show/vim-doc-es^@Language: ^@MIME-Version: 1.0^@Content-Type: text/plain; charset=utf-8^@Content-Transfer-Encoding: octect-stream^@
  undodir=~/.local/share/nvim/undo
  viewdir=~/.local/share/nvim/view
  viewoptions=folds,options,cursor,curdir
  viminfo=!,'100,<50,s10,h
  virtualedit=onemore
  whichwrap=b,s,h,l,<,>,[,]
  wildignore=*.o,*.obj,*.bak,*.exe,*.py[co],*.swp,*~,*.pyc,.svn
  wildmode=longest,full
--- Auto-órdenes ---
airline_tabline_autoshow  BufAdd
    *         call airline#extensions#tabline#buflist#invalidate()
airline  BufAdd
    *         call <sid>update_tabline()
ALECleanupGroup  BufDelete
    *         if exists('*ale#engine#Cleanup') | call ale#engine#Cleanup(str2nr(expand('<abuf>'))) | endif
airline_tabline_tabs  BufDelete
    *         call airline#extensions#tabline#tabs#invalidate()
airline_tabline_buffers  BufDelete
    *         call airline#extensions#tabline#buflist#clean()
fugitive_status  BufDelete
    term://*  call fugitive#ReloadStatus()
fugitive_commit  BufDelete
    COMMIT_EDITMSG
              execute s:sub(s:FinishCommit(), '^echoerr (.*)', 'echohl ErrorMsg|echo \1|echohl NONE')
TagbarAutoCmds  BufDelete
    *         call s:HandleBufDelete(expand('<afile>'), expand('<abuf>'))
gitgutter  BufEnter
    *         call s:on_bufenter()
ALEEvents  BufEnter
    *         call ale#events#ReadOrEnterEvent(str2nr(expand('<abuf>')))
NERDTree  BufEnter
    NERD_tree_*
              stopinsert
NERDTreeHijackNetrw  BufEnter
    *         call nerdtree#checkForBrowse(expand("<amatch>"))
sig_autocmds  BufEnter
    *         call signature#sign#Refresh()
BufEnter
    *         :call AutoPairsTryInit()
NERDCommenter  BufEnter
    *         :call s:SetUpForNewFiletype(&filetype, 0)
BufEnter
    *.{md,mkd,markdown,mdown,mkdn,mdwn}
              command! -buffer MarkdownPreview call s:serverStart()
TagbarAutoCmds  BufEnter
    *         if expand('<amatch>') !~ '__Tagbar__.*' |     let s:last_alt_bufnr = bufnr('#') | endif
              call s:AutoUpdate(fnamemodify(expand('<afile>'), ':p'), 0)
ALEHighlightBufferGroup  BufEnter
    *         call ale#highlight#UpdateHighlights()
neosnippet  BufEnter
    *         call neosnippet#mappings#_clear_select_mode_mappings()
filetypedetect  BufEnter
    *.xpm     if getline(1) =~ "XPM2" |   setf xpm2 | else |   setf xpm | endif
    *.xpm2    setf xpm2
    *.scss    :syntax sync fromstart
DeteccionLenguajes  BufEnter
    *.nasm    setlocal filetype=nasm
    *.jade    setlocal filetype=pug
    *.h       setlocal filetype=c
AutoCmdFake  BufHidden
    *         call fake#free_cache()
ALEHighlightBufferGroup  BufHidden
    *         call ale#highlight#BufferHidden(expand('<abuf>'))
NERDTree  BufLeave
    NERD_tree_*
              if g:NERDTree.IsOpen() | call b:NERDTree.ui.saveScreenState() | endif
airline_tabline_autoshow  BufLeave
    *         call airline#extensions#tabline#buflist#invalidate()
filetypedetect  BufNew
    *.nqp     setf perl6
BufNewFile
    *_spec.rb set syntax=rspec
              setlocal commentstring=#\ %s
fugitive  BufNewFile
    *         call FugitiveDetect(expand('<amatch>:p'))
indentLine  BufNewFile
    *         call <SID>InitColor()
fugitive_temp  BufNewFile
    *         exe s:SetupTemp(expand('<amatch>:p'))
neosnippet  BufNewFile
    *         execute 'syntax match neosnippetExpandSnippets'  "'".neosnippet#get_placeholder_marker_pattern(). '\|' .neosnippet#get_sync_placeholder_marker_pattern().'\|' .neosnippet#get_mirror_placeholder_marker_pattern()."'" 'containedin=ALL oneline'
              syntax region neosnippetConcealExpandSnippets matchgroup=neosnippetExpandSnippets start='<`\d\+:\=\%(#:\)\?\|<{\d\+:\=\%(#:\)\?\|<|' end='`>\|}>\||>' containedin=ALL concealends oneline
filetypedetect  BufNewFile
    ?\+.orig  exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.bak   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.old   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.new   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-dist
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-old
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-new
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-bak
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmsave
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmnew
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.pacsave
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.pacnew
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    *~        let s:name = expand("<afile>") | let s:short = substitute(s:name, '\~$', '', '') | if s:name != s:short && s:short != "" |   exe "doau filetypedetect BufRead " . fnameescape(s:short) | endif | unlet! s:name s:short
    ?\+.in    if expand("<afile>:t") != "configure.in" |   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) | endif
    *.inp     call s:Check_inp()
    *.aap     setf aap
    */etc/a2ps.cfg
              setf a2ps
    */etc/a2ps/*.cfg
              setf a2ps
    a2psrc    setf a2ps
    .a2psrc   setf a2ps
    *.abap    setf abap
    *.abc     setf abc
    *.abl     setf abel
    *.wrm     setf acedb
    *.adb     setf ada
    *.ads     setf ada
    *.ada     setf ada
    *.gpr     setf ada
    *.tdf     setf ahdl
    *.run     setf ampl
    build.xml setf ant
    *.ino     setf arduino
    *.pde     setf arduino
    proftpd.conf*
              call s:StarSetf('apachestyle')
    .htaccess setf apache
    */etc/httpd/*.conf
              setf apache
    *.a65     setf a65
    *.scpt    setf applescript
    *.am      if expand("<afile>") !~? 'Makefile.am\>' | setf elf | endif
    .asoundrc setf alsaconf
    */usr/share/alsa/alsa.conf
              setf alsaconf
    */etc/asound.conf
              setf alsaconf
    *.aml     setf aml
    apt.conf  setf aptconf
    */.aptitude/config
              setf aptconf
    */etc/apt/apt.conf.d/{[-_[:alnum:]]\+,[-_.[:alnum:]]\+.conf}
              setf aptconf
    .arch-inventory
              setf arch
    =tagging-method
              setf arch
    *.art     setf art
    *.asciidoc
              setf asciidoc
    *.adoc    setf asciidoc
    *.asn     setf asn
    *.asn1    setf asn
    *.asa     if exists("g:filetype_asa") |   exe "setf " . g:filetype_asa | else |   setf aspvbs | endif
    *.asp     if exists("g:filetype_asp") |   exe "setf " . g:filetype_asp | elseif getline(1) . getline(2) . getline(3) =~? "perlscript" |   setf aspperl | else |   setf aspvbs | endif
    */boot/grub/menu.lst
              setf grub
    */boot/grub/grub.conf
              setf grub
    */etc/grub.conf
              setf grub
    *.asm     call s:FTasm()
    *.[sS]    call s:FTasm()
    *.[aA]    call s:FTasm()
    *.mac     call s:FTasm()
    *.lst     call s:FTasm()
    *.mar     setf vmasm
    *.atl     setf atlas
    *.as      setf atlas
    *.au3     setf autoit
    *.ahk     setf autohotkey
    [mM]akefile.am
              setf automake
    GNUmakefile.am
              setf automake
    *.at      setf m4
    *.ave     setf ave
    *.awk     setf awk
    *.mch     setf b
    *.ref     setf b
    *.imp     setf b
    *.bas     call s:FTVB("basic")
    *.vb      setf vb
    *.vbs     setf vb
    *.dsm     setf vb
    *.ctl     setf vb
    *.iba     setf ibasic
    *.ibi     setf ibasic
    *.fb      setf freebasic
    *.bi      setf freebasic
    *.bat     setf dosbatch
    *.sys     setf dosbatch
    *.cmd     if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif
    *.btm     call s:FTbtm()
    *.bc      setf bc
    *.bdf     setf bdf
    *.bib     setf bib
    *.bst     setf bst
    named*.conf
              setf named
    rndc*.conf
              setf named
    rndc*.key setf named
    named.root
              setf bindzone
    *.db      call s:BindzoneCheck('')
    *.bl      setf blank
    */etc/blkid.tab
              setf xml
    */etc/blkid.tab.old
              setf xml
    *.bzl     setfiletype bzl
    WORKSPACE setfiletype bzl
    BUILD     setfiletype bzl
    *.c       call s:FTlpc()
    calendar  setf calendar
    *.cs      setf cs
    *.csdl    setf csdl
    *.cabal   setf cabal
    *.toc     setf cdrtoc
    */etc/cdrdao.conf
              setf cdrdaoconf
    */etc/defaults/cdrdao
              setf cdrdaoconf
    */etc/default/cdrdao
              setf cdrdaoconf
    .cdrdao   setf cdrdaoconf
    cfengine.conf
              setf cfengine
    *.chai    setf chaiscript
    *.cdl     setf cdl
    *.recipe  setf conaryrecipe
    *.crm     setf crm
    *.cyn     setf cynpp
    *.cc      if exists("cynlib_syntax_for_cc")|setf cynlib|else|setf cpp|endif
    *.cpp     if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif
    *.cxx     setf cpp
    *.c++     setf cpp
    *.hh      setf cpp
    *.hxx     setf cpp
    *.hpp     setf cpp
    *.ipp     setf cpp
    *.moc     setf cpp
    *.tcc     setf cpp
    *.inl     setf cpp
    *.C       setf cpp
    *.H       setf cpp
    *.h       call s:FTheader()
    *.chf     setf ch
    *.tlh     setf cpp
    *.css     setf css
    *.con     setf cterm
    changelog.Debian
              setf debchangelog
    changelog.dch
              setf debchangelog
    NEWS.Debian
              setf debchangelog
    NEWS.dch  setf debchangelog
    [cC]hange[lL]og
              if getline(1) =~ '; urgency='|   setf debchangelog| else|   setf changelog| endif
    NEWS      if getline(1) =~ '; urgency='|   setf debchangelog| endif
    *..ch     setf chill
    *.ch      call s:FTchange()
    *.chopro  setf chordpro
    *.crd     setf chordpro
    *.cho     setf chordpro
    *.crdpro  setf chordpro
    *.chordpro
              setf chordpro
    *.dcl     setf clean
    *.icl     setf clean
    *.eni     setf cl
    *.ent     call s:FTent()
    *.prg     if exists("g:filetype_prg") |   exe "setf " . g:filetype_prg | else |   setf clipper | endif
    *.clj     setf clojure
    *.cljs    setf clojure
    *.cljx    setf clojure
    *.cljc    setf clojure
    CMakeLists.txt
              setf cmake
    *.cmake   setf cmake
    *.cmake.in
              setf cmake
    */.cmus/{autosave,rc,command-history,*.theme}
              setf cmusrc
    */cmus/{rc,*.theme}
              setf cmusrc
    *.cbl     setf cobol
    *.cob     setf cobol
    *.lib     setf cobol
    *.cpy     if getline(1) =~ '^##' |   setf python | else |   setf cobol | endif
    *.atg     setf coco
    *.cfm     setf cf
    *.cfi     setf cf
    *.cfc     setf cf
    configure.in
              setf config
    configure.ac
              setf config
    *.cu      setf cuda
    Dockerfile
              setf dockerfile
    *.Dockerfile
              setf dockerfile
    *.dcd     setf dcd
    *enlightenment/*.cfg
              setf c
    *Eterm/*.cfg
              setf eterm
    *.eu      call s:EuphoriaCheck()
    *.ew      call s:EuphoriaCheck()
    *.ex      call s:EuphoriaCheck()
    *.exu     call s:EuphoriaCheck()
    *.exw     call s:EuphoriaCheck()
    *.EU      call s:EuphoriaCheck()
    *.EW      call s:EuphoriaCheck()
    *.EX      call s:EuphoriaCheck()
    *.EXU     call s:EuphoriaCheck()
    *.EXW     call s:EuphoriaCheck()
    lynx.cfg  setf lynx
    *baseq[2-3]/*.cfg
              setf quake
    *id1/*.cfg
              setf quake
    *quake[1-3]/*.cfg
              setf quake
    *.qc      setf c
    *.cfg     setf cfg
    *.feature setf cucumber
    *.csp     setf csp
    *.fdr     setf csp
    *.pld     setf cupl
    *.si      setf cuplsim
    */debian/control
              setf debcontrol
    control   if getline(1) =~ '^Source:'|   setf debcontrol| endif
    */etc/apt/sources.list
              setf debsources
    */etc/apt/sources.list.d/*.list
              setf debsources
    denyhosts.conf
              setf denyhosts
    */etc/dnsmasq.conf
              setf dnsmasq
    *.desc    setf desc
    *.d       call s:DtraceCheck()
    *.desktop setf desktop
    .directory
              setf desktop
    dict.conf setf dictconf
    .dictrc   setf dictconf
    dictd.conf
              setf dictdconf
    *.diff    setf diff
    *.rej     setf diff
    *.patch   if getline(1) =~ '^From [0-9a-f]\{40\} Mon Sep 17 00:00:00 2001$' |   setf gitsendemail | else |   setf diff | endif
    .dir_colors
              setf dircolors
    .dircolors
              setf dircolors
    */etc/DIR_COLORS
              setf dircolors
    *.rul     if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |   setf ishd | else |   setf diva | endif
    *.com     call s:BindzoneCheck('dcl')
    *.dot     setf dot
    *.lid     setf dylanlid
    *.intr    setf dylanintr
    *.dylan   setf dylan
    *.def     setf def
    *.drac    setf dracula
    *.drc     setf dracula
    *lvs      setf dracula
    *lpe      setf dracula
    *.ds      setf datascript
    *.dsl     setf dsl
    *.dtd     setf dtd
    *.dts     setf dts
    *.dtsi    setf dts
    *.ed\(f\|if\|o\)
              setf edif
    *.edn     if getline(1) =~ '^\s*(\s*edif\>' |   setf edif | else |   setf clojure | endif
    .editorconfig
              setf dosini
    *.ecd     setf ecd
    *.e       call s:FTe()
    *.E       call s:FTe()
    */etc/elinks.conf
              setf elinks
    */.elinks/elinks.conf
              setf elinks
    *.erl     setf erlang
    *.hrl     setf erlang
    *.yaws    setf erlang
    filter-rules
              setf elmfilt
    *esmtprc  setf esmtprc
    *.ec      setf esqlc
    *.EC      setf esqlc
    *.strl    setf esterel
    *.csc     setf csc
    exim.conf setf exim
    *.exp     setf expect
    exports   setf exports
    *.fal     setf falcon
    *.fan     setf fan
    *.fwt     setf fan
    *.factor  setf factor
    .fetchmailrc
              setf fetchmail
    *.fex     setf focexec
    *.focexec setf focexec
    auto.master
              setf conf
    *.mas     setf master
    *.master  setf master
    *.fs      setf forth
    *.ft      setf forth
    *.frt     setf reva
    *.F       setf fortran
    *.FOR     setf fortran
    *.FPP     setf fortran
    *.FTN     setf fortran
    *.F77     setf fortran
    *.F90     setf fortran
    *.F95     setf fortran
    *.F03     setf fortran
    *.F08     setf fortran
    *.f       setf fortran
    *.for     setf fortran
    *.fortran setf fortran
    *.fpp     setf fortran
    *.ftn     setf fortran
    *.f77     setf fortran
    *.f90     setf fortran
    *.f95     setf fortran
    *.f03     setf fortran
    *.f08     setf fortran
    *.fsl     setf framescript
    fstab     setf fstab
    mtab      setf fstab
    .gdbinit  setf gdb
    *.mo      setf gdmo
    *.gdmo    setf gdmo
    *.ged     setf gedcom
    lltxxxxx.txt
              setf gedcom
    COMMIT_EDITMSG
              setf gitcommit
    MERGE_MSG setf gitcommit
    TAG_EDITMSG
              setf gitcommit
    *.git/config
              setf gitconfig
    .gitconfig
              setf gitconfig
    .gitmodules
              setf gitconfig
    *.git/modules/*/config
              setf gitconfig
    */.config/git/config
              setf gitconfig
    git-rebase-todo
              setf gitrebase
    .gitsendemail.msg.??????
              setf gitsendemail
    .msg.[0-9]*
              if getline(1) =~ '^From.*# This line is ignored.$' |   setf gitsendemail | endif
    *.git/*   if getline(1) =~ '^\x\{40\}\>\|^ref: ' |   setf git | endif
    gkrellmrc setf gkrellmrc
    gkrellmrc_?
              setf gkrellmrc
    *.gp      setf gp
    .gprc     setf gp
    */.gnupg/options
              setf gpg
    */.gnupg/gpg.conf
              setf gpg
    */usr/*/gnupg/options.skel
              setf gpg
    gnashrc   setf gnash
    .gnashrc  setf gnash
    gnashpluginrc
              setf gnash
    .gnashpluginrc
              setf gnash
    gitolite.conf
              setf gitolite
    */gitolite-admin/conf/*
              call s:StarSetf('gitolite')
    {,.}gitolite.rc
              setf perl
    example.gitolite.rc
              setf perl
    *.gpi     setf gnuplot
    *.go      setf go
    *.gs      setf grads
    *.gretl   setf gretl
    *.gradle  setf groovy
    *.groovy  setf groovy
    *.gsp     setf gsp
    */etc/group
              setf group
    */etc/group-
              setf group
    */etc/group.edit
              setf group
    */etc/gshadow
              setf group
    */etc/gshadow-
              setf group
    */etc/gshadow.edit
              setf group
    */var/backups/group.bak
              setf group
    */var/backups/gshadow.bak
              setf group
    .gtkrc    setf gtkrc
    gtkrc     setf gtkrc
    *.haml    setf haml
    *.hsc     setf hamster
    *.hsm     setf hamster
    *.hs      setf haskell
    *.hs-boot setf haskell
    *.lhs     setf lhaskell
    *.chs     setf chaskell
    *.ht      setf haste
    *.htpp    setf hastepreproc
    *.vc      setf hercules
    *.ev      setf hercules
    *.sum     setf hercules
    *.errsum  setf hercules
    *.hex     setf hex
    *.h32     setf hex
    *.t.html  setf tilde
    *.html    call s:FThtml()
    *.htm     call s:FThtml()
    *.shtml   call s:FThtml()
    *.stm     call s:FThtml()
    *.erb     setf eruby
    *.rhtml   setf eruby
    *.html.m4 setf htmlm4
    *.tmpl    setf htmlcheetah
    */etc/host.conf
              setf hostconf
    */etc/hosts.allow
              setf hostsaccess
    */etc/hosts.deny
              setf hostsaccess
    *.hb      setf hb
    *.htt     setf httest
    *.htb     setf httest
    *.icn     setf icon
    *.idl     call s:FTidl()
    *.odl     setf msidl
    *.mof     setf msidl
    */.icewm/menu
              setf icemenu
    .indent.pro
              setf indent
    indent.pro
              call s:ProtoCheck('indent')
    *.pro     call s:ProtoCheck('idlang')
    indentrc  setf indent
    *.inf     setf inform
    *.INF     setf inform
    */etc/initng/*/*.i
              setf initng
    *.ii      setf initng
    upstream.dat\c
              setf upstreamdat
    upstream.*.dat\c
              setf upstreamdat
    *.upstream.dat\c
              setf upstreamdat
    fdrupstream.log
              setf upstreamlog
    upstream.log\c
              setf upstreamlog
    upstream.*.log\c
              setf upstreamlog
    *.upstream.log\c
              setf upstreamlog
    UPSTREAM-*.log\c
              setf upstreamlog
    upstreaminstall.log\c
              setf upstreaminstalllog
    upstreaminstall.*.log\c
              setf upstreaminstalllog
    *.upstreaminstall.log\c
              setf upstreaminstalllog
    usserver.log\c
              setf usserverlog
    usserver.*.log\c
              setf usserverlog
    *.usserver.log\c
              setf usserverlog
    usw2kagt.log\c
              setf usw2kagtlog
    usw2kagt.*.log\c
              setf usw2kagtlog
    *.usw2kagt.log\c
              setf usw2kagtlog
    ipf.conf  setf ipfilter
    ipf6.conf setf ipfilter
    ipf.rules setf ipfilter
    *.4gl     setf fgl
    *.4gh     setf fgl
    *.m4gl    setf fgl
    *.ini     setf dosini
    inittab   setf inittab
    *.iss     setf iss
    *.ijs     setf j
    *.jal     setf jal
    *.JAL     setf jal
    *.jpl     setf jam
    *.jpr     setf jam
    *.java    setf java
    *.jav     setf java
    *.jj      setf javacc
    *.jjt     setf javacc
    *.js      setf javascript
    *.javascript
              setf javascript
    *.es      setf javascript
    *.jsx     setf javascript
    *.jsp     setf jsp
    *.properties
              setf jproperties
    *.properties_??
              setf jproperties
    *.properties_??_??
              setf jproperties
    *.properties_??_??_*
              call s:StarSetf('jproperties')
    *.clp     setf jess
    *.jgr     setf jgraph
    *.jov     setf jovial
    *.j73     setf jovial
    *.jovial  setf jovial
    *.json    setf json
    *.jsonp   setf json
    *.webmanifest
              setf json
    *.kix     setf kix
    *.k       setf kwt
    *.kv      setf kivy
    *.ks      setf kscript
    Kconfig   setf kconfig
    Kconfig.debug
              setf kconfig
    *.ace     setf lace
    *.ACE     setf lace
    *.latte   setf latte
    *.lte     setf latte
    */etc/limits
              setf limits
    */etc/*limits.conf
              setf limits
    */etc/*limits.d/*.conf
              setf limits
    *.sig     setf lprolog
    *.ldif    setf ldif
    *.ld      setf ld
    *.less    setf less
    *.lex     setf lex
    *.l       setf lex
    *.lxx     setf lex
    *.l++     setf lex
    */etc/libao.conf
              setf libao
    */.libao  setf libao
    */etc/sensors.conf
              setf sensors
    */etc/sensors3.conf
              setf sensors
    lftp.conf setf lftp
    .lftprc   setf lftp
    *lftp/rc  setf lftp
    *.ll      setf lifelines
    lilo.conf setf lilo
    *.lsp     setf lisp
    *.lisp    setf lisp
    *.el      setf lisp
    *.jl      setf lisp
    *.L       setf lisp
    .emacs    setf lisp
    .sawfishrc
              setf lisp
    sbclrc    setf lisp
    .sbclrc   setf lisp
    *.liquid  setf liquid
    *.lite    setf lite
    *.lt      setf lite
    */LiteStep/*/*.rc
              setf litestep
    */etc/login.access
              setf loginaccess
    */etc/login.defs
              setf logindefs
    *.lgt     setf logtalk
    *.lot     setf lotos
    *.lotos   setf lotos
    *.lou     setf lout
    *.lout    setf lout
    *.lua     setf lua
    *.rockspec
              setf lua
    *.lsl     setf lsl
    *.lss     setf lss
    *.m4      if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif
    *.mgp     setf mgp
    snd.\d\+  setf mail
    .letter   setf mail
    .letter.\d\+
              setf mail
    .followup setf mail
    .article  setf mail
    .article.\d\+
              setf mail
    pico.\d\+ setf mail
    mutt{ng,}-*-\w\+
              setf mail
    mutt[[:alnum:]_-]\\\{6\}
              setf mail
    neomutt-*-\w\+
              setf mail
    neomutt[[:alnum:]_-]\\\{6\}
              setf mail
    ae\d\+.txt
              setf mail
    /tmp/SLRN[0-9A-Z.]\+
              setf mail
    *.eml     setf mail
    */etc/mail/aliases
              setf mailaliases
    */etc/aliases
              setf mailaliases
    .mailcap  setf mailcap
    mailcap   setf mailcap
    *[mM]akefile
              setf make
    *.mk      setf make
    *.mak     setf make
    *.dsp     setf make
    *.ist     setf ist
    *.mst     setf ist
    *.page    setf mallard
    *.man     setf nroff
    */etc/man.conf
              setf manconf
    man.config
              setf manconf
    *.mv      setf maple
    *.mpl     setf maple
    *.mws     setf maple
    *.map     setf map
    *.markdown
              setf markdown
    *.mdown   setf markdown
    *.mkd     setf markdown
    *.mkdn    setf markdown
    *.mdwn    setf markdown
    *.md      setf markdown
    *.mason   setf mason
    *.mhtml   setf mason
    *.m       call s:FTm()
    *.nb      setf mma
    *.mel     setf mel
    hg-editor-*.txt
              setf hgcommit
    *.hgrc    setf cfg
    *hgrc     setf cfg
    */log/{auth,cron,daemon,debug,kern,lpr,mail,messages,news/news,syslog,user}{,.log,.err,.info,.warn,.crit,.notice}{,.[0-9]*,-[0-9]*}setf messages
    *.mf      setf mf
    *.mp      setf mp
    *.mgl     setf mgl
    *.mix     setf mix
    *.mixal   setf mix
    *.mms     call s:FTmms()
    *.mmp     setf mmp
    *.mod     if getline(1) =~ '\<module\>' |   setf lprolog | else |   setf modsim3 | endif
    *.m2      setf modula2
    *.DEF     setf modula2
    *.MOD     setf modula2
    *.mi      setf modula2
    *.[mi][3g]
              setf modula3
    *.isc     setf monk
    *.monk    setf monk
    *.ssc     setf monk
    *.tsc     setf monk
    *.moo     setf moo
    */etc/modules.conf
              setf modconf
    */etc/modules
              setf modconf
    */etc/conf.modules
              setf modconf
    mplayer.conf
              setf mplayerconf
    */.mplayer/config
              setf mplayerconf
    *.s19     setf srec
    *.s28     setf srec
    *.s37     setf srec
    *.mot     setf srec
    *.srec    setf srec
    mrxvtrc   setf mrxvtrc
    .mrxvtrc  setf mrxvtrc
    *.msql    setf msql
    *.mysql   setf mysql
    */etc/Muttrc.d/*
              call s:StarSetf('muttrc')
    *.rc      setf rc
    *.rch     setf rc
    *.mu      setf mupad
    *.mush    setf mush
    Mutt{ng,}rc
              setf muttrc
    */etc/nanorc
              setf nanorc
    *.nanorc  setf nanorc
    *.NS[ACGLMNPS]
              setf natural
    Neomuttrc setf neomuttrc
    .netrc    setf netrc
    *.ninja   setf ninja
    *.ncf     setf ncf
    *.me      if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |   setf nroff | endif
    *.tr      setf nroff
    *.nr      setf nroff
    *.roff    setf nroff
    *.tmac    setf nroff
    *.mom     setf nroff
    *.[1-9]   call s:FTnroff()
    *.mm      call s:FTmm()
    *.nqc     setf nqc
    *.nse     setf lua
    *.nsi     setf nsis
    *.nsh     setf nsis
    *.ml      setf ocaml
    *.mli     setf ocaml
    *.mll     setf ocaml
    *.mly     setf ocaml
    .ocamlinit
              setf ocaml
    *.occ     setf occam
    *.xom     setf omnimark
    *.xin     setf omnimark
    *.or      setf openroad
    *.[Oo][Pp][Ll]
              setf opl
    *.ora     setf ora
    pf.conf   setf pf
    */etc/pam.conf
              setf pamconf
    *.papp    setf papp
    *.pxml    setf papp
    *.pxsl    setf papp
    */etc/passwd
              setf passwd
    */etc/passwd-
              setf passwd
    */etc/passwd.edit
              setf passwd
    */etc/shadow
              setf passwd
    */etc/shadow-
              setf passwd
    */etc/shadow.edit
              setf passwd
    */var/backups/passwd.bak
              setf passwd
    */var/backups/shadow.bak
              setf passwd
    *.pas     setf pascal
    *.dpr     setf pascal
    *.pdf     setf pdf
    *.pcmk    setf pcmk
    *.pl      call s:FTpl()
    *.PL      call s:FTpl()
    *.plx     setf perl
    *.al      setf perl
    *.psgi    setf perl
    *.p6      setf perl6
    *.pm6     setf perl6
    *.pl6     setf perl6
    *.pm      if getline(1) =~ "XPM2" |   setf xpm2 | elseif getline(1) =~ "XPM" |   setf xpm | else |   setf perl | endif
    *.pod     setf pod
    *.pod6    setf pod6
    *.php     setf php
    *.php\d   setf php
    *.phtml   setf php
    *.ctp     setf php
    *.pike    setf pike
    *.lpc     setf pike
    *.ulpc    setf pike
    *.pmod    setf pike
    */etc/pinforc
              setf pinfo
    */.pinforc
              setf pinfo
    *.rcp     setf pilrc
    .pinerc   setf pine
    pinerc    setf pine
    .pinercex setf pine
    pinercex  setf pine
    *.pli     setf pli
    *.pl1     setf pli
    *.plm     setf plm
    *.p36     setf plm
    *.pac     setf plm
    *.pls     setf plsql
    *.plsql   setf plsql
    *.plp     setf plp
    *.po      setf po
    *.pot     setf po
    main.cf   setf pfmain
    *.ps      setf postscr
    *.pfa     setf postscr
    *.afm     setf postscr
    *.eps     setf postscr
    *.epsf    setf postscr
    *.epsi    setf postscr
    *.ai      setf postscr
    *.ppd     setf ppd
    *.pov     setf pov
    .povrayrc setf povini
    *.inc     call s:FTinc()
    *printcap let b:ptcap_type = "print" | setf ptcap
    *termcap  let b:ptcap_type = "term" | setf ptcap
    *.g       setf pccts
    *.it      setf ppwiz
    *.ih      setf ppwiz
    *.obj     setf obj
    *.pc      setf proc
    *.action  setf privoxy
    .procmail setf procmail
    .procmailrc
              setf procmail
    *.w       call s:FTprogress_cweb()
    *.i       call s:FTprogress_asm()
    *.p       call s:FTprogress_pascal()
    *.psf     setf psf
    INDEX     if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    INFO      if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    *.pdb     setf prolog
    *.pml     setf promela
    *.proto   setf proto
    */etc/protocols
              setf protocols
    *.pyx     setf pyrex
    *.pxd     setf pyrex
    *.py      setf python
    *.pyw     setf python
    .pythonstartup
              setf python
    .pythonrc setf python
    *.ptl     setf python
    *.rad     setf radiance
    *.mat     setf radiance
    .ratpoisonrc
              setf ratpoison
    ratpoisonrc
              setf ratpoison
    *\,v      setf rcs
    .inputrc  setf readline
    inputrc   setf readline
    *.reg     if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif
    *.rib     setf rib
    *.rex     setf rexx
    *.orx     setf rexx
    *.rxo     setf rexx
    *.rxj     setf rexx
    *.jrexx   setf rexx
    *.rexxj   setf rexx
    *.rexx    setf rexx
    *.testGroup
              setf rexx
    *.testUnit
              setf rexx
    *.s       setf r
    *.S       setf r
    *.rd      setf rhelp
    *.Rd      setf rhelp
    *.Rnw     setf rnoweb
    *.rnw     setf rnoweb
    *.Snw     setf rnoweb
    *.snw     setf rnoweb
    *.Rmd     setf rmd
    *.rmd     setf rmd
    *.Smd     setf rmd
    *.smd     setf rmd
    *.Rrst    setf rrst
    *.rrst    setf rrst
    *.Srst    setf rrst
    *.srst    setf rrst
    *.r       call s:FTr()
    *.R       call s:FTr()
    .reminders
              setf remind
    *.remind  setf remind
    *.rem     setf remind
    resolv.conf
              setf resolv
    *.rnc     setf rnc
    *.rng     setf rng
    *.rpl     setf rpl
    robots.txt
              setf robots
    *.x       setf rpcgen
    *.rst     setf rst
    *.rtf     setf rtf
    .irbrc    setf ruby
    irbrc     setf ruby
    *.rb      setf ruby
    *.rbw     setf ruby
    *.gemspec setf ruby
    *.rs      setf rust
    *.ru      setf ruby
    Gemfile   setf ruby
    *.builder setf ruby
    *.rxml    setf ruby
    *.rjs     setf ruby
    [rR]antfile
              setf ruby
    *.rant    setf ruby
    [rR]akefile
              setf ruby
    *.rake    setf ruby
    *.sl      setf slang
    smb.conf  setf samba
    *.sas     setf sas
    *.sass    setf sass
    *.sa      setf sather
    *.scala   setf scala
    *.sbt     setf sbt
    *.sci     setf scilab
    *.sce     setf scilab
    *.scss    setf scss
    *.sd      setf sd
    *.sdl     setf sdl
    *.pr      setf sdl
    *.sed     setf sed
    *.siv     setf sieve
    sendmail.cf
              setf sm
    *.mc      call s:McSetf()
    */etc/services
              setf services
    */etc/slp.conf
              setf slpconf
    */etc/slp.reg
              setf slpreg
    */etc/slp.spi
              setf slpspi
    */etc/serial.conf
              setf setserial
    *.sgm     if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
    *.sgml    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
    *.decl    if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dcl     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dec     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    catalog   setf catalog
    sgml.catalog*
              call s:StarSetf('catalog')
    .bashrc*  call SetFileTypeSH("bash")
    bashrc    call SetFileTypeSH("bash")
    bash.bashrc
              call SetFileTypeSH("bash")
    .bash[_-]profile*
              call SetFileTypeSH("bash")
    .bash[_-]logout*
              call SetFileTypeSH("bash")
    .bash[_-]aliases*
              call SetFileTypeSH("bash")
    *.bash    call SetFileTypeSH("bash")
    */{,.}bash[_-]completion{,.d,.sh}{,/*}
              call SetFileTypeSH("bash")
    *.ebuild  call SetFileTypeSH("bash")
    *.eclass  call SetFileTypeSH("bash")
    PKGBUILD* call SetFileTypeSH("bash")
    .kshrc*   call SetFileTypeSH("ksh")
    *.ksh     call SetFileTypeSH("ksh")
    */etc/profile
              call SetFileTypeSH(getline(1))
    .profile* call SetFileTypeSH(getline(1))
    *.sh      call SetFileTypeSH(getline(1))
    *.env     call SetFileTypeSH(getline(1))
    *.install if getline(1) =~ '<?php' |   setf php | else |   call SetFileTypeSH("bash") | endif
    .tcshrc*  call SetFileTypeShell("tcsh")
    *.tcsh    call SetFileTypeShell("tcsh")
    tcsh.tcshrc
              call SetFileTypeShell("tcsh")
    tcsh.login
              call SetFileTypeShell("tcsh")
    .login*   call s:CSH()
    .cshrc*   call s:CSH()
    csh.cshrc call s:CSH()
    csh.login call s:CSH()
    csh.logout
              call s:CSH()
    *.csh     call s:CSH()
    .alias    call s:CSH()
    .zprofile setf zsh
    */etc/zprofile
              setf zsh
    .zfbfmarks
              setf zsh
    .zsh*     call s:StarSetf('zsh')
    .zlog*    call s:StarSetf('zsh')
    .zcompdump*
              call s:StarSetf('zsh')
    *.zsh     setf zsh
    *.scm     setf scheme
    *.ss      setf scheme
    *.rkt     setf scheme
    .screenrc setf screen
    screenrc  setf screen
    *.sim     setf simula
    *.sin     setf sinda
    *.s85     setf sinda
    *.sst     setf sisu
    *.ssm     setf sisu
    *.ssi     setf sisu
    *.-sst    setf sisu
    *._sst    setf sisu
    *.sst.meta
              setf sisu
    *.-sst.meta
              setf sisu
    *._sst.meta
              setf sisu
    *.il      setf skill
    *.ils     setf skill
    *.cdf     setf skill
    .slrnrc   setf slrnrc
    *.score   setf slrnsc
    *.st      setf st
    *.cls     if getline(1) =~ '^%' |  setf tex | elseif getline(1)[0] == '#' && getline(1) =~ 'rexx' |  setf rexx | else |  setf st | endif
    *.tpl     setf smarty
    *.smil    if getline(1) =~ '<?\s*xml.*?>' |   setf xml | else |   setf smil | endif
    *.smi     if getline(1) =~ '\<smil\>' |   setf smil | else |   setf mib | endif
    *.smt     setf smith
    *.smith   setf smith
    *.sno     setf snobol4
    *.spt     setf snobol4
    *.mib     setf mib
    *.my      setf mib
    *.hog     setf hog
    snort.conf
              setf hog
    vision.conf
              setf hog
    *.rules   call s:FTRules()
    *.spec    setf spec
    *.speedup setf spup
    *.spdata  setf spup
    *.spd     setf spup
    *.ice     setf slice
    *.sp      setf spice
    *.spice   setf spice
    *.spy     setf spyce
    *.spi     setf spyce
    squid.conf
              setf squid
    *.tyb     setf sql
    *.typ     setf sql
    *.tyc     setf sql
    *.pkb     setf sql
    *.pks     setf sql
    *.sql     call s:SQL()
    *.sqlj    setf sqlj
    *.sqr     setf sqr
    *.sqi     setf sqr
    ssh_config
              setf sshconfig
    */.ssh/config
              setf sshconfig
    sshd_config
              setf sshdconfig
    *.ado     setf stata
    *.do      setf stata
    *.imata   setf stata
    *.mata    setf stata
    *.class   if getline(1) !~ "^\xca\xfe\xba\xbe" | setf stata | endif
    *.hlp     setf smcl
    *.ihlp    setf smcl
    *.smcl    setf smcl
    *.stp     setf stp
    *.sml     setf sml
    *.cm      setf voscm
    */etc/sysctl.conf
              setf sysctl
    */etc/sysctl.d/*.conf
              setf sysctl
    */systemd/*.{automount,mount,path,service,socket,swap,target,timer}
              setf systemd
    *.sdc     setf sdc
    */etc/sudoers
              setf sudoers
    sudoers.tmp
              setf sudoers
    *.svg     setf svg
    *.t       if !s:FTnroff() && !s:FTperl() | setf tads | endif
    tags      setf tags
    *.tak     setf tak
    {pending,completed,undo}.data
              setf taskdata
    *.task    setf taskedit
    *.tcl     setf tcl
    *.tk      setf tcl
    *.itcl    setf tcl
    *.itk     setf tcl
    *.jacl    setf tcl
    *.tli     setf tli
    *.slt     setf tsalt
    *.ttl     setf teraterm
    *.ti      setf terminfo
    *.latex   setf tex
    *.sty     setf tex
    *.dtx     setf tex
    *.ltx     setf tex
    *.bbl     setf tex
    *.tex     call s:FTtex()
    tex/context/*/*.tex
              setf context
    *.mkii    setf context
    *.mkiv    setf context
    *.mkvi    setf context
    *.texinfo setf texinfo
    *.texi    setf texinfo
    *.txi     setf texinfo
    texmf.cnf setf texmf
    .tidyrc   setf tidy
    tidyrc    setf tidy
    *.tf      setf tf
    .tfrc     setf tf
    tfrc      setf tf
    {.,}tmux*.conf
              setf tmux
    *.tpp     setf tpp
    *.treetop setf treetop
    trustees.conf
              setf trustees
    *.tssgm   setf tssgm
    *.tssop   setf tssop
    *.tsscl   setf tsscl
    *.tutor   setf tutor
    *.twig    setf twig
    *.uit     setf uil
    *.uil     setf uil
    */etc/udev/udev.conf
              setf udevconf
    */etc/udev/permissions.d/*.permissions
              setf udevperm
    */etc/udev/cdsymlinks.conf
              setf sh
    *.uc      setf uc
    */etc/updatedb.conf
              setf updatedb
    */usr/share/upstart/*.conf
              setf upstart
    */usr/share/upstart/*.override
              setf upstart
    */etc/init/*.conf
              setf upstart
    */etc/init/*.override
              setf upstart
    */.init/*.conf
              setf upstart
    */.init/*.override
              setf upstart
    */.config/upstart/*.conf
              setf upstart
    */.config/upstart/*.override
              setf upstart
    *.vr      setf vera
    *.vri     setf vera
    *.vrh     setf vera
    *.v       setf verilog
    *.va      setf verilogams
    *.vams    setf verilogams
    *.sv      setf systemverilog
    *.svh     setf systemverilog
    *.hdl     setf vhdl
    *.vhd     setf vhdl
    *.vhdl    setf vhdl
    *.vbe     setf vhdl
    *.vst     setf vhdl
    *.vhdl_[0-9]*
              call s:StarSetf('vhdl')
    *.vim     setf vim
    *.vba     setf vim
    .exrc     setf vim
    _exrc     setf vim
    .viminfo  setf viminfo
    _viminfo  setf viminfo
    *.hw      if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.module  if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.pkg     if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.frm     call s:FTVB("form")
    *.sba     setf vb
    vgrindefs setf vgrindefs
    *.wrl     setf vrml
    *.vroom   setf vroom
    *.wm      setf webmacro
    .wgetrc   setf wget
    wgetrc    setf wget
    *.wml     setf wml
    *.wbt     setf winbatch
    *.wsml    setf wsml
    *.wpl     setf xml
    wvdial.conf
              setf wvdial
    .wvdialrc setf wvdial
    .cvsrc    setf cvsrc
    cvs\d\+   setf cvs
    *.web     if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |   setf web | else |   setf winbatch | endif
    *.ws[fc]  setf wsh
    *.xhtml   setf xhtml
    *.xht     setf xhtml
    XF86Config
              if getline(1) =~ '\<XConfigurator\>' |   let b:xf86conf_xfree86_version = 3 | endif | setf xf86conf
    */xorg.conf.d/*.conf
              let b:xf86conf_xfree86_version = 4 | setf xf86conf
    xorg.conf let b:xf86conf_xfree86_version = 4 | setf xf86conf
    xorg.conf-4
              let b:xf86conf_xfree86_version = 4 | setf xf86conf
    */etc/xinetd.conf
              setf xinetd
    *.xs      setf xs
    .Xdefaults
              setf xdefaults
    .Xpdefaults
              setf xdefaults
    .Xresources
              setf xdefaults
    xdm-config
              setf xdefaults
    *.ad      setf xdefaults
    *.msc     setf xmath
    *.msf     setf xmath
    *.ms      if !s:FTnroff() | setf xmath | endif
    *.xml     call s:FTxml()
    *.xmi     setf xml
    *.csproj  setf xml
    *.csproj.user
              setf xml
    *.ts      setf xml
    *.ui      setf xml
    *.tpm     setf xml
    */etc/xdg/menus/*.menu
              setf xml
    fglrxrc   setf xml
    *.xlf     setf xml
    *.xliff   setf xml
    *.xul     setf xml
    *Xmodmap  setf xmodmap
    *.xq      setf xquery
    *.xql     setf xquery
    *.xqm     setf xquery
    *.xquery  setf xquery
    *.xqy     setf xquery
    *.xsd     setf xsd
    *.xsl     setf xslt
    *.xslt    setf xslt
    *.yy      setf yacc
    *.yxx     setf yacc
    *.y++     setf yacc
    *.y       call s:FTy()
    *.yaml    setf yaml
    *.yml     setf yaml
    */etc/yum.conf
              setf dosini
    *.zu      setf zimbu
    *.zut     setf zimbutempl
    *.dtml    call s:FThtml()
    *.pt      call s:FThtml()
    *.cpt     call s:FThtml()
    *.zsql    call s:SQL()
    *.z8a     setf z8a
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
    access.conf*
              call s:StarSetf('apache')
    apache.conf*
              call s:StarSetf('apache')
    apache2.conf*
              call s:StarSetf('apache')
    httpd.conf*
              call s:StarSetf('apache')
    srm.conf* call s:StarSetf('apache')
    */etc/apache2/*.conf*
              call s:StarSetf('apache')
    */etc/apache2/conf.*/*
              call s:StarSetf('apache')
    */etc/apache2/mods-*/*
              call s:StarSetf('apache')
    */etc/apache2/sites-*/*
              call s:StarSetf('apache')
    */etc/httpd/conf.d/*.conf*
              call s:StarSetf('apache')
    *asterisk/*.conf*
              call s:StarSetf('asterisk')
    *asterisk*/*voicemail.conf*
              call s:StarSetf('asteriskvm')
    bzr_log.* setf bzr
    */named/db.*
              call s:StarSetf('bindzone')
    */bind/db.*
              call s:StarSetf('bindzone')
    */.calendar/*
              call s:StarSetf('calendar')
    */share/calendar/*/calendar.*
              call s:StarSetf('calendar')
    */share/calendar/calendar.*
              call s:StarSetf('calendar')
    [cC]hange[lL]og*
              if getline(1) =~ '; urgency='|  call s:StarSetf('debchangelog')|else|  call s:StarSetf('changelog')|endif
    crontab   call s:StarSetf('crontab')
    crontab.* call s:StarSetf('crontab')
    */etc/cron.d/*
              call s:StarSetf('crontab')
    */etc/dnsmasq.d/*
              call s:StarSetf('dnsmasq')
    drac.*    call s:StarSetf('dracula')
    */.fvwm/* call s:StarSetf('fvwm')
    *fvwmrc*  let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm95*.hook
              let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm2rc* if expand("<afile>:e") == "m4"|  call s:StarSetf('fvwm2m4')|else|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')|endif
    */tmp/lltmp*
              call s:StarSetf('gedcom')
    .gtkrc*   call s:StarSetf('gtkrc')
    gtkrc*    call s:StarSetf('gtkrc')
    Prl*.*    call s:StarSetf('jam')
    JAM*.*    call s:StarSetf('jam')
    *jarg*    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'|  call s:StarSetf('jargon')|endif
    Kconfig.* call s:StarSetf('kconfig')
    lilo.conf*
              call s:StarSetf('lilo')
    */etc/logcheck/*.d*/*
              call s:StarSetf('logcheck')
    [mM]akefile*
              call s:StarSetf('make')
    [rR]akefile*
              call s:StarSetf('ruby')
    {neo,}mutt[[:alnum:]._-]\\\{6\}
              setf mail
    reportbug-*
              call s:StarSetf('mail')
    */etc/modutils/*
              if executable(expand("<afile>")) != 1|  call s:StarSetf('modconf')|endif
    */etc/modprobe.*
              call s:StarSetf('modconf')
    .mutt{ng,}rc*
              call s:StarSetf('muttrc')
    */.mutt{ng,}/mutt{ng,}rc*
              call s:StarSetf('muttrc')
    mutt{ng,}rc*
              call s:StarSetf('muttrc')
    Mutt{ng,}rc*
              call s:StarSetf('muttrc')
    .neomuttrc*
              call s:StarSetf('neomuttrc')
    */.neomutt/neomuttrc*
              call s:StarSetf('neomuttrc')
    neomuttrc*
              call s:StarSetf('neomuttrc')
    Neomuttrc*
              call s:StarSetf('neomuttrc')
    tmac.*    call s:StarSetf('nroff')
    /etc/hostname.*
              call s:StarSetf('config')
    */etc/pam.d/*
              call s:StarSetf('pamconf')
    *printcap*
              if !did_filetype()|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')|endif
    *termcap* if !did_filetype()|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')|endif
    *.rdf     call s:Redif()
    .reminders*
              call s:StarSetf('remind')
    *vimrc*   call s:StarSetf('vim')
    svn-commit*.tmp
              setf svn
    Xresources*
              call s:StarSetf('xdefaults')
    */app-defaults/*
              call s:StarSetf('xdefaults')
    */Xresources/*
              call s:StarSetf('xdefaults')
    XF86Config-4*
              let b:xf86conf_xfree86_version = 4 | call s:StarSetf('xf86conf')
    XF86Config*
              if getline(1) =~ '\<XConfigurator\>'|  let b:xf86conf_xfree86_version = 3|endif|call s:StarSetf('xf86conf')
    *xmodmap* call s:StarSetf('xmodmap')
    */etc/xinetd.d/*
              call s:StarSetf('xinetd')
    */etc/yum.repos.d/*
              call s:StarSetf('dosini')
    zsh*      call s:StarSetf('zsh')
    zlog*     call s:StarSetf('zsh')
    *.txt     setf text
    *.text    setf text
    README    setf text
    *.snip    set filetype=neosnippet
    *.snippets
              set filetype=neosnippet
    *.vb      setlocal filetype=vbnet
    *.jl      set filetype=julia
    *.coffee  set filetype=coffee
    *Cakefile set filetype=coffee
    *.coffeekup
              set filetype=coffee
    *.ck      set filetype=coffee
    *._coffee set filetype=coffee
    *.litcoffee
              set filetype=litcoffee
    *.coffee.md
              set filetype=litcoffee
    *.ex      call s:setf('elixir')
    *.exs     call s:setf('elixir')
    *.eex     call s:setf('eelixir')
    *.fish    setfiletype fish
    /home/saul/.config/fish/fish_{read_,}history
              setfiletype yaml
    /home/saul/.config/fish/fishd.*
              setlocal readonly
    /home/saul/.config/fish/functions/*.fish
              call append(0, ['function '.expand('%:t:r'),'','end']) | 2
    *.git/{,modules/**/,worktrees/*/}{COMMIT_EDIT,TAG_EDIT,MERGE_,}MSG
              set ft=gitcommit
    *.git/config
              set ft=gitconfig
    .gitconfig
              set ft=gitconfig
    gitconfig set ft=gitconfig
    .gitmodules
              set ft=gitconfig
    */.config/git/config
              set ft=gitconfig
    *.git/modules/**/config
              set ft=gitconfig
    git-rebase-todo
              set ft=gitrebase
    .gitsendemail.*
              set ft=gitsendemail
    *.pu      setfiletype plantuml | set filetype=plantuml
    *.uml     setfiletype plantuml | set filetype=plantuml
    *.plantuml
              setfiletype plantuml | set filetype=plantuml
    *.scala   set filetype=scala
    *.sc      set filetype=scala
    *.sbt     setfiletype sbt.scala
    *.swift   set filetype=swift
    *.apib    set filetype=apiblueprint
    *.scpt    setf applescript
    *.applescript
              setf applescript
    *.asciidoc
              set ft=asciidoc
    *.adoc    set ft=asciidoc
    *         if s:isAnsible() | set ft=yaml.ansible | en
    *.j2      call s:setupTemplate()
    hosts     set ft=ansible_hosts
    *.ino     set filetype=arduino
    *.pde     set filetype=arduino
    *.blade.php
              set filetype=blade
    Caddyfile set ft=caddyfile
    *.carp    set filetype=carp
CJSX  BufNewFile
    *.csx     set filetype=coffee
    *.cjsx    set filetype=coffee
filetypedetect  BufNewFile
    *.clj     setlocal filetype=clojure
    *.cljs    setlocal filetype=clojure
    *.edn     setlocal filetype=clojure
    *.cljx    setlocal filetype=clojure
    *.cljc    setlocal filetype=clojure
    {build,profile}.boot
              setlocal filetype=clojure
    *.cry     set filetype=cryptol
    *.cyl     set filetype=cryptol
    *.lcry    set filetype=cryptol
    *.lcyl    set filetype=cryptol
    *.cr      setlocal filetype=crystal
    Projectfile
              setlocal filetype=crystal
    *.ecr     setlocal filetype=eruby
    *.cql     set filetype=cql
    *.feature set filetype=cucumber
    *.story   set filetype=cucumber
    *.dart    set filetype=dart
    *.elm     set filetype=elm
    *.em      set filetype=ember-script
    *.emblem  set filetype=emblem
    *.erl     set ft=erlang
    *.hrl     set ft=erlang
    rebar.config
              set ft=erlang
    *.app     set ft=erlang
    *.app.src set ft=erlang
    *.yaws    set ft=erlang
    *.xrl     set ft=erlang
    *.escript set ft=erlang
    ferm.conf setf ferm 
    *.ferm    setf ferm
    *.fs      set filetype=fsharp
    *.fsi     set filetype=fsharp
    *.fsx     set filetype=fsharp
    *.mod     set filetype=gmpl
    *.vert    set filetype=glsl
    *.tesc    set filetype=glsl
    *.tese    set filetype=glsl
    *.glsl    set filetype=glsl
    *.geom    set filetype=glsl
    *.frag    set filetype=glsl
    *.comp    set filetype=glsl
    *.go      setfiletype go | setlocal fileencoding=utf-8 fileformat=unix
    *.s       setfiletype asm | setlocal fileencoding=utf-8 fileformat=unix
    *.tmpl    set filetype=gohtmltmpl
    *.graphql setfiletype graphql
    *.graphqls
              setfiletype graphql
    *.gql     setfiletype graphql
    *.sass    setf sass
    *.scss    setf scss
    *.mustache
              set filetype=html.mustache syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.hogan   set filetype=html.mustache syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.hulk    set filetype=html.mustache syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.hjs     set filetype=html.mustache syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.handlebars
              set filetype=html.handlebars syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.hbs     set filetype=html.handlebars syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    haproxy*.c*
              set ft=haproxy
    *.hsc     set filetype=haskell
    *.bpk     set filetype=haskell
    *.hsig    set filetype=haskell
    *.hx      setf haxe
i3_ftdetect  BufNewFile
    *i3/config
              set ft=i3
    *sway/config
              set ft=i3
filetypedetect  BufNewFile
    *Spec.js  set filetype=jasmine.javascript syntax=jasmine
    *_spec.js set filetype=jasmine.javascript syntax=jasmine
javascript_syntax_detection  BufNewFile
    *.{js,mjs,jsm,es,es6}
              setfiletype javascript
    Jakefile  setfiletype javascript
    *         call s:SelectJavascript()
filetypedetect  BufNewFile
    Jenkinsfile
              set ft=Jenkinsfile
    Jenkinsfile*
              setf Jenkinsfile
    *.jenkinsfile
              set ft=Jenkinsfile
              setf Jenkinsfile
    *.json    setlocal filetype=json
    *.jsonl   setlocal filetype=json
    *.jsonp   setlocal filetype=json
    *.geojson setlocal filetype=json
    *.template
              setlocal filetype=json
    *.json5   setfiletype json5
    *.ejs     set filetype=jst
    *.jst     set filetype=jst
    *.djs     set filetype=jst
    *.hamljs  set filetype=jst
    *.ect     set filetype=jst
    *.jsx     let b:jsx_ext_found = 1
              set filetype=javascript.jsx
    *.js      if <SID>EnableJSX() | set filetype=javascript.jsx | endif
    *.kt      setfiletype kotlin
    *.kts     setfiletype kotlin
    *.less    setf less
    *.liquid  set ft=liquid
    */_layouts/*.html
              set ft=liquid
    */_includes/*.html
              set ft=liquid
    *.html    if getline(1) == '---' | set ft=liquid | endif
    *.xml     if getline(1) == '---' | set ft=liquid | endif
    *.textile if getline(1) == '---' | set ft=liquid | endif
    *.markdown
              if getline(1) == '---' |   let b:liquid_subtype = 'markdown' |   set ft=liquid | endif
    *.mkd     if getline(1) == '---' |   let b:liquid_subtype = 'markdown' |   set ft=liquid | endif
    *.mkdn    if getline(1) == '---' |   let b:liquid_subtype = 'markdown' |   set ft=liquid | endif
    *.md      if getline(1) == '---' |   let b:liquid_subtype = 'markdown' |   set ft=liquid | endif
    */templates/**.liquid
              let b:liquid_subtype = 'html' | set ft=liquid |
    */layout/**.liquid
              let b:liquid_subtype = 'html' | set ft=liquid |
    */snippets/**.liquid
              let b:liquid_subtype = 'html' | set ft=liquid |
    *.ls      set filetype=ls
    *Slakefile
              set filetype=ls
    *.*.mako  execute "do BufNewFile filetypedetect " . expand("<afile>:r") | let b:mako_outer_lang = &filetype
    *.mako    set filetype=mako
    *.{md,mdown,mkd,mkdn,markdown,mdwn}
              set filetype=markdown
    *.{md,mdown,mkd,mkdn,markdown,mdwn}.{des3,des,bf,bfa,aes,idea,cast,rc2,rc4,rc5,desx}
              set filetype=markdown
    *.nginx   set ft=nginx
    nginx*.conf
              set ft=nginx
    *nginx.conf
              set ft=nginx
    */etc/nginx/*
              set ft=nginx
    */usr/local/nginx/conf/*
              set ft=nginx
    *.nim     set filetype=nim
    *.nims    set filetype=nim
    *.nix     set filetype=nix
    *.cl      set filetype=opencl
    *.nqp     setf perl6
    *.pgsql   setf pgsql
    *.ps1     set ft=ps1
    *.psd1    set ft=ps1
    *.psm1    set ft=ps1
    *.pssc    set ft=ps1
    *.ps1xml  set ft=ps1xml
    *.cdxml   set ft=xml
    *.psc1    set ft=xml
    *.proto   setfiletype proto
    *.pug     set filetype=pug
    *.jade    set filetype=pug
    *.pp      setfiletype puppet
    Puppetfile
              setfiletype ruby
    *.purs    setf purescript
    *.qml     setfiletype qml
    *.rkt     set filetype=racket
    *.rktl    set filetype=racket
    *.raml    set ft=raml
    *.erb     call s:setf('eruby')
    *.rhtml   call s:setf('eruby')
    .irbrc    call s:setf('ruby')
    irbrc     call s:setf('ruby')
    *.rb      call s:setf('ruby')
    *.rbw     call s:setf('ruby')
    *.gemspec call s:setf('ruby')
    *.ru      call s:setf('ruby')
    Gemfile   call s:setf('ruby')
    *.builder call s:setf('ruby')
    *.rxml    call s:setf('ruby')
    *.rjs     call s:setf('ruby')
    *.ruby    call s:setf('ruby')
    [rR]akefile
              call s:setf('ruby')
    *.rake    call s:setf('ruby')
    [rR]akefile*
              call s:StarSetf('ruby')
    [rR]antfile
              call s:setf('ruby')
    *.rant    call s:setf('ruby')
    Appraisals
              call s:setf('ruby')
    .autotest call s:setf('ruby')
    [Bb]uildfile
              call s:setf('ruby')
    Capfile   call s:setf('ruby')
    *.cap     call s:setf('ruby')
    Cheffile  call s:setf('ruby')
    Berksfile call s:setf('ruby')
    Podfile   call s:setf('ruby')
    *.podspec call s:setf('ruby')
    Guardfile call s:setf('ruby')
    .Guardfile
              call s:setf('ruby')
    *.jbuilder
              call s:setf('ruby')
    KitchenSink
              call s:setf('ruby')
    *.opal    call s:setf('ruby')
    .pryrc    call s:setf('ruby')
    Puppetfile
              call s:setf('ruby')
    *.rabl    call s:setf('ruby')
    [rR]outefile
              call s:setf('ruby')
    .simplecov
              call s:setf('ruby')
    [tT]horfile
              call s:setf('ruby')
    *.thor    call s:setf('ruby')
    [vV]agrantfile
              call s:setf('ruby')
    *.rs      set filetype=rust
    Cargo.toml
              if &filetype == "" | set filetype=cfg | endif
    *.sbt     set filetype=sbt.scala
    *.scss    setfiletype scss
    *.slim    setfiletype slim
    *.slime   set filetype=slime
    *.sol     setf solidity
    *.styl    set filetype=stylus
    *.stylus  set filetype=stylus
    sxhkdrc   set ft=sxhkdrc
    *.sxhkdrc set ft=sxhkdrc
    *.automount
              set filetype=systemd
    *.mount   set filetype=systemd
    *.path    set filetype=systemd
    *.service set filetype=systemd
    *.socket  set filetype=systemd
    *.swap    set filetype=systemd
    *.target  set filetype=systemd
    *.timer   set filetype=systemd
    *.tf      setlocal filetype=terraform
    *.tfvars  setlocal filetype=terraform
    *.tfstate setlocal filetype=javascript
    *.textile set filetype=textile
    *.thrift  setlocal filetype=thrift
    {.,}tmux*.conf*
              setfiletype tmux
    *.toml    set filetype=toml
    Gopkg.lock
              set filetype=toml
    Cargo.lock
              set filetype=toml
    */.cargo/config
              set filetype=toml
    Pipfile   set filetype=toml
    *.twig    set filetype=html.twig
    *.html.twig
              set filetype=html.twig
    *.xml.twig
              set filetype=xml.twig
    *.ts      set filetype=typescript
    *.tsx     setfiletype typescript
    *.vala    setfiletype vala
    *.vapi    setfiletype vala
    *.valadoc setfiletype vala
    *.vcl     set filetype=vcl
    vifm.rename*
              :set filetype=vifm-rename
    vifmrc    :set filetype=vifm
    *vifm/colors/*
              :set filetype=vifm
    *.vue     setf vue
    *.wpy     setf vue
    *.vm      set ft=velocity syntax=velocity
BufNewFile
    *_spec.rb set syntax=rspec
              setlocal commentstring=#\ %s
filetypedetect  BufNewFile
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif
ComandosAutomaticosGuardarLeer  BufNewFile
    *         call CrearDirectorioSiNoExiste()
nvim_terminal  BufReadCmd
    term://*  :if !exists('b:term_title')|call termopen( matchstr(expand("<amatch>"), '\c\mterm://\%(.\{-}//\%(\d\+:\)\?\)\?\zs.*'), {'cwd': get(matchlist(expand("<amatch>"), '\c\mterm://\(.\{-}\)//'), 1, '')})|endif
fugitive  BufReadCmd
    index{,.lock}
              if FugitiveIsGitDir(expand('<amatch>:p:h')) |   let b:git_dir = s:Slash(expand('<amatch>:p:h')) |   exe fugitive#BufReadStatus() | elseif filereadable(expand('<amatch>')) |   read <amatch> |   1delete_ | endif
    fugitive://*//*
              exe fugitive#BufReadCmd()
man  BufReadCmd
    man://*   call man#read_page(matchstr(expand('<amatch>'), 'man://\zs.*'))
Network  BufReadCmd
    file://*  call netrw#FileUrlRead(expand("<amatch>"))
    ftp://*   exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    rcp://*   exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    scp://*   exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    http://*  exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    file://*  exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    https://* exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    dav://*   exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    davs://*  exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    rsync://* exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    sftp://*  exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
ShaDaCommands  BufReadCmd
    *.shada   :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call setline('.', shada#get_strings(readfile(expand('<afile>'),'b'))) |setlocal filetype=shada
    *.shada.tmp.[a-z]
              :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call setline('.', shada#get_strings(readfile(expand('<afile>'),'b'))) |setlocal filetype=shada
tar  BufReadCmd
    tarfile::*
              call tar#Read(expand("<amatch>"), 1)
    tarfile::*/*
              call tar#Read(expand("<amatch>"), 1)
    *.tar.gz  call tar#Browse(expand("<amatch>"))
    *.tar     call tar#Browse(expand("<amatch>"))
    *.lrp     call tar#Browse(expand("<amatch>"))
    *.tar.bz2 call tar#Browse(expand("<amatch>"))
    *.tar.Z   call tar#Browse(expand("<amatch>"))
    *.tgz     call tar#Browse(expand("<amatch>"))
    *.tbz     call tar#Browse(expand("<amatch>"))
    *.tar.lzma
              call tar#Browse(expand("<amatch>"))
    *.tar.xz  call tar#Browse(expand("<amatch>"))
    *.txz     call tar#Browse(expand("<amatch>"))
zip  BufReadCmd
    zipfile:* call zip#Read(expand("<amatch>"), 1)
    zipfile:*/*
              call zip#Read(expand("<amatch>"), 1)
    *.apk     call zip#Browse(expand("<amatch>"))
    *.celzip  call zip#Browse(expand("<amatch>"))
    *.crtx    call zip#Browse(expand("<amatch>"))
    *.docm    call zip#Browse(expand("<amatch>"))
    *.docx    call zip#Browse(expand("<amatch>"))
    *.dotm    call zip#Browse(expand("<amatch>"))
    *.dotx    call zip#Browse(expand("<amatch>"))
    *.ear     call zip#Browse(expand("<amatch>"))
    *.epub    call zip#Browse(expand("<amatch>"))
    *.gcsx    call zip#Browse(expand("<amatch>"))
    *.glox    call zip#Browse(expand("<amatch>"))
    *.gqsx    call zip#Browse(expand("<amatch>"))
    *.ja      call zip#Browse(expand("<amatch>"))
    *.jar     call zip#Browse(expand("<amatch>"))
    *.kmz     call zip#Browse(expand("<amatch>"))
    *.oxt     call zip#Browse(expand("<amatch>"))
    *.potm    call zip#Browse(expand("<amatch>"))
    *.potx    call zip#Browse(expand("<amatch>"))
    *.ppam    call zip#Browse(expand("<amatch>"))
    *.ppsm    call zip#Browse(expand("<amatch>"))
    *.ppsx    call zip#Browse(expand("<amatch>"))
    *.pptm    call zip#Browse(expand("<amatch>"))
    *.pptx    call zip#Browse(expand("<amatch>"))
    *.sldx    call zip#Browse(expand("<amatch>"))
    *.thmx    call zip#Browse(expand("<amatch>"))
    *.vdw     call zip#Browse(expand("<amatch>"))
    *.war     call zip#Browse(expand("<amatch>"))
    *.wsz     call zip#Browse(expand("<amatch>"))
    *.xap     call zip#Browse(expand("<amatch>"))
    *.xlam    call zip#Browse(expand("<amatch>"))
              call zip#Browse(expand("<amatch>"))
    *.xlsb    call zip#Browse(expand("<amatch>"))
    *.xlsm    call zip#Browse(expand("<amatch>"))
    *.xlsx    call zip#Browse(expand("<amatch>"))
    *.xltm    call zip#Browse(expand("<amatch>"))
    *.xltx    call zip#Browse(expand("<amatch>"))
    *.xpi     call zip#Browse(expand("<amatch>"))
    *.zip     call zip#Browse(expand("<amatch>"))
BufReadPost
    *_spec.rb set syntax=rspec
              setlocal commentstring=#\ %s
fugitive  BufReadPost
    *         call FugitiveDetect(expand('<amatch>:p'))
ALEEvents  BufReadPost
    *         call ale#events#ReadOrEnterEvent(str2nr(expand('<abuf>')))
PluginEasyTags  BufReadPost
    *         unlet! b:easytags_last_highlighted
NERDCommenter  BufReadPost
    *         :call s:SetUpForNewFiletype(&filetype, 0)
gzip  BufReadPost
    *.gz      call gzip#read("gzip -dn")
    *.bz2     call gzip#read("bzip2 -d")
    *.Z       call gzip#read("uncompress")
    *.lzma    call gzip#read("lzma -d")
    *.xz      call gzip#read("xz -d")
    *.lz      call gzip#read("lzip -d")
    *.zst     call gzip#read("zstd -d --rm")
indentLine  BufReadPost
    *         call <SID>InitColor()
BufReadPost
    *         call s:wordcount_update()
fugitive_temp  BufReadPost
    *         exe s:SetupTemp(expand('<amatch>:p'))
deoplete  BufReadPost
    *         if !&l:previewwindow | call deoplete#send_event('BufReadPost') | endif
TagbarAutoCmds  BufReadPost
    *         call s:AutoUpdate(fnamemodify(expand('<afile>'), ':p'), 0)
neosnippet  BufReadPost
    *         execute 'syntax match neosnippetExpandSnippets'  "'".neosnippet#get_placeholder_marker_pattern(). '\|' .neosnippet#get_sync_placeholder_marker_pattern().'\|' .neosnippet#get_mirror_placeholder_marker_pattern()."'" 'containedin=ALL oneline'
              syntax region neosnippetConcealExpandSnippets matchgroup=neosnippetExpandSnippets start='<`\d\+:\=\%(#:\)\?\|<{\d\+:\=\%(#:\)\?\|<|' end='`>\|}>\||>' containedin=ALL concealends oneline
filetypedetect  BufReadPost
    ?\+.orig  exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.bak   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.old   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.new   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-dist
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-old
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-new
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-bak
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmsave
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmnew
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.pacsave
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.pacnew
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    *~        let s:name = expand("<afile>") | let s:short = substitute(s:name, '\~$', '', '') | if s:name != s:short && s:short != "" |   exe "doau filetypedetect BufRead " . fnameescape(s:short) | endif | unlet! s:name s:short
    ?\+.in    if expand("<afile>:t") != "configure.in" |   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) | endif
    *.inp     call s:Check_inp()
    *.aap     setf aap
    */etc/a2ps.cfg
              setf a2ps
    */etc/a2ps/*.cfg
              setf a2ps
    a2psrc    setf a2ps
    .a2psrc   setf a2ps
    *.abap    setf abap
    *.abc     setf abc
    *.abl     setf abel
    *.wrm     setf acedb
    *.adb     setf ada
    *.ads     setf ada
    *.ada     setf ada
    *.gpr     setf ada
    *.tdf     setf ahdl
    *.run     setf ampl
    build.xml setf ant
    *.ino     setf arduino
    *.pde     setf arduino
    proftpd.conf*
              call s:StarSetf('apachestyle')
    .htaccess setf apache
    */etc/httpd/*.conf
              setf apache
    *.a65     setf a65
    *.scpt    setf applescript
    *.am      if expand("<afile>") !~? 'Makefile.am\>' | setf elf | endif
    .asoundrc setf alsaconf
    */usr/share/alsa/alsa.conf
              setf alsaconf
    */etc/asound.conf
              setf alsaconf
    *.aml     setf aml
    apt.conf  setf aptconf
    */.aptitude/config
              setf aptconf
    */etc/apt/apt.conf.d/{[-_[:alnum:]]\+,[-_.[:alnum:]]\+.conf}
              setf aptconf
    .arch-inventory
              setf arch
    =tagging-method
              setf arch
    *.art     setf art
    *.asciidoc
              setf asciidoc
    *.adoc    setf asciidoc
    *.asn     setf asn
    *.asn1    setf asn
    *.asa     if exists("g:filetype_asa") |   exe "setf " . g:filetype_asa | else |   setf aspvbs | endif
    *.asp     if exists("g:filetype_asp") |   exe "setf " . g:filetype_asp | elseif getline(1) . getline(2) . getline(3) =~? "perlscript" |   setf aspperl | else |   setf aspvbs | endif
    */boot/grub/menu.lst
              setf grub
    */boot/grub/grub.conf
              setf grub
    */etc/grub.conf
              setf grub
    *.asm     call s:FTasm()
    *.[sS]    call s:FTasm()
    *.[aA]    call s:FTasm()
    *.mac     call s:FTasm()
    *.lst     call s:FTasm()
    *.mar     setf vmasm
    *.atl     setf atlas
    *.as      setf atlas
    *.au3     setf autoit
    *.ahk     setf autohotkey
    [mM]akefile.am
              setf automake
    GNUmakefile.am
              setf automake
    *.at      setf m4
    *.ave     setf ave
    *.awk     setf awk
    *.mch     setf b
    *.ref     setf b
    *.imp     setf b
    *.bas     call s:FTVB("basic")
    *.vb      setf vb
    *.vbs     setf vb
    *.dsm     setf vb
    *.ctl     setf vb
    *.iba     setf ibasic
    *.ibi     setf ibasic
    *.fb      setf freebasic
    *.bi      setf freebasic
    *.bat     setf dosbatch
    *.sys     setf dosbatch
    *.cmd     if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif
    *.btm     call s:FTbtm()
    *.bc      setf bc
    *.bdf     setf bdf
    *.bib     setf bib
    *.bst     setf bst
    named*.conf
              setf named
    rndc*.conf
              setf named
    rndc*.key setf named
    named.root
              setf bindzone
    *.db      call s:BindzoneCheck('')
    *.bl      setf blank
    */etc/blkid.tab
              setf xml
    */etc/blkid.tab.old
              setf xml
    *.bzl     setfiletype bzl
    WORKSPACE setfiletype bzl
    BUILD     setfiletype bzl
    *.c       call s:FTlpc()
    calendar  setf calendar
    *.cs      setf cs
    *.csdl    setf csdl
    *.cabal   setf cabal
    *.toc     setf cdrtoc
    */etc/cdrdao.conf
              setf cdrdaoconf
    */etc/defaults/cdrdao
              setf cdrdaoconf
    */etc/default/cdrdao
              setf cdrdaoconf
    .cdrdao   setf cdrdaoconf
    cfengine.conf
              setf cfengine
    *.chai    setf chaiscript
    *.cdl     setf cdl
    *.recipe  setf conaryrecipe
    *.crm     setf crm
    *.cyn     setf cynpp
    *.cc      if exists("cynlib_syntax_for_cc")|setf cynlib|else|setf cpp|endif
    *.cpp     if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif
    *.cxx     setf cpp
    *.c++     setf cpp
    *.hh      setf cpp
    *.hxx     setf cpp
    *.hpp     setf cpp
    *.ipp     setf cpp
    *.moc     setf cpp
    *.tcc     setf cpp
    *.inl     setf cpp
    *.C       setf cpp
    *.H       setf cpp
    *.h       call s:FTheader()
    *.chf     setf ch
    *.tlh     setf cpp
    *.css     setf css
    *.con     setf cterm
    changelog.Debian
              setf debchangelog
    changelog.dch
              setf debchangelog
    NEWS.Debian
              setf debchangelog
    NEWS.dch  setf debchangelog
    [cC]hange[lL]og
              if getline(1) =~ '; urgency='|   setf debchangelog| else|   setf changelog| endif
    NEWS      if getline(1) =~ '; urgency='|   setf debchangelog| endif
    *..ch     setf chill
    *.ch      call s:FTchange()
    *.chopro  setf chordpro
    *.crd     setf chordpro
    *.cho     setf chordpro
    *.crdpro  setf chordpro
    *.chordpro
              setf chordpro
    *.dcl     setf clean
    *.icl     setf clean
    *.eni     setf cl
    *.ent     call s:FTent()
    *.prg     if exists("g:filetype_prg") |   exe "setf " . g:filetype_prg | else |   setf clipper | endif
    *.clj     setf clojure
    *.cljs    setf clojure
    *.cljx    setf clojure
    *.cljc    setf clojure
    CMakeLists.txt
              setf cmake
    *.cmake   setf cmake
    *.cmake.in
              setf cmake
    */.cmus/{autosave,rc,command-history,*.theme}
              setf cmusrc
    */cmus/{rc,*.theme}
              setf cmusrc
    *.cbl     setf cobol
    *.cob     setf cobol
    *.lib     setf cobol
    *.cpy     if getline(1) =~ '^##' |   setf python | else |   setf cobol | endif
    *.atg     setf coco
    *.cfm     setf cf
    *.cfi     setf cf
    *.cfc     setf cf
    configure.in
              setf config
    configure.ac
              setf config
    *.cu      setf cuda
    Dockerfile
              setf dockerfile
    *.Dockerfile
              setf dockerfile
    *.dcd     setf dcd
    *enlightenment/*.cfg
              setf c
    *Eterm/*.cfg
              setf eterm
    *.eu      call s:EuphoriaCheck()
    *.ew      call s:EuphoriaCheck()
    *.ex      call s:EuphoriaCheck()
    *.exu     call s:EuphoriaCheck()
    *.exw     call s:EuphoriaCheck()
    *.EU      call s:EuphoriaCheck()
    *.EW      call s:EuphoriaCheck()
    *.EX      call s:EuphoriaCheck()
    *.EXU     call s:EuphoriaCheck()
    *.EXW     call s:EuphoriaCheck()
    lynx.cfg  setf lynx
    *baseq[2-3]/*.cfg
              setf quake
    *id1/*.cfg
              setf quake
    *quake[1-3]/*.cfg
              setf quake
    *.qc      setf c
    *.cfg     setf cfg
    *.feature setf cucumber
    *.csp     setf csp
    *.fdr     setf csp
    *.pld     setf cupl
    *.si      setf cuplsim
    */debian/control
              setf debcontrol
    control   if getline(1) =~ '^Source:'|   setf debcontrol| endif
    */etc/apt/sources.list
              setf debsources
    */etc/apt/sources.list.d/*.list
              setf debsources
    denyhosts.conf
              setf denyhosts
    */etc/dnsmasq.conf
              setf dnsmasq
    *.desc    setf desc
    *.d       call s:DtraceCheck()
    *.desktop setf desktop
    .directory
              setf desktop
    dict.conf setf dictconf
    .dictrc   setf dictconf
    dictd.conf
              setf dictdconf
    *.diff    setf diff
    *.rej     setf diff
    *.patch   if getline(1) =~ '^From [0-9a-f]\{40\} Mon Sep 17 00:00:00 2001$' |   setf gitsendemail | else |   setf diff | endif
    .dir_colors
              setf dircolors
    .dircolors
              setf dircolors
    */etc/DIR_COLORS
              setf dircolors
    *.rul     if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |   setf ishd | else |   setf diva | endif
    *.com     call s:BindzoneCheck('dcl')
    *.dot     setf dot
    *.lid     setf dylanlid
    *.intr    setf dylanintr
    *.dylan   setf dylan
    *.def     setf def
    *.drac    setf dracula
    *.drc     setf dracula
    *lvs      setf dracula
    *lpe      setf dracula
    *.ds      setf datascript
    *.dsl     setf dsl
    *.dtd     setf dtd
    *.dts     setf dts
    *.dtsi    setf dts
    *.ed\(f\|if\|o\)
              setf edif
    *.edn     if getline(1) =~ '^\s*(\s*edif\>' |   setf edif | else |   setf clojure | endif
    .editorconfig
              setf dosini
    *.ecd     setf ecd
    *.e       call s:FTe()
    *.E       call s:FTe()
    */etc/elinks.conf
              setf elinks
    */.elinks/elinks.conf
              setf elinks
    *.erl     setf erlang
    *.hrl     setf erlang
    *.yaws    setf erlang
    filter-rules
              setf elmfilt
    *esmtprc  setf esmtprc
    *.ec      setf esqlc
    *.EC      setf esqlc
    *.strl    setf esterel
    *.csc     setf csc
    exim.conf setf exim
    *.exp     setf expect
    exports   setf exports
    *.fal     setf falcon
    *.fan     setf fan
    *.fwt     setf fan
    *.factor  setf factor
    .fetchmailrc
              setf fetchmail
    *.fex     setf focexec
    *.focexec setf focexec
    auto.master
              setf conf
    *.mas     setf master
    *.master  setf master
    *.fs      setf forth
    *.ft      setf forth
    *.frt     setf reva
    *.F       setf fortran
    *.FOR     setf fortran
    *.FPP     setf fortran
    *.FTN     setf fortran
    *.F77     setf fortran
    *.F90     setf fortran
    *.F95     setf fortran
    *.F03     setf fortran
    *.F08     setf fortran
    *.f       setf fortran
    *.for     setf fortran
    *.fortran setf fortran
    *.fpp     setf fortran
    *.ftn     setf fortran
    *.f77     setf fortran
    *.f90     setf fortran
    *.f95     setf fortran
    *.f03     setf fortran
    *.f08     setf fortran
    *.fsl     setf framescript
    fstab     setf fstab
    mtab      setf fstab
    .gdbinit  setf gdb
    *.mo      setf gdmo
    *.gdmo    setf gdmo
    *.ged     setf gedcom
    lltxxxxx.txt
              setf gedcom
    COMMIT_EDITMSG
              setf gitcommit
    MERGE_MSG setf gitcommit
    TAG_EDITMSG
              setf gitcommit
    *.git/config
              setf gitconfig
    .gitconfig
              setf gitconfig
    .gitmodules
              setf gitconfig
    *.git/modules/*/config
              setf gitconfig
    */.config/git/config
              setf gitconfig
    git-rebase-todo
              setf gitrebase
    .gitsendemail.msg.??????
              setf gitsendemail
    .msg.[0-9]*
              if getline(1) =~ '^From.*# This line is ignored.$' |   setf gitsendemail | endif
    *.git/*   if getline(1) =~ '^\x\{40\}\>\|^ref: ' |   setf git | endif
    gkrellmrc setf gkrellmrc
    gkrellmrc_?
              setf gkrellmrc
    *.gp      setf gp
    .gprc     setf gp
    */.gnupg/options
              setf gpg
    */.gnupg/gpg.conf
              setf gpg
    */usr/*/gnupg/options.skel
              setf gpg
    gnashrc   setf gnash
    .gnashrc  setf gnash
    gnashpluginrc
              setf gnash
    .gnashpluginrc
              setf gnash
    gitolite.conf
              setf gitolite
    */gitolite-admin/conf/*
              call s:StarSetf('gitolite')
    {,.}gitolite.rc
              setf perl
    example.gitolite.rc
              setf perl
    *.gpi     setf gnuplot
    *.go      setf go
    *.gs      setf grads
    *.gretl   setf gretl
    *.gradle  setf groovy
    *.groovy  setf groovy
    *.gsp     setf gsp
    */etc/group
              setf group
    */etc/group-
              setf group
    */etc/group.edit
              setf group
    */etc/gshadow
              setf group
    */etc/gshadow-
              setf group
    */etc/gshadow.edit
              setf group
    */var/backups/group.bak
              setf group
    */var/backups/gshadow.bak
              setf group
    .gtkrc    setf gtkrc
    gtkrc     setf gtkrc
    *.haml    setf haml
    *.hsc     setf hamster
    *.hsm     setf hamster
    *.hs      setf haskell
    *.hs-boot setf haskell
    *.lhs     setf lhaskell
    *.chs     setf chaskell
    *.ht      setf haste
    *.htpp    setf hastepreproc
    *.vc      setf hercules
    *.ev      setf hercules
    *.sum     setf hercules
    *.errsum  setf hercules
    *.hex     setf hex
    *.h32     setf hex
    *.t.html  setf tilde
    *.html    call s:FThtml()
    *.htm     call s:FThtml()
    *.shtml   call s:FThtml()
    *.stm     call s:FThtml()
    *.erb     setf eruby
    *.rhtml   setf eruby
    *.html.m4 setf htmlm4
    *.tmpl    setf htmlcheetah
    */etc/host.conf
              setf hostconf
    */etc/hosts.allow
              setf hostsaccess
    */etc/hosts.deny
              setf hostsaccess
    *.hb      setf hb
    *.htt     setf httest
    *.htb     setf httest
    *.icn     setf icon
    *.idl     call s:FTidl()
    *.odl     setf msidl
    *.mof     setf msidl
    */.icewm/menu
              setf icemenu
    .indent.pro
              setf indent
    indent.pro
              call s:ProtoCheck('indent')
    *.pro     call s:ProtoCheck('idlang')
    indentrc  setf indent
    *.inf     setf inform
    *.INF     setf inform
    */etc/initng/*/*.i
              setf initng
    *.ii      setf initng
    upstream.dat\c
              setf upstreamdat
    upstream.*.dat\c
              setf upstreamdat
    *.upstream.dat\c
              setf upstreamdat
    fdrupstream.log
              setf upstreamlog
    upstream.log\c
              setf upstreamlog
    upstream.*.log\c
              setf upstreamlog
    *.upstream.log\c
              setf upstreamlog
    UPSTREAM-*.log\c
              setf upstreamlog
    upstreaminstall.log\c
              setf upstreaminstalllog
    upstreaminstall.*.log\c
              setf upstreaminstalllog
    *.upstreaminstall.log\c
              setf upstreaminstalllog
    usserver.log\c
              setf usserverlog
    usserver.*.log\c
              setf usserverlog
    *.usserver.log\c
              setf usserverlog
    usw2kagt.log\c
              setf usw2kagtlog
    usw2kagt.*.log\c
              setf usw2kagtlog
    *.usw2kagt.log\c
              setf usw2kagtlog
    ipf.conf  setf ipfilter
    ipf6.conf setf ipfilter
    ipf.rules setf ipfilter
    *.4gl     setf fgl
    *.4gh     setf fgl
    *.m4gl    setf fgl
    *.ini     setf dosini
    inittab   setf inittab
    *.iss     setf iss
    *.ijs     setf j
    *.jal     setf jal
    *.JAL     setf jal
    *.jpl     setf jam
    *.jpr     setf jam
    *.java    setf java
    *.jav     setf java
    *.jj      setf javacc
    *.jjt     setf javacc
    *.js      setf javascript
    *.javascript
              setf javascript
    *.es      setf javascript
    *.jsx     setf javascript
    *.jsp     setf jsp
    *.properties
              setf jproperties
    *.properties_??
              setf jproperties
    *.properties_??_??
              setf jproperties
    *.properties_??_??_*
              call s:StarSetf('jproperties')
    *.clp     setf jess
    *.jgr     setf jgraph
    *.jov     setf jovial
    *.j73     setf jovial
    *.jovial  setf jovial
    *.json    setf json
    *.jsonp   setf json
    *.webmanifest
              setf json
    *.kix     setf kix
    *.k       setf kwt
    *.kv      setf kivy
    *.ks      setf kscript
    Kconfig   setf kconfig
    Kconfig.debug
              setf kconfig
    *.ace     setf lace
    *.ACE     setf lace
    *.latte   setf latte
    *.lte     setf latte
    */etc/limits
              setf limits
    */etc/*limits.conf
              setf limits
    */etc/*limits.d/*.conf
              setf limits
    *.sig     setf lprolog
    *.ldif    setf ldif
    *.ld      setf ld
    *.less    setf less
    *.lex     setf lex
    *.l       setf lex
    *.lxx     setf lex
    *.l++     setf lex
    */etc/libao.conf
              setf libao
    */.libao  setf libao
    */etc/sensors.conf
              setf sensors
    */etc/sensors3.conf
              setf sensors
    lftp.conf setf lftp
    .lftprc   setf lftp
    *lftp/rc  setf lftp
    *.ll      setf lifelines
    lilo.conf setf lilo
    *.lsp     setf lisp
    *.lisp    setf lisp
    *.el      setf lisp
    *.jl      setf lisp
    *.L       setf lisp
    .emacs    setf lisp
    .sawfishrc
              setf lisp
    sbclrc    setf lisp
    .sbclrc   setf lisp
    *.liquid  setf liquid
    *.lite    setf lite
    *.lt      setf lite
    */LiteStep/*/*.rc
              setf litestep
    */etc/login.access
              setf loginaccess
    */etc/login.defs
              setf logindefs
    *.lgt     setf logtalk
    *.lot     setf lotos
    *.lotos   setf lotos
    *.lou     setf lout
    *.lout    setf lout
    *.lua     setf lua
    *.rockspec
              setf lua
    *.lsl     setf lsl
    *.lss     setf lss
    *.m4      if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif
    *.mgp     setf mgp
    snd.\d\+  setf mail
    .letter   setf mail
    .letter.\d\+
              setf mail
    .followup setf mail
    .article  setf mail
    .article.\d\+
              setf mail
    pico.\d\+ setf mail
    mutt{ng,}-*-\w\+
              setf mail
    mutt[[:alnum:]_-]\\\{6\}
              setf mail
    neomutt-*-\w\+
              setf mail
    neomutt[[:alnum:]_-]\\\{6\}
              setf mail
    ae\d\+.txt
              setf mail
    /tmp/SLRN[0-9A-Z.]\+
              setf mail
    *.eml     setf mail
    */etc/mail/aliases
              setf mailaliases
    */etc/aliases
              setf mailaliases
    .mailcap  setf mailcap
    mailcap   setf mailcap
    *[mM]akefile
              setf make
    *.mk      setf make
    *.mak     setf make
    *.dsp     setf make
    *.ist     setf ist
    *.mst     setf ist
    *.page    setf mallard
    *.man     setf nroff
    */etc/man.conf
              setf manconf
    man.config
              setf manconf
    *.mv      setf maple
    *.mpl     setf maple
    *.mws     setf maple
    *.map     setf map
    *.markdown
              setf markdown
    *.mdown   setf markdown
    *.mkd     setf markdown
    *.mkdn    setf markdown
    *.mdwn    setf markdown
    *.md      setf markdown
    *.mason   setf mason
    *.mhtml   setf mason
    *.m       call s:FTm()
    *.nb      setf mma
    *.mel     setf mel
    hg-editor-*.txt
              setf hgcommit
    *.hgrc    setf cfg
    *hgrc     setf cfg
    */log/{auth,cron,daemon,debug,kern,lpr,mail,messages,news/news,syslog,user}{,.log,.err,.info,.warn,.crit,.notice}{,.[0-9]*,-[0-9]*}setf messages
    *.mf      setf mf
    *.mp      setf mp
    *.mgl     setf mgl
    *.mix     setf mix
    *.mixal   setf mix
    *.mms     call s:FTmms()
    *.mmp     setf mmp
    *.mod     if getline(1) =~ '\<module\>' |   setf lprolog | else |   setf modsim3 | endif
    *.m2      setf modula2
    *.DEF     setf modula2
    *.MOD     setf modula2
    *.mi      setf modula2
    *.[mi][3g]
              setf modula3
    *.isc     setf monk
    *.monk    setf monk
    *.ssc     setf monk
    *.tsc     setf monk
    *.moo     setf moo
    */etc/modules.conf
              setf modconf
    */etc/modules
              setf modconf
    */etc/conf.modules
              setf modconf
    mplayer.conf
              setf mplayerconf
    */.mplayer/config
              setf mplayerconf
    *.s19     setf srec
    *.s28     setf srec
    *.s37     setf srec
    *.mot     setf srec
    *.srec    setf srec
    mrxvtrc   setf mrxvtrc
    .mrxvtrc  setf mrxvtrc
    *.msql    setf msql
    *.mysql   setf mysql
    */etc/Muttrc.d/*
              call s:StarSetf('muttrc')
    *.rc      setf rc
    *.rch     setf rc
    *.mu      setf mupad
    *.mush    setf mush
    Mutt{ng,}rc
              setf muttrc
    */etc/nanorc
              setf nanorc
    *.nanorc  setf nanorc
    *.NS[ACGLMNPS]
              setf natural
    Neomuttrc setf neomuttrc
    .netrc    setf netrc
    *.ninja   setf ninja
    *.ncf     setf ncf
    *.me      if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |   setf nroff | endif
    *.tr      setf nroff
    *.nr      setf nroff
    *.roff    setf nroff
    *.tmac    setf nroff
    *.mom     setf nroff
    *.[1-9]   call s:FTnroff()
    *.mm      call s:FTmm()
    *.nqc     setf nqc
    *.nse     setf lua
    *.nsi     setf nsis
    *.nsh     setf nsis
    *.ml      setf ocaml
    *.mli     setf ocaml
    *.mll     setf ocaml
    *.mly     setf ocaml
    .ocamlinit
              setf ocaml
    *.occ     setf occam
    *.xom     setf omnimark
    *.xin     setf omnimark
    *.or      setf openroad
    *.[Oo][Pp][Ll]
              setf opl
    *.ora     setf ora
    pf.conf   setf pf
    */etc/pam.conf
              setf pamconf
    *.papp    setf papp
    *.pxml    setf papp
    *.pxsl    setf papp
    */etc/passwd
              setf passwd
    */etc/passwd-
              setf passwd
    */etc/passwd.edit
              setf passwd
    */etc/shadow
              setf passwd
    */etc/shadow-
              setf passwd
    */etc/shadow.edit
              setf passwd
    */var/backups/passwd.bak
              setf passwd
    */var/backups/shadow.bak
              setf passwd
    *.pas     setf pascal
    *.dpr     setf pascal
    *.pdf     setf pdf
    *.pcmk    setf pcmk
    *.pl      call s:FTpl()
    *.PL      call s:FTpl()
    *.plx     setf perl
    *.al      setf perl
    *.psgi    setf perl
    *.p6      setf perl6
    *.pm6     setf perl6
    *.pl6     setf perl6
    *.pm      if getline(1) =~ "XPM2" |   setf xpm2 | elseif getline(1) =~ "XPM" |   setf xpm | else |   setf perl | endif
    *.pod     setf pod
    *.pod6    setf pod6
    *.php     setf php
    *.php\d   setf php
    *.phtml   setf php
    *.ctp     setf php
    *.pike    setf pike
    *.lpc     setf pike
    *.ulpc    setf pike
    *.pmod    setf pike
    */etc/pinforc
              setf pinfo
    */.pinforc
              setf pinfo
    *.rcp     setf pilrc
    .pinerc   setf pine
    pinerc    setf pine
    .pinercex setf pine
    pinercex  setf pine
    *.pli     setf pli
    *.pl1     setf pli
    *.plm     setf plm
    *.p36     setf plm
    *.pac     setf plm
    *.pls     setf plsql
    *.plsql   setf plsql
    *.plp     setf plp
    *.po      setf po
    *.pot     setf po
    main.cf   setf pfmain
    *.ps      setf postscr
    *.pfa     setf postscr
    *.afm     setf postscr
    *.eps     setf postscr
    *.epsf    setf postscr
    *.epsi    setf postscr
    *.ai      setf postscr
    *.ppd     setf ppd
    *.pov     setf pov
    .povrayrc setf povini
    *.inc     call s:FTinc()
    *printcap let b:ptcap_type = "print" | setf ptcap
    *termcap  let b:ptcap_type = "term" | setf ptcap
    *.g       setf pccts
    *.it      setf ppwiz
    *.ih      setf ppwiz
    *.obj     setf obj
    *.pc      setf proc
    *.action  setf privoxy
    .procmail setf procmail
    .procmailrc
              setf procmail
    *.w       call s:FTprogress_cweb()
    *.i       call s:FTprogress_asm()
    *.p       call s:FTprogress_pascal()
    *.psf     setf psf
    INDEX     if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    INFO      if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    *.pdb     setf prolog
    *.pml     setf promela
    *.proto   setf proto
    */etc/protocols
              setf protocols
    *.pyx     setf pyrex
    *.pxd     setf pyrex
    *.py      setf python
    *.pyw     setf python
    .pythonstartup
              setf python
    .pythonrc setf python
    *.ptl     setf python
    *.rad     setf radiance
    *.mat     setf radiance
    .ratpoisonrc
              setf ratpoison
    ratpoisonrc
              setf ratpoison
    *\,v      setf rcs
    .inputrc  setf readline
    inputrc   setf readline
    *.reg     if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif
    *.rib     setf rib
    *.rex     setf rexx
    *.orx     setf rexx
    *.rxo     setf rexx
    *.rxj     setf rexx
    *.jrexx   setf rexx
    *.rexxj   setf rexx
    *.rexx    setf rexx
    *.testGroup
              setf rexx
    *.testUnit
              setf rexx
    *.s       setf r
    *.S       setf r
    *.rd      setf rhelp
    *.Rd      setf rhelp
    *.Rnw     setf rnoweb
    *.rnw     setf rnoweb
    *.Snw     setf rnoweb
    *.snw     setf rnoweb
    *.Rmd     setf rmd
    *.rmd     setf rmd
    *.Smd     setf rmd
    *.smd     setf rmd
    *.Rrst    setf rrst
    *.rrst    setf rrst
    *.Srst    setf rrst
    *.srst    setf rrst
    *.r       call s:FTr()
    *.R       call s:FTr()
    .reminders
              setf remind
    *.remind  setf remind
    *.rem     setf remind
    resolv.conf
              setf resolv
    *.rnc     setf rnc
    *.rng     setf rng
    *.rpl     setf rpl
    robots.txt
              setf robots
    *.x       setf rpcgen
    *.rst     setf rst
    *.rtf     setf rtf
    .irbrc    setf ruby
    irbrc     setf ruby
    *.rb      setf ruby
    *.rbw     setf ruby
    *.gemspec setf ruby
    *.rs      setf rust
    *.ru      setf ruby
    Gemfile   setf ruby
    *.builder setf ruby
    *.rxml    setf ruby
    *.rjs     setf ruby
    [rR]antfile
              setf ruby
    *.rant    setf ruby
    [rR]akefile
              setf ruby
    *.rake    setf ruby
    *.sl      setf slang
    smb.conf  setf samba
    *.sas     setf sas
    *.sass    setf sass
    *.sa      setf sather
    *.scala   setf scala
    *.sbt     setf sbt
    *.sci     setf scilab
    *.sce     setf scilab
    *.scss    setf scss
    *.sd      setf sd
    *.sdl     setf sdl
    *.pr      setf sdl
    *.sed     setf sed
    *.siv     setf sieve
    sendmail.cf
              setf sm
    *.mc      call s:McSetf()
    */etc/services
              setf services
    */etc/slp.conf
              setf slpconf
    */etc/slp.reg
              setf slpreg
    */etc/slp.spi
              setf slpspi
    */etc/serial.conf
              setf setserial
    *.sgm     if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
    *.sgml    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
    *.decl    if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dcl     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dec     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    catalog   setf catalog
    sgml.catalog*
              call s:StarSetf('catalog')
    .bashrc*  call SetFileTypeSH("bash")
    bashrc    call SetFileTypeSH("bash")
    bash.bashrc
              call SetFileTypeSH("bash")
    .bash[_-]profile*
              call SetFileTypeSH("bash")
    .bash[_-]logout*
              call SetFileTypeSH("bash")
    .bash[_-]aliases*
              call SetFileTypeSH("bash")
    *.bash    call SetFileTypeSH("bash")
    */{,.}bash[_-]completion{,.d,.sh}{,/*}
              call SetFileTypeSH("bash")
    *.ebuild  call SetFileTypeSH("bash")
    *.eclass  call SetFileTypeSH("bash")
    PKGBUILD* call SetFileTypeSH("bash")
    .kshrc*   call SetFileTypeSH("ksh")
    *.ksh     call SetFileTypeSH("ksh")
    */etc/profile
              call SetFileTypeSH(getline(1))
    .profile* call SetFileTypeSH(getline(1))
    *.sh      call SetFileTypeSH(getline(1))
    *.env     call SetFileTypeSH(getline(1))
    *.install if getline(1) =~ '<?php' |   setf php | else |   call SetFileTypeSH("bash") | endif
    .tcshrc*  call SetFileTypeShell("tcsh")
    *.tcsh    call SetFileTypeShell("tcsh")
    tcsh.tcshrc
              call SetFileTypeShell("tcsh")
    tcsh.login
              call SetFileTypeShell("tcsh")
    .login*   call s:CSH()
    .cshrc*   call s:CSH()
    csh.cshrc call s:CSH()
    csh.login call s:CSH()
    csh.logout
              call s:CSH()
    *.csh     call s:CSH()
    .alias    call s:CSH()
    .zprofile setf zsh
    */etc/zprofile
              setf zsh
    .zfbfmarks
              setf zsh
    .zsh*     call s:StarSetf('zsh')
    .zlog*    call s:StarSetf('zsh')
    .zcompdump*
              call s:StarSetf('zsh')
    *.zsh     setf zsh
    *.scm     setf scheme
    *.ss      setf scheme
    *.rkt     setf scheme
    .screenrc setf screen
    screenrc  setf screen
    *.sim     setf simula
    *.sin     setf sinda
    *.s85     setf sinda
    *.sst     setf sisu
    *.ssm     setf sisu
    *.ssi     setf sisu
    *.-sst    setf sisu
    *._sst    setf sisu
    *.sst.meta
              setf sisu
    *.-sst.meta
              setf sisu
    *._sst.meta
              setf sisu
    *.il      setf skill
    *.ils     setf skill
    *.cdf     setf skill
    .slrnrc   setf slrnrc
    *.score   setf slrnsc
    *.st      setf st
    *.cls     if getline(1) =~ '^%' |  setf tex | elseif getline(1)[0] == '#' && getline(1) =~ 'rexx' |  setf rexx | else |  setf st | endif
    *.tpl     setf smarty
    *.smil    if getline(1) =~ '<?\s*xml.*?>' |   setf xml | else |   setf smil | endif
    *.smi     if getline(1) =~ '\<smil\>' |   setf smil | else |   setf mib | endif
    *.smt     setf smith
    *.smith   setf smith
    *.sno     setf snobol4
    *.spt     setf snobol4
    *.mib     setf mib
    *.my      setf mib
    *.hog     setf hog
    snort.conf
              setf hog
    vision.conf
              setf hog
    *.rules   call s:FTRules()
    *.spec    setf spec
    *.speedup setf spup
    *.spdata  setf spup
    *.spd     setf spup
    *.ice     setf slice
    *.sp      setf spice
    *.spice   setf spice
    *.spy     setf spyce
    *.spi     setf spyce
    squid.conf
              setf squid
    *.tyb     setf sql
    *.typ     setf sql
    *.tyc     setf sql
    *.pkb     setf sql
    *.pks     setf sql
    *.sql     call s:SQL()
    *.sqlj    setf sqlj
    *.sqr     setf sqr
    *.sqi     setf sqr
    ssh_config
              setf sshconfig
    */.ssh/config
              setf sshconfig
    sshd_config
              setf sshdconfig
    *.ado     setf stata
    *.do      setf stata
    *.imata   setf stata
    *.mata    setf stata
    *.class   if getline(1) !~ "^\xca\xfe\xba\xbe" | setf stata | endif
    *.hlp     setf smcl
    *.ihlp    setf smcl
    *.smcl    setf smcl
    *.stp     setf stp
    *.sml     setf sml
    *.cm      setf voscm
    */etc/sysctl.conf
              setf sysctl
    */etc/sysctl.d/*.conf
              setf sysctl
    */systemd/*.{automount,mount,path,service,socket,swap,target,timer}
              setf systemd
    *.sdc     setf sdc
    */etc/sudoers
              setf sudoers
    sudoers.tmp
              setf sudoers
    *.svg     setf svg
    *.t       if !s:FTnroff() && !s:FTperl() | setf tads | endif
    tags      setf tags
    *.tak     setf tak
    {pending,completed,undo}.data
              setf taskdata
    *.task    setf taskedit
    *.tcl     setf tcl
    *.tk      setf tcl
    *.itcl    setf tcl
    *.itk     setf tcl
    *.jacl    setf tcl
    *.tli     setf tli
    *.slt     setf tsalt
    *.ttl     setf teraterm
    *.ti      setf terminfo
    *.latex   setf tex
    *.sty     setf tex
    *.dtx     setf tex
    *.ltx     setf tex
    *.bbl     setf tex
    *.tex     call s:FTtex()
    tex/context/*/*.tex
              setf context
    *.mkii    setf context
    *.mkiv    setf context
    *.mkvi    setf context
    *.texinfo setf texinfo
    *.texi    setf texinfo
    *.txi     setf texinfo
    texmf.cnf setf texmf
    .tidyrc   setf tidy
    tidyrc    setf tidy
    *.tf      setf tf
    .tfrc     setf tf
    tfrc      setf tf
    {.,}tmux*.conf
              setf tmux
    *.tpp     setf tpp
    *.treetop setf treetop
    trustees.conf
              setf trustees
    *.tssgm   setf tssgm
    *.tssop   setf tssop
    *.tsscl   setf tsscl
    *.tutor   setf tutor
    *.twig    setf twig
    *.uit     setf uil
    *.uil     setf uil
    */etc/udev/udev.conf
              setf udevconf
    */etc/udev/permissions.d/*.permissions
              setf udevperm
    */etc/udev/cdsymlinks.conf
              setf sh
    *.uc      setf uc
    */etc/updatedb.conf
              setf updatedb
    */usr/share/upstart/*.conf
              setf upstart
    */usr/share/upstart/*.override
              setf upstart
    */etc/init/*.conf
              setf upstart
    */etc/init/*.override
              setf upstart
    */.init/*.conf
              setf upstart
    */.init/*.override
              setf upstart
    */.config/upstart/*.conf
              setf upstart
    */.config/upstart/*.override
              setf upstart
    *.vr      setf vera
    *.vri     setf vera
    *.vrh     setf vera
    *.v       setf verilog
    *.va      setf verilogams
    *.vams    setf verilogams
    *.sv      setf systemverilog
    *.svh     setf systemverilog
    *.hdl     setf vhdl
    *.vhd     setf vhdl
    *.vhdl    setf vhdl
    *.vbe     setf vhdl
    *.vst     setf vhdl
    *.vhdl_[0-9]*
              call s:StarSetf('vhdl')
    *.vim     setf vim
    *.vba     setf vim
    .exrc     setf vim
    _exrc     setf vim
    .viminfo  setf viminfo
    _viminfo  setf viminfo
    *.hw      if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.module  if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.pkg     if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.frm     call s:FTVB("form")
    *.sba     setf vb
    vgrindefs setf vgrindefs
    *.wrl     setf vrml
    *.vroom   setf vroom
    *.wm      setf webmacro
    .wgetrc   setf wget
    wgetrc    setf wget
    *.wml     setf wml
    *.wbt     setf winbatch
    *.wsml    setf wsml
    *.wpl     setf xml
    wvdial.conf
              setf wvdial
    .wvdialrc setf wvdial
    .cvsrc    setf cvsrc
    cvs\d\+   setf cvs
    *.web     if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |   setf web | else |   setf winbatch | endif
    *.ws[fc]  setf wsh
    *.xhtml   setf xhtml
    *.xht     setf xhtml
    XF86Config
              if getline(1) =~ '\<XConfigurator\>' |   let b:xf86conf_xfree86_version = 3 | endif | setf xf86conf
    */xorg.conf.d/*.conf
              let b:xf86conf_xfree86_version = 4 | setf xf86conf
    xorg.conf let b:xf86conf_xfree86_version = 4 | setf xf86conf
    xorg.conf-4
              let b:xf86conf_xfree86_version = 4 | setf xf86conf
    */etc/xinetd.conf
              setf xinetd
    *.xs      setf xs
    .Xdefaults
              setf xdefaults
    .Xpdefaults
              setf xdefaults
    .Xresources
              setf xdefaults
    xdm-config
              setf xdefaults
    *.ad      setf xdefaults
    *.msc     setf xmath
    *.msf     setf xmath
    *.ms      if !s:FTnroff() | setf xmath | endif
    *.xml     call s:FTxml()
    *.xmi     setf xml
    *.csproj  setf xml
    *.csproj.user
              setf xml
    *.ts      setf xml
    *.ui      setf xml
    *.tpm     setf xml
    */etc/xdg/menus/*.menu
              setf xml
    fglrxrc   setf xml
    *.xlf     setf xml
    *.xliff   setf xml
    *.xul     setf xml
    *Xmodmap  setf xmodmap
    *.xq      setf xquery
    *.xql     setf xquery
    *.xqm     setf xquery
    *.xquery  setf xquery
    *.xqy     setf xquery
    *.xsd     setf xsd
    *.xsl     setf xslt
    *.xslt    setf xslt
    *.yy      setf yacc
    *.yxx     setf yacc
    *.y++     setf yacc
    *.y       call s:FTy()
    *.yaml    setf yaml
    *.yml     setf yaml
    */etc/yum.conf
              setf dosini
    *.zu      setf zimbu
    *.zut     setf zimbutempl
    *.dtml    call s:FThtml()
    *.pt      call s:FThtml()
    *.cpt     call s:FThtml()
    *.zsql    call s:SQL()
    *.z8a     setf z8a
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
    access.conf*
              call s:StarSetf('apache')
    apache.conf*
              call s:StarSetf('apache')
    apache2.conf*
              call s:StarSetf('apache')
    httpd.conf*
              call s:StarSetf('apache')
    srm.conf* call s:StarSetf('apache')
    */etc/apache2/*.conf*
              call s:StarSetf('apache')
    */etc/apache2/conf.*/*
              call s:StarSetf('apache')
    */etc/apache2/mods-*/*
              call s:StarSetf('apache')
    */etc/apache2/sites-*/*
              call s:StarSetf('apache')
    */etc/httpd/conf.d/*.conf*
              call s:StarSetf('apache')
    *asterisk/*.conf*
              call s:StarSetf('asterisk')
    *asterisk*/*voicemail.conf*
              call s:StarSetf('asteriskvm')
    bzr_log.* setf bzr
    */named/db.*
              call s:StarSetf('bindzone')
    */bind/db.*
              call s:StarSetf('bindzone')
    */.calendar/*
              call s:StarSetf('calendar')
    */share/calendar/*/calendar.*
              call s:StarSetf('calendar')
    */share/calendar/calendar.*
              call s:StarSetf('calendar')
    [cC]hange[lL]og*
              if getline(1) =~ '; urgency='|  call s:StarSetf('debchangelog')|else|  call s:StarSetf('changelog')|endif
    crontab   call s:StarSetf('crontab')
    crontab.* call s:StarSetf('crontab')
    */etc/cron.d/*
              call s:StarSetf('crontab')
    */etc/dnsmasq.d/*
              call s:StarSetf('dnsmasq')
    drac.*    call s:StarSetf('dracula')
    */.fvwm/* call s:StarSetf('fvwm')
    *fvwmrc*  let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm95*.hook
              let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm2rc* if expand("<afile>:e") == "m4"|  call s:StarSetf('fvwm2m4')|else|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')|endif
    */tmp/lltmp*
              call s:StarSetf('gedcom')
    .gtkrc*   call s:StarSetf('gtkrc')
    gtkrc*    call s:StarSetf('gtkrc')
    Prl*.*    call s:StarSetf('jam')
    JAM*.*    call s:StarSetf('jam')
    *jarg*    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'|  call s:StarSetf('jargon')|endif
    Kconfig.* call s:StarSetf('kconfig')
    lilo.conf*
              call s:StarSetf('lilo')
    */etc/logcheck/*.d*/*
              call s:StarSetf('logcheck')
    [mM]akefile*
              call s:StarSetf('make')
    [rR]akefile*
              call s:StarSetf('ruby')
    {neo,}mutt[[:alnum:]._-]\\\{6\}
              setf mail
    reportbug-*
              call s:StarSetf('mail')
    */etc/modutils/*
              if executable(expand("<afile>")) != 1|  call s:StarSetf('modconf')|endif
    */etc/modprobe.*
              call s:StarSetf('modconf')
    .mutt{ng,}rc*
              call s:StarSetf('muttrc')
    */.mutt{ng,}/mutt{ng,}rc*
              call s:StarSetf('muttrc')
    mutt{ng,}rc*
              call s:StarSetf('muttrc')
    Mutt{ng,}rc*
              call s:StarSetf('muttrc')
    .neomuttrc*
              call s:StarSetf('neomuttrc')
    */.neomutt/neomuttrc*
              call s:StarSetf('neomuttrc')
    neomuttrc*
              call s:StarSetf('neomuttrc')
    Neomuttrc*
              call s:StarSetf('neomuttrc')
    tmac.*    call s:StarSetf('nroff')
    /etc/hostname.*
              call s:StarSetf('config')
    */etc/pam.d/*
              call s:StarSetf('pamconf')
    *printcap*
              if !did_filetype()|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')|endif
    *termcap* if !did_filetype()|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')|endif
    *.rdf     call s:Redif()
    .reminders*
              call s:StarSetf('remind')
    *vimrc*   call s:StarSetf('vim')
    svn-commit*.tmp
              setf svn
    Xresources*
              call s:StarSetf('xdefaults')
    */app-defaults/*
              call s:StarSetf('xdefaults')
    */Xresources/*
              call s:StarSetf('xdefaults')
    XF86Config-4*
              let b:xf86conf_xfree86_version = 4 | call s:StarSetf('xf86conf')
    XF86Config*
              if getline(1) =~ '\<XConfigurator\>'|  let b:xf86conf_xfree86_version = 3|endif|call s:StarSetf('xf86conf')
    *xmodmap* call s:StarSetf('xmodmap')
    */etc/xinetd.d/*
              call s:StarSetf('xinetd')
    */etc/yum.repos.d/*
              call s:StarSetf('dosini')
    zsh*      call s:StarSetf('zsh')
    zlog*     call s:StarSetf('zsh')
    *.txt     setf text
    *.text    setf text
    README    setf text
    *.fugitiveblame
              setfiletype fugitiveblame
    *.snip    set filetype=neosnippet
    *.snippets
              set filetype=neosnippet
    *.vb      setlocal filetype=vbnet
    *.jl      set filetype=julia
    *.coffee  set filetype=coffee
    *Cakefile set filetype=coffee
    *.coffeekup
              set filetype=coffee
    *.ck      set filetype=coffee
    *._coffee set filetype=coffee
    *.litcoffee
              set filetype=litcoffee
    *.coffee.md
              set filetype=litcoffee
    *.ex      call s:setf('elixir')
    *.exs     call s:setf('elixir')
    *.eex     call s:setf('eelixir')
    *.fish    setfiletype fish
    fish_funced_*_*.fish
              call search('^$')
    /home/saul/.config/fish/fish_{read_,}history
              setfiletype yaml
    /home/saul/.config/fish/fishd.*
              setlocal readonly
    *.git/{,modules/**/,worktrees/*/}{COMMIT_EDIT,TAG_EDIT,MERGE_,}MSG
              set ft=gitcommit
    *.git/config
              set ft=gitconfig
    .gitconfig
              set ft=gitconfig
    gitconfig set ft=gitconfig
    .gitmodules
              set ft=gitconfig
    */.config/git/config
              set ft=gitconfig
    *.git/modules/**/config
              set ft=gitconfig
    git-rebase-todo
              set ft=gitrebase
    .gitsendemail.*
              set ft=gitsendemail
    *.pu      setfiletype plantuml | set filetype=plantuml
    *.uml     setfiletype plantuml | set filetype=plantuml
    *.plantuml
              setfiletype plantuml | set filetype=plantuml
    *.scala   set filetype=scala
    *.sc      set filetype=scala
    *.sbt     setfiletype sbt.scala
    *.swift   set filetype=swift
    *.apib    set filetype=apiblueprint
    *.scpt    setf applescript
    *.applescript
              setf applescript
    *.asciidoc
              set ft=asciidoc
    *.adoc    set ft=asciidoc
    *         if s:isAnsible() | set ft=yaml.ansible | en
    *.j2      call s:setupTemplate()
    hosts     set ft=ansible_hosts
    *.ino     set filetype=arduino
    *.pde     set filetype=arduino
    *.blade.php
              set filetype=blade
    Caddyfile set ft=caddyfile
    *.carp    set filetype=carp
CJSX  BufReadPost
    *.csx     set filetype=coffee
    *.cjsx    set filetype=coffee
filetypedetect  BufReadPost
    *.clj     setlocal filetype=clojure
    *.cljs    setlocal filetype=clojure
    *.edn     setlocal filetype=clojure
    *.cljx    setlocal filetype=clojure
    *.cljc    setlocal filetype=clojure
    {build,profile}.boot
              setlocal filetype=clojure
    *.cry     set filetype=cryptol
    *.cyl     set filetype=cryptol
    *.lcry    set filetype=cryptol
    *.lcyl    set filetype=cryptol
    *.cr      setlocal filetype=crystal
    Projectfile
              setlocal filetype=crystal
    *.ecr     setlocal filetype=eruby
    *.cql     set filetype=cql
    *.feature set filetype=cucumber
    *.story   set filetype=cucumber
    *.dart    set filetype=dart
    *.elm     set filetype=elm
    *.em      set filetype=ember-script
    *.emblem  set filetype=emblem
    *.erl     set ft=erlang
    *.hrl     set ft=erlang
    rebar.config
              set ft=erlang
    *.app     set ft=erlang
    *.app.src set ft=erlang
    *.yaws    set ft=erlang
    *.xrl     set ft=erlang
    *.escript set ft=erlang
    ferm.conf setf ferm 
    *.ferm    setf ferm
    *.fs      set filetype=fsharp
    *.fsi     set filetype=fsharp
    *.fsx     set filetype=fsharp
    *.mod     set filetype=gmpl
    *.vert    set filetype=glsl
    *.tesc    set filetype=glsl
    *.tese    set filetype=glsl
    *.glsl    set filetype=glsl
    *.geom    set filetype=glsl
    *.frag    set filetype=glsl
    *.comp    set filetype=glsl
    *.go      call s:gofiletype_pre("go")
              call s:gofiletype_post()
    *.s       call s:gofiletype_pre("asm")
              call s:gofiletype_post()
    *.tmpl    set filetype=gohtmltmpl
    *.graphql setfiletype graphql
    *.graphqls
              setfiletype graphql
    *.gql     setfiletype graphql
    *.sass    setf sass
    *.scss    setf scss
    *.mustache
              set filetype=html.mustache syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.hogan   set filetype=html.mustache syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.hulk    set filetype=html.mustache syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.hjs     set filetype=html.mustache syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.handlebars
              set filetype=html.handlebars syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    *.hbs     set filetype=html.handlebars syntax=mustache | runtime! ftplugin/mustache.vim ftplugin/mustache*.vim ftplugin/mustache/*.vim
    haproxy*.c*
              set ft=haproxy
    *.hsc     set filetype=haskell
    *.bpk     set filetype=haskell
    *.hsig    set filetype=haskell
    *.hx      setf haxe
i3_ftdetect  BufReadPost
    *i3/config
              set ft=i3
    *sway/config
              set ft=i3
filetypedetect  BufReadPost
    *Spec.js  set filetype=jasmine.javascript syntax=jasmine
    *_spec.js set filetype=jasmine.javascript syntax=jasmine
javascript_syntax_detection  BufReadPost
    *.{js,mjs,jsm,es,es6}
              setfiletype javascript
    Jakefile  setfiletype javascript
    *         call s:SelectJavascript()
filetypedetect  BufReadPost
    Jenkinsfile
              set ft=Jenkinsfile
    Jenkinsfile*
              setf Jenkinsfile
    *.jenkinsfile
              set ft=Jenkinsfile
              setf Jenkinsfile
    *.json    setlocal filetype=json
    *.jsonl   setlocal filetype=json
    *.jsonp   setlocal filetype=json
    *.geojson setlocal filetype=json
    *.template
              setlocal filetype=json
    *.json5   setfiletype json5
    *.ejs     set filetype=jst
    *.jst     set filetype=jst
    *.djs     set filetype=jst
    *.hamljs  set filetype=jst
    *.ect     set filetype=jst
    *.jsx     let b:jsx_ext_found = 1
              set filetype=javascript.jsx
    *.js      if <SID>EnableJSX() | set filetype=javascript.jsx | endif
    *.kt      setfiletype kotlin
    *.kts     setfiletype kotlin
    *.less    setf less
    *.liquid  set ft=liquid
    */_layouts/*.html
              set ft=liquid
    */_includes/*.html
              set ft=liquid
    *.html    if getline(1) == '---' | set ft=liquid | endif
    *.xml     if getline(1) == '---' | set ft=liquid | endif
    *.textile if getline(1) == '---' | set ft=liquid | endif
    *.markdown
              if getline(1) == '---' |   let b:liquid_subtype = 'markdown' |   set ft=liquid | endif
    *.mkd     if getline(1) == '---' |   let b:liquid_subtype = 'markdown' |   set ft=liquid | endif
    *.mkdn    if getline(1) == '---' |   let b:liquid_subtype = 'markdown' |   set ft=liquid | endif
    *.md      if getline(1) == '---' |   let b:liquid_subtype = 'markdown' |   set ft=liquid | endif
    */templates/**.liquid
              let b:liquid_subtype = 'html' | set ft=liquid |
    */layout/**.liquid
              let b:liquid_subtype = 'html' | set ft=liquid |
    */snippets/**.liquid
              let b:liquid_subtype = 'html' | set ft=liquid |
    *.ls      set filetype=ls
    *Slakefile
              set filetype=ls
    *.mako    set filetype=mako
    *.{md,mdown,mkd,mkdn,markdown,mdwn}
              set filetype=markdown
    *.{md,mdown,mkd,mkdn,markdown,mdwn}.{des3,des,bf,bfa,aes,idea,cast,rc2,rc4,rc5,desx}
              set filetype=markdown
    *.nginx   set ft=nginx
    nginx*.conf
              set ft=nginx
    *nginx.conf
              set ft=nginx
    */etc/nginx/*
              set ft=nginx
    */usr/local/nginx/conf/*
              set ft=nginx
    *.nim     set filetype=nim
    *.nims    set filetype=nim
    *.nix     set filetype=nix
    *.cl      set filetype=opencl
    *.html    if getline(1) =~ '^\(%\|<[%&].*>\)' |     set filetype=mason | endif
    *.pl      call s:DetectPerl6()
    *.pm      call s:DetectPerl6()
    *.t       call s:DetectPerl6()
    *.nqp     setf perl6
    *.pgsql   setf pgsql
    *.ps1     set ft=ps1
    *.psd1    set ft=ps1
    *.psm1    set ft=ps1
    *.pssc    set ft=ps1
    *.ps1xml  set ft=ps1xml
    *.cdxml   set ft=xml
    *.psc1    set ft=xml
    *.proto   setfiletype proto
    *.pug     set filetype=pug
    *.jade    set filetype=pug
    *.pp      setfiletype puppet
    Puppetfile
              setfiletype ruby
    *.purs    setf purescript
    *.qml     setfiletype qml
    *.rkt     set filetype=racket
    *.rktl    set filetype=racket
    *.raml    set ft=raml
    *.erb     call s:setf('eruby')
    *.rhtml   call s:setf('eruby')
    .irbrc    call s:setf('ruby')
    irbrc     call s:setf('ruby')
    *.rb      call s:setf('ruby')
    *.rbw     call s:setf('ruby')
    *.gemspec call s:setf('ruby')
    *.ru      call s:setf('ruby')
    Gemfile   call s:setf('ruby')
    *.builder call s:setf('ruby')
    *.rxml    call s:setf('ruby')
    *.rjs     call s:setf('ruby')
    *.ruby    call s:setf('ruby')
    [rR]akefile
              call s:setf('ruby')
    *.rake    call s:setf('ruby')
    [rR]akefile*
              call s:StarSetf('ruby')
    [rR]antfile
              call s:setf('ruby')
    *.rant    call s:setf('ruby')
    Appraisals
              call s:setf('ruby')
    .autotest call s:setf('ruby')
    [Bb]uildfile
              call s:setf('ruby')
    Capfile   call s:setf('ruby')
    *.cap     call s:setf('ruby')
    Cheffile  call s:setf('ruby')
    Berksfile call s:setf('ruby')
    Podfile   call s:setf('ruby')
    *.podspec call s:setf('ruby')
    Guardfile call s:setf('ruby')
    .Guardfile
              call s:setf('ruby')
    *.jbuilder
              call s:setf('ruby')
    KitchenSink
              call s:setf('ruby')
    *.opal    call s:setf('ruby')
    .pryrc    call s:setf('ruby')
    Puppetfile
              call s:setf('ruby')
    *.rabl    call s:setf('ruby')
    [rR]outefile
              call s:setf('ruby')
    .simplecov
              call s:setf('ruby')
    [tT]horfile
              call s:setf('ruby')
    *.thor    call s:setf('ruby')
    [vV]agrantfile
              call s:setf('ruby')
    *.rs      set filetype=rust
    Cargo.toml
              if &filetype == "" | set filetype=cfg | endif
    *.sbt     set filetype=sbt.scala
    *.scss    setfiletype scss
    *.slim    setfiletype slim
    *.slime   set filetype=slime
    *.sol     setf solidity
    *.styl    set filetype=stylus
    *.stylus  set filetype=stylus
    sxhkdrc   set ft=sxhkdrc
    *.sxhkdrc set ft=sxhkdrc
    *.automount
              set filetype=systemd
    *.mount   set filetype=systemd
    *.path    set filetype=systemd
    *.service set filetype=systemd
    *.socket  set filetype=systemd
    *.swap    set filetype=systemd
    *.target  set filetype=systemd
    *.timer   set filetype=systemd
    *.tf      setlocal filetype=terraform
    *.tfvars  setlocal filetype=terraform
    *.tfstate setlocal filetype=javascript
    *.textile set filetype=textile
    *.thrift  setlocal filetype=thrift
    {.,}tmux*.conf*
              setfiletype tmux
    *.toml    set filetype=toml
    Gopkg.lock
              set filetype=toml
    Cargo.lock
              set filetype=toml
    */.cargo/config
              set filetype=toml
    Pipfile   set filetype=toml
    *.twig    set filetype=html.twig
    *.html.twig
              set filetype=html.twig
    *.xml.twig
              set filetype=xml.twig
    *.ts      set filetype=typescript
    *.tsx     setfiletype typescript
    *.vala    set efm=%f:%l.%c-%[%^:]%#:\ %t%[%^:]%#:\ %m
    *.vapi    set efm=%f:%l.%c-%[%^:]%#:\ %t%[%^:]%#:\ %m
    *.vala    setfiletype vala
    *.vapi    setfiletype vala
    *.valadoc setfiletype vala
    *.vcl     set filetype=vcl
    vifm.rename*
              :set filetype=vifm-rename
    vifmrc    :set filetype=vifm
    *vifm/colors/*
              :set filetype=vifm
    *.vue     setf vue
    *.wpy     setf vue
    *.vm      set ft=velocity syntax=velocity
BufReadPost
    *_spec.rb set syntax=rspec
              setlocal commentstring=#\ %s
filetypedetect  BufReadPost
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif
ComandosAutomaticosGuardarLeer  BufReadPost
    *         if line("'\"") > 1 && line("'\"") <= line("$") |           execute "normal! g`\"" |       endif
gzip  BufReadPre
    *.gz      setlocal bin
    *.bz2     setlocal bin
    *.Z       setlocal bin
    *.lzma    setlocal bin
    *.xz      setlocal bin
    *.lz      setlocal bin
    *.zst     setlocal bin
filetypedetect  BufReadPre
    *.*.mako  execute "do BufRead filetypedetect " . expand("<afile>:r") | let b:mako_outer_lang = &filetype
ArchivoGrande  BufReadPre
    *         let s:tamanio = getfsize(expand("<afile>")) | if s:tamanio > s:DIES_MEGAS || s:tamanio == -2 |     call ArchivoGrande() | endif
airline  BufUnload
    *         call <sid>on_window_changed()
airline_tabline_autoshow  BufUnload
    *         call airline#extensions#tabline#buflist#invalidate()
ALEEvents  BufWinEnter
    *         call ale#events#LintOnEnter(str2nr(expand('<abuf>')))
airline  BufWinEnter
    *         call <sid>on_window_changed()
indentLine  BufWinEnter
    *         call <SID>IndentLinesDisable() | call <SID>LeadingSpaceDisable() | call <SID>Setup()
fugitive_diff  BufWinEnter
    *         if s:can_diffoff(+expand('<abuf>')) && s:diff_window_count() == 1 |   call s:diffoff() | endif
CSSColor  BufWinEnter
    <buffer=6>
              call s:create_matches()
    <buffer=3>
              call s:create_matches()
fugitive_diff  BufWinLeave
    *         if s:can_diffoff(+expand('<abuf>')) && s:diff_window_count() == 2 |   call s:diffoff_all(getbufvar(+expand('<abuf>'), 'git_dir')) | endif
fugitive_blame  BufWinLeave
    *         execute getwinvar(+bufwinnr(+expand('<abuf>')), 'fugitive_leave')
CSSColor  BufWinLeave
    <buffer=6>
              call s:clear_matches()
    <buffer=3>
              call s:clear_matches()
TagbarAutoCmds  BufWipeout
    *         call s:HandleBufDelete(expand('<afile>'), expand('<abuf>'))
fugitive  BufWriteCmd
    fugitive://*//[0-3]/*
              exe fugitive#BufWriteCmd()
Network  BufWriteCmd
    ftp://*   exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    rcp://*   exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    scp://*   exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    http://*  exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    file://*  exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    dav://*   exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    davs://*  exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    rsync://* exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    sftp://*  exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
ShaDaCommands  BufWriteCmd
    *.shada   :if !empty(v:cmdarg)|throw '++opt not supported'|endif |if writefile(shada#get_binstrings(getline(1, '$')),expand('<afile>'), 'b') == 0 |  let &l:modified = (expand('<afile>') is# bufname(+expand('<abuf>'))? 0: stridx(&cpoptions, '+') != -1) |endif
    *.shada.tmp.[a-z]
              :if !empty(v:cmdarg)|throw '++opt not supported'|endif |if writefile(shada#get_binstrings(getline(1, '$')),expand('<afile>'), 'b') == 0 |  let &l:modified = (expand('<afile>') is# bufname(+expand('<abuf>'))? 0: stridx(&cpoptions, '+') != -1) |endif
tar  BufWriteCmd
    tarfile::*
              call tar#Write(expand("<amatch>"))
    tarfile::*/*
              call tar#Write(expand("<amatch>"))
zip  BufWriteCmd
    zipfile:* call zip#Write(expand("<amatch>"))
    zipfile:*/*
              call zip#Write(expand("<amatch>"))
ALEEvents  BufWritePost
    *         call ale#events#SaveEvent(str2nr(expand('<abuf>')))
PluginEasyTags  BufWritePost
    *         call xolox#easytags#autoload( 'BufWritePost' )
airline  BufWritePost
    */autoload/airline/themes/*.vim
              exec 'source '.split(globpath(&rtp, 'autoload/airline/themes/'.g:airline_theme.'.vim', 1), "\n")[0] | call airline#load_theme()
gzip  BufWritePost
    *.gz      call gzip#write("gzip")
    *.bz2     call gzip#write("bzip2")
    *.Z       call gzip#write("compress -f")
    *.lzma    call gzip#write("lzma -z")
    *.xz      call gzip#write("xz -z")
    *.lz      call gzip#write("lzip")
    *.zst     call gzip#write("zstd --rm")
BufWritePost
    *         call s:reset_untracked_cache(0)
airline_ale  BufWritePost
    *         call <sid>ale_refresh()
airline_whitespace  BufWritePost
    *         call <sid>ws_refresh()
deoplete  BufWritePost
    *         if !&l:previewwindow | call deoplete#send_event('BufWritePost') | endif
TagbarAutoCmds  BufWritePost
    *         call s:HandleBufWrite(fnamemodify(expand('<afile>'), ':p'))
neosnippet  BufWritePost
    *.snip    call neosnippet#variables#set_snippets({})
    *.snippets
              call neosnippet#variables#set_snippets({})
neoinclude  BufWritePost
    *         call s:check_buffer('', 0)
necovim  BufWritePost
    vim       call necovim#helper#make_cache()
ComandosAutomaticosGuardarLeer  BufWritePost
    /home/saul/.config/nvim/init.vim
              source $MYVIMRC
neosnippet  BufWritePre
    *         call neosnippet#handlers#_all_clear_markers()
ComandosAutomaticosGuardarLeer  BufWritePre
    *         :%s/\s\+$//e
fugitive  CmdWinEnter
    *         call FugitiveDetect(expand('#:p'))
sig_autocmds  CmdWinEnter
    *         call signature#sign#Refresh()
endwise  CmdWinEnter
    *         call s:teardownMappings()
airline  CmdWinEnter
    *         call airline#add_statusline_func('airline#cmdwinenter') | call <sid>on_window_changed()
airline  CmdWinLeave
    *         call airline#remove_statusline_func('airline#cmdwinenter')
CmdWinLeave
    *         unlet! b:airline_head b:airline_do_mq_check
              unlet! b:fugitive_name
gitgutter  ColorScheme
    *         call gitgutter#highlight#define_sign_column_highlight() | call gitgutter#highlight#define_highlights()
sig_autocmds  ColorScheme
    *         call signature#utils#SetupHighlightGroups()
airline  ColorScheme
    *         call <sid>on_colorscheme_changed()
indentLine  ColorScheme
    *         call <SID>InitColor()
fugitive_blame  ColorScheme
    *         call s:RehighlightBlame()
CSSColor  ColorScheme
    <buffer=6>
              call css_color#reinit()
    <buffer=3>
              call css_color#reinit()
airline  CompleteDone
    *         call <sid>on_window_changed()
deoplete  CompleteDone
    *         call s:on_complete_done()
gitgutter  CursorHold
    *         call gitgutter#process_buffer(bufnr(''), 0)
ALEEvents  CursorHold
    *         if exists('*ale#engine#Cleanup') | call ale#cursor#EchoCursorWarningWithDelay() | endif
PluginXoloxMisc  CursorHold
    *         call xolox#misc#cursorhold#autocmd()
sig_autocmds  CursorHold
    *         if (g:SignaturePeriodicRefresh) | call signature#sign#Refresh() | endif
webdevicons_cursor_hold  CursorHold
    *         silent! call s:CursorHoldUpdate()
airline_ale  CursorHold
    *         call <sid>ale_refresh()
airline_whitespace  CursorHold
    *         call <sid>ws_refresh()
TagbarAutoCmds  CursorHold
    __Tagbar__.*
              call s:ShowPrototype(1)
    *         call s:do_delayed_update()
              call s:AutoUpdate(fnamemodify(expand('<afile>'), ':p'), 0)
gitgutter  CursorHoldI
    *         call gitgutter#process_buffer(bufnr(''), 0)
PluginXoloxMisc  CursorHoldI
    *         call xolox#misc#cursorhold#autocmd()
TagbarAutoCmds  CursorHoldI
    *         call s:do_delayed_update()
ALEEvents  CursorMoved
    *         if exists('*ale#engine#Cleanup') | call ale#cursor#EchoCursorWarningWithDelay() | endif
airline  CursorMoved
    *         if winnr() != s:active_winnr |   call <sid>on_window_changed() | endif
matchparen  CursorMoved
    *         call s:Highlight_Matching_Pair()
CursorMoved
    *         call s:wordcount_update()
neosnippet  CursorMoved
    *         call neosnippet#handlers#_cursor_moved()
CSSColor  CursorMoved
    <buffer=6>
              call s:parse_screen()
    <buffer=3>
              call s:parse_screen()
matchparen  CursorMovedI
    *         call s:Highlight_Matching_Pair()
CursorMovedI
    *         call s:wordcount_update()
neosnippet  CursorMovedI
    *         call neosnippet#handlers#_cursor_moved()
CSSColor  CursorMovedI
    <buffer=6>
              call s:parse_screen()
    <buffer=3>
              call s:parse_screen()
ShaDaCommands  FileAppendCmd
    *.shada   :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call writefile(shada#get_binstrings(getline(min([line("'["), line("']")]),max([line("'["), line("']")]))),expand('<afile>'),'ab')
    *.shada.tmp.[a-z]
              :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call writefile(shada#get_binstrings(getline(min([line("'["), line("']")]),max([line("'["), line("']")]))),expand('<afile>'),'ab')
gzip  FileAppendPost
    *.gz      call gzip#write("gzip")
    *.bz2     call gzip#write("bzip2")
    *.Z       call gzip#write("compress -f")
    *.lzma    call gzip#write("lzma -z")
    *.xz      call gzip#write("xz -z")
    *.lz      call gzip#write("lzip")
    *.zst     call gzip#write("zstd --rm")
gzip  FileAppendPre
    *.gz      call gzip#appre("gzip -dn")
    *.bz2     call gzip#appre("bzip2 -d")
    *.Z       call gzip#appre("uncompress")
    *.lzma    call gzip#appre("lzma -d")
    *.xz      call gzip#appre("xz -d")
    *.lz      call gzip#appre("lzip -d")
    *.zst     call gzip#appre("zstd -d --rm")
gitgutter  FileChangedShellPost
    *         call gitgutter#process_buffer(bufnr(''), 1)
ALEEvents  FileChangedShellPost
    *         call ale#events#FileChangedEvent(str2nr(expand('<abuf>')))
fugitive  FileReadCmd
    fugitive://*//*
              exe fugitive#FileReadCmd()
Network  FileReadCmd
    ftp://*   exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    rcp://*   exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    scp://*   exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    http://*  exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    file://*  exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    https://* exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    dav://*   exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    davs://*  exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    rsync://* exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    sftp://*  exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
ShaDaCommands  FileReadCmd
    *.shada   :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call append("'[", shada#get_strings(readfile(expand('<afile>'), 'b')))
    *.shada.tmp.[a-z]
              :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call append("'[", shada#get_strings(readfile(expand('<afile>'), 'b')))
tar  FileReadCmd
    tarfile::*
              call tar#Read(expand("<amatch>"), 0)
    tarfile::*/*
              call tar#Read(expand("<amatch>"), 0)
zip  FileReadCmd
    zipfile:* call zip#Read(expand("<amatch>"), 0)
    zipfile:*/*
              call zip#Read(expand("<amatch>"), 0)
gzip  FileReadPost
    *.gz      call gzip#read("gzip -dn")
    *.bz2     call gzip#read("bzip2 -d")
    *.Z       call gzip#read("uncompress")
    *.lzma    call gzip#read("lzma -d")
    *.xz      call gzip#read("xz -d")
    *.lz      call gzip#read("lzip -d")
    *.zst     call gzip#read("zstd -d --rm")
gzip  FileReadPre
    *.gz      setlocal bin
    *.bz2     setlocal bin
    *.Z       setlocal bin
    *.lzma    setlocal bin
    *.xz      setlocal bin
    *.lz      setlocal bin
    *.zst     setlocal bin
filetypeplugin  FileType
    *         call s:LoadFTPlugin()
filetypeindent  FileType
    *         call s:LoadIndent()
fugitive  FileType
    netrw     call FugitiveDetect(fnamemodify(get(b:, 'netrw_curdir', expand('<amatch>')), ':p'))
    git       if exists('b:git_dir') |   call fugitive#MapJumps() |   call fugitive#MapCfile() | endif
    gitcommit if exists('b:git_dir') |   call fugitive#MapCfile('fugitive#StatusCfile()') | endif
    gitrebase let &l:include = '^\%(pick\|squash\|edit\|reword\|fixup\|drop\|[pserfd]\)\>' | if exists('b:git_dir') |   let &l:includeexpr = 'v:fname =~# ''^\x\{4,40\}$'' ? FugitiveGenerate(v:fname) : ' .   (len(&l:includeexpr) ? &l:includeexpr : 'v:fname') | endif | let b:undo_ftplugin = get(b:, 'undo_ftplugin', 'exe') . '|setl inex= inc='
ALEEvents  FileType
    *         call ale#events#FileTypeEvent(   str2nr(expand('<abuf>')),   expand('<amatch>'))
endwise  FileType
    lua       let b:endwise_addition = 'end' | let b:endwise_words = 'function,do,then' | let b:endwise_pattern = '^\s*\zs\%(\%(local\s\+\)\=function\)\>\%(.*\<end\>\)\@!\|\<\%(then\|do\)\ze\s*$' | let b:endwise_syngroups = 'luaFunction,luaStatement,luaCond'
    elixir    let b:endwise_addition = 'end' | let b:endwise_words = 'do,fn' | let b:endwise_pattern = '.*[^.:@$]\zs\<\%(do\(:\)\@!\|fn\)\>\ze\%(.*[^.:@$]\<end\>\)\@!' | let b:endwise_syngroups = 'elixirBlockDefinition'
    ruby      let b:endwise_addition = 'end' | let b:endwise_words = 'module,class,def,if,unless,case,while,until,begin,do' | let b:endwise_pattern = '^\(.*=\)\?\s*\%(private\s\+\|protected\s\+\|public\s\+\|module_function\s\+\)*\zs\%(module\|class\|def\|if\|unless\|case\|while\|until\|for\|\|begin\)\>\%(.*[^.:@$]\<end\>\)\@!\|\<do\ze\%(\s*|.*|\)\=\s*$' | let b:endwise_syngroups = 'rubyModule,rubyClass,rubyDefine,rubyControl,rubyConditional,rubyRepeat'
    crystal   let b:endwise_addition = 'end' | let b:endwise_words = 'module,class,lib,macro,struct,union,enum,def,if,unless,ifdef,case,while,until,for,begin,do' | let b:endwise_pattern = '^\(.*=\)\?\s*\%(private\s\+\|protected\s\+\|public\s\+\|abstract\s\+\)*\zs\%(module\|class\|lib\|macro\|struct\|union\|enum\|def\|if\|unless\|ifdef\|case\|while\|until\|for\|begin\)\>\%(.*[^.:@$]\<end\>\)\@!\|\<do\ze\%(\s*|.*|\)\=\s*$' | let b:endwise_syngroups = 'crystalModule,crystalClass,crystalLib,crystalMacro,crystalStruct,crystalDefine,crystalConditional,crystalRepeat,crystalControl'
    sh        let b:endwise_addition = '\=submatch(0)=="then" ? "fi" : submatch(0)=="case" ? "esac" : "done"' | let b:endwise_words = 'then,case,do' | let b:endwise_pattern = '\%(^\s*\zscase\>\ze\|\zs\<\%(do\|then\)\ze\s*$\)' | let b:endwise_syngroups = 'shConditional,shLoop,shIf,shFor,shRepeat,shCaseEsac,zshConditional,zshRepeat,zshDelimiter'
    zsh       let b:endwise_addition = '\=submatch(0)=="then" ? "fi" : submatch(0)=="case" ? "esac" : "done"' | let b:endwise_words = 'then,case,do' | let b:endwise_pattern = '\%(^\s*\zscase\>\ze\|\zs\<\%(do\|then\)\ze\s*$\)' | let b:endwise_syngroups = 'shConditional,shLoop,shIf,shFor,shRepeat,shCaseEsac,zshConditional,zshRepeat,zshDelimiter'
    vb        let b:endwise_addition = 'End &' | let b:endwise_words = 'Function,Sub,Class,Module,Enum,Namespace' | let b:endwise_pattern = '\%(\<End\>.*\)\@<!\<&\>' | let b:endwise_syngroups = 'vbStatement,vbnetStorage,vbnetProcedure,vbnet.*Words,AspVBSStatement'
    vbnet     let b:endwise_addition = 'End &' | let b:endwise_words = 'Function,Sub,Class,Module,Enum,Namespace' | let b:endwise_pattern = '\%(\<End\>.*\)\@<!\<&\>' | let b:endwise_syngroups = 'vbStatement,vbnetStorage,vbnetProcedure,vbnet.*Words,AspVBSStatement'
    aspvbs    let b:endwise_addition = 'End &' | let b:endwise_words = 'Function,Sub,Class,Module,Enum,Namespace' | let b:endwise_pattern = '\%(\<End\>.*\)\@<!\<&\>' | let b:endwise_syngroups = 'vbStatement,vbnetStorage,vbnetProcedure,vbnet.*Words,AspVBSStatement'
    vim       let b:endwise_addition = '\=submatch(0)=~"aug\\%[roup]" ? submatch(0) . " END" : "end" . submatch(0)' | let b:endwise_words = 'fu\%[nction],wh\%[ile],if,for,try,aug\%[roup]\%(\s\+\cEND\)\@!' | let b:endwise_end_pattern = '\%(end\%(fu\%[nction]\|wh\%[hile]\|if\|for\|try\)\)\|aug\%[roup]\%(\s\+\cEND\)' | let b:endwise_syngroups = 'vimFuncKey,vimNotFunc,vimCommand,vimAugroupKey,vimAugroup,vimAugroupError'
    c         let b:endwise_addition = '#endif' | let b:endwise_words = 'if,ifdef,ifndef' | let b:endwise_pattern = '^\s*#\%(if\|ifdef\|ifndef\)\>' | let b:endwise_syngroups = 'cPreCondit,cPreConditMatch,cCppInWrapper,xdefaultsPreProc'
    cpp       let b:endwise_addition = '#endif' | let b:endwise_words = 'if,ifdef,ifndef' | let b:endwise_pattern = '^\s*#\%(if\|ifdef\|ifndef\)\>' | let b:endwise_syngroups = 'cPreCondit,cPreConditMatch,cCppInWrapper,xdefaultsPreProc'
    xdefaults let b:endwise_addition = '#endif' | let b:endwise_words = 'if,ifdef,ifndef' | let b:endwise_pattern = '^\s*#\%(if\|ifdef\|ifndef\)\>' | let b:endwise_syngroups = 'cPreCondit,cPreConditMatch,cCppInWrapper,xdefaultsPreProc'
    haskell   let b:endwise_addition = '#endif' | let b:endwise_words = 'if,ifdef,ifndef' | let b:endwise_pattern = '^\s*#\%(if\|ifdef\|ifndef\)\>' | let b:endwise_syngroups = 'cPreCondit,cPreConditMatch,cCppInWrapper,xdefaultsPreProc'
    objc      let b:endwise_addition = '@end' | let b:endwise_words = 'interface,implementation' | let b:endwise_pattern = '^\s*@\%(interface\|implementation\)\>' | let b:endwise_syngroups = 'objcObjDef'
    matlab    let b:endwise_addition = 'end' | let b:endwise_words = 'function,if,for' | let b:endwise_syngroups = 'matlabStatement,matlabFunction,matlabConditional,matlabRepeat'
    htmldjango
              let b:endwise_addition = '{% end& %}' | let b:endwise_words = 'autoescape,block,blocktrans,cache,comment,filter,for,if,ifchanged,ifequal,ifnotequal,language,spaceless,verbatim,with' | let b:endwise_syngroups = 'djangoTagBlock,djangoStatement'
    htmljinja let b:endwise_addition = '{% end& %}' | let b:endwise_words = 'autoescape,block,cache,call,filter,for,if,macro,raw,set,trans,with' | let b:endwise_syngroups = 'jinjaTagBlock,jinjaStatement'
    jinja.html
              let b:endwise_addition = '{% end& %}' | let b:endwise_words = 'autoescape,block,cache,call,filter,for,if,macro,raw,set,trans,with' | let b:endwise_syngroups = 'jinjaTagBlock,jinjaStatement'
    snippets  let b:endwise_addition = 'endsnippet' | let b:endwise_words = 'snippet' | let b:endwise_syngroups = 'snipSnippet,snipSnippetHeader,snipSnippetHeaderKeyword'
    *         call s:abbrev()
NERDCommenter  FileType
    *         :call s:SetUpForNewFiletype(&filetype, 1)
airline  FileType
    *         call <sid>on_window_changed()
webdevicons_conceal_nerdtree_brackets  FileType
    nerdtree  syntax match hideBracketsInNerdTree "\]" contained conceal containedin=ALL
              syntax match hideBracketsInNerdTree "\[" contained conceal containedin=ALL
              setlocal conceallevel=3
              setlocal concealcursor=nvic
indentLine  FileType
    *         call <SID>Disable()
fugitive_blame  FileType
    fugitiveblame
              setlocal nomodeline | if exists('b:git_dir') | let &l:keywordprg = s:Keywordprg() | endif
TagbarAutoCmds  FileType
    *         call s:AutoUpdate(fnamemodify(expand('<afile>'), ':p'), 0)
neosnippet  FileType
    *         call neosnippet#commands#_make_cache(&filetype)
OmnifuncionesCompletado  FileType
    css       setlocal omnifunc=csscomplete#CompleteCSS
    html      setlocal omnifunc=htmlcomplete#CompleteTags
    markdown  setlocal omnifunc=htmlcomplete#CompleteTags
    javascript
              setlocal omnifunc=javascriptcomplete#CompleteJS
    java      setlocal omnifunc=javacomplete#Complete
    python    setlocal omnifunc=jedi#completions
    sql       setlocal omnifunc=syntaxcomplete#Complete
    html      setlocal omnifunc=syntaxcomplete#Complete
    css       setlocal omnifunc=syntaxcomplete#Complete
    javascript
              setlocal omnifunc=syntaxcomplete#Complete
    php       setlocal omnifunc=syntaxcomplete#Complete
    xml       setlocal omnifunc=xmlcomplete#CompleteTags
PlugLOD  FileType
    sass      call <SID>lod_ft('sass', ['emmet-vim'])
    c         call <SID>lod_ft('c', ['clang_complete'])
    xml       call <SID>lod_ft('xml', ['emmet-vim'])
    html      call <SID>lod_ft('html', ['emmet-vim'])
    java      call <SID>lod_ft('java', ['vim-javacomplete2', 'jcommenter.vim'])
    cpp       call <SID>lod_ft('cpp', ['clang_complete'])
    css       call <SID>lod_ft('css', ['emmet-vim'])
    python    call <SID>lod_ft('python', ['jedi-vim'])
filetypedetect  FileType
    apiblueprint
              set syntax=apiblueprint
              set makeprg=drafter\ -l\ %
    ember-script
              set tabstop=2|set shiftwidth=2|set expandtab
    emblem    set tabstop=2|set shiftwidth=2|set expandtab
    purescript
              let &l:commentstring='{--%s--}'
    python    compiler python
necovim  FileType
    vim       call necovim#helper#make_cache()
LongitudesArchivosEspeciales  FileType
    gitcommit setlocal spell textwidth=72
syntaxset  FileType
    *         exe "set syntax=" . expand("<amatch>")
makecomnads  FileType
    c         let &l:makeprg = g:comando_compilacion['c']
    cpp       let &l:makeprg = g:comando_compilacion['cpp']
    fortran   let &l:makeprg = g:comando_compilacion['fortran']
    java      let &l:makeprg = g:comando_compilacion['java']
    html      let &l:makeprg = g:comando_compilacion['html']
    python    let &l:makeprg = g:comando_compilacion['python']
    cs        let &l:makeprg = g:comando_compilacion['cs']
    sh        let &l:makeprg = g:comando_compilacion['sh']
    haskell   let &l:makeprg = g:comando_compilacion['haskell']
ConfiguracionesEspecificasLenguaje  FileType
    html      imap <buffer> <expr> <Tab> emmet#expandAbbrIntelligent("\<Tab>")
    xml       imap <buffer> <expr> <Tab> emmet#expandAbbrIntelligent("\<Tab>")
    jade      imap <buffer> <expr> <Tab> emmet#expandAbbrIntelligent("\<Tab>")
    pug       imap <buffer> <expr> <Tab> emmet#expandAbbrIntelligent("\<Tab>")
    htmldjango
              imap <buffer> <expr> <Tab> emmet#expandAbbrIntelligent("\<Tab>")
    css       imap <buffer> <expr> <Tab> emmet#expandAbbrIntelligent("\<Tab>")
    scss      imap <buffer> <expr> <Tab> emmet#expandAbbrIntelligent("\<Tab>")
    sass      imap <buffer> <expr> <Tab> emmet#expandAbbrIntelligent("\<Tab>")
    php       imap <buffer> <expr> <Tab> emmet#expandAbbrIntelligent("\<Tab>")
    html      setlocal ts=2 sw=2 sts=2
    css       setlocal ts=2 sw=2 sts=2
    scss      setlocal ts=2 sw=2 sts=2
    sass      setlocal ts=2 sw=2 sts=2
    pug       setlocal ts=2 sw=2 sts=2
    php       setlocal ts=2 sw=2 sts=2
    html      setlocal iskeyword+=-
    css       setlocal iskeyword+=-
    scss      setlocal iskeyword+=-
    sass      setlocal iskeyword+=-
    pug       setlocal iskeyword+=-
ConfiguracionComandoK  FileType
    vim       setlocal keywordprg=:help
    cpp       nnoremap <buffer> K yiw:sp<CR>:terminal<CR>Acppman <C-\><C-n>pA<CR>
fugitive  FileWriteCmd
    fugitive://*//[0-3]/*
              exe fugitive#FileWriteCmd()
Network  FileWriteCmd
    ftp://*   exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    rcp://*   exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    scp://*   exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    http://*  exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    file://*  exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    dav://*   exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    davs://*  exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    rsync://* exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    sftp://*  exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
ShaDaCommands  FileWriteCmd
    *.shada   :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call writefile(shada#get_binstrings(getline(min([line("'["), line("']")]),max([line("'["), line("']")]))),expand('<afile>'),'b')
    *.shada.tmp.[a-z]
              :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call writefile(shada#get_binstrings(getline(min([line("'["), line("']")]),max([line("'["), line("']")]))),expand('<afile>'),'b')
tar  FileWriteCmd
    tarfile::*
              call tar#Write(expand("<amatch>"))
    tarfile::*/*
              call tar#Write(expand("<amatch>"))
zip  FileWriteCmd
    zipfile:* call zip#Write(expand("<amatch>"))
    zipfile:*/*
              call zip#Write(expand("<amatch>"))
gzip  FileWritePost
    *.gz      call gzip#write("gzip")
    *.bz2     call gzip#write("bzip2")
    *.Z       call gzip#write("compress -f")
    *.lzma    call gzip#write("lzma -z")
    *.xz      call gzip#write("xz -z")
    *.lz      call gzip#write("lzip")
    *.zst     call gzip#write("zstd --rm")
gitgutter  FocusGained
    *         call gitgutter#all(1)
fugitive_status  FocusGained
    *         call fugitive#ReloadStatus()
airline  GUIEnter
    *         call <sid>on_colorscheme_changed()
fugitive_blame  GUIEnter
    *         call s:RehighlightBlame()
deoplete  InsertEnter
    *         if !&l:previewwindow | call deoplete#send_event('InsertEnter') | endif
              call s:completion_timer_start('InsertEnter')
ALEEvents  InsertLeave
    *         if exists('*ale#engine#Cleanup') | call ale#cursor#EchoCursorWarning() | endif
deoplete  InsertLeave
    *         call s:on_insert_leave()
              call s:completion_timer_stop()
airline  OptionSet
    termguicolors
              call <sid>on_colorscheme_changed()
gitgutter  QuickFixCmdPost
    *vimgrep* let g:gitgutter_enabled = 1
PluginEasyTags  QuickFixCmdPost
    *vimgrep* call xolox#easytags#restore_automatic_updates()
TagbarAutoCmds  QuickFixCmdPost
    *grep*    if exists('s:tagbar_qf_active') |     unlet s:tagbar_qf_active | endif
gitgutter  QuickFixCmdPre
    *vimgrep* let g:gitgutter_enabled = 0
PluginEasyTags  QuickFixCmdPre
    *vimgrep* call xolox#easytags#disable_automatic_updates()
TagbarAutoCmds  QuickFixCmdPre
    *grep*    let s:tagbar_qf_active = 1
ALECleanupGroup  QuitPre
    *         call ale#events#QuitEvent(str2nr(expand('<abuf>')))
TagbarAutoCmds  QuitPre
    *         let s:vim_quitting = 1
ComandosAutomaticosGuardarLeer  QuitPre
    .exrc     call AplicarConfiguracion()
TagbarSession  SessionLoadPost
    *         call tagbar#RestoreSession()
gitgutter  ShellCmdPost
    *         call gitgutter#all(1)
ShellCmdPost
    *         unlet! b:airline_head b:airline_do_mq_check
              call s:reset_untracked_cache(1)
              unlet! b:fugitive_name
fugitive_status  ShellCmdPost
    *         call fugitive#ReloadStatus()
fugitive  SourceCmd
    fugitive://*//*
              exe fugitive#SourceCmd()
Network  SourceCmd
    ftp://*   exe 'Nsource '.fnameescape(expand("<amatch>"))
    rcp://*   exe 'Nsource '.fnameescape(expand("<amatch>"))
    scp://*   exe 'Nsource '.fnameescape(expand("<amatch>"))
    http://*  exe 'Nsource '.fnameescape(expand("<amatch>"))
    file://*  exe 'Nsource '.fnameescape(expand("<amatch>"))
    https://* exe 'Nsource '.fnameescape(expand("<amatch>"))
    dav://*   exe 'Nsource '.fnameescape(expand("<amatch>"))
    davs://*  exe 'Nsource '.fnameescape(expand("<amatch>"))
    rsync://* exe 'Nsource '.fnameescape(expand("<amatch>"))
    sftp://*  exe 'Nsource '.fnameescape(expand("<amatch>"))
ShaDaCommands  SourceCmd
    *.shada   :execute 'rshada' fnameescape(expand('<afile>'))
    *.shada.tmp.[a-z]
              :execute 'rshada' fnameescape(expand('<afile>'))
airline  SourcePre
    */syntax/syntax.vim
              call airline#extensions#tabline#buffers#invalidate()
SpellFileMissing
    *         call spellfile#LoadFile(expand('<amatch>'))
filetypedetect  StdinReadPost
    *         if !did_filetype() | runtime! scripts.vim | endif
              if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif
indentLine  Syntax
    *         call <SID>InitColor()
fugitive_blame  Syntax
    fugitiveblame
              call s:BlameSyntax()
neosnippet  Syntax
    *         execute 'syntax match neosnippetExpandSnippets'  "'".neosnippet#get_placeholder_marker_pattern(). '\|' .neosnippet#get_sync_placeholder_marker_pattern().'\|' .neosnippet#get_mirror_placeholder_marker_pattern()."'" 'containedin=ALL oneline'
              syntax region neosnippetConcealExpandSnippets matchgroup=neosnippetExpandSnippets start='<`\d\+:\=\%(#:\)\?\|<{\d\+:\=\%(#:\)\?\|<|' end='`>\|}>\||>' containedin=ALL concealends oneline
Syntax
    *         call s:SynSet()
    c         if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    cpp       if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    cs        if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    idl       if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    java      if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    php       if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    datascript
              if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
gitgutter  TabEnter
    *         let t:gitgutter_didtabenter = 1
airline  TabEnter
    *         :unlet! w:airline_lastmode | let w:airline_active=1
ALEEvents  TextChanged
    *         call ale#Queue(g:ale_lint_delay)
matchparen  TextChanged
    *         call s:Highlight_Matching_Pair()
neosnippet  TextChanged
    *         call neosnippet#handlers#_restore_unnamed_register()
ALEEvents  TextChangedI
    *         call ale#Queue(g:ale_lint_delay)
matchparen  TextChangedI
    *         call s:Highlight_Matching_Pair()
deoplete  TextChangedI
    *         call s:completion_timer_start('TextChangedI')
neosnippet  TextChangedI
    *         call neosnippet#handlers#_restore_unnamed_register()
fugitive  User
    NERDTreeInit
              if exists('b:NERDTree.root.path.str') |   call FugitiveDetect(b:NERDTree.root.path.str()) | endif
    NERDTreeNewRoot
              if exists('b:NERDTree.root.path.str') |   call FugitiveDetect(b:NERDTree.root.path.str()) | endif
    Flags     call Hoist('buffer', function('FugitiveStatusline'))
User
    CmSetup   call cm#register_source({ 'name': 'neoinclude', 'abbreviation': 'FI', 'priority': 8, 'cm_refresh': 'cm#sources#neoinclude#refresh', 'cm_refresh_min_word_len': 0, })
    AirlineBeforeRefresh
              unlet! b:airline_head b:airline_do_mq_check
              unlet! b:fugitive_name
    AirlineToggledOn
              call s:toggle_on()
    AirlineToggledOff
              call s:toggle_off()
airline_tabline_buffers  User
    BufMRUChange
              call airline#extensions#tabline#buflist#clean()
fugitive_remove  User
    Fugitive  if s:DirCommitFile(@%)[1] =~# '^0\=$' | exe "command! -buffer -bar -bang -nargs=1 -complete=customlist,fugitive#PathComplete Gmove :execute s:Move(<bang>0,0,<q-args>)" | exe "command! -buffer -bar -bang -nargs=1 -complete=customlist,s:RenameComplete Grename :execute s:Move(<bang>0,1,<q-args>)" | exe "command! -buffer -bar -bang Gremove :execute s:Remove('edit',<bang>0)" | exe "command! -buffer -bar -bang Gdelete :execute s:Remove('bdelete',<bang>0)" | endif
fugitive_blame  User
    Fugitive  if get(b:, 'fugitive_type') =~# '^\%(file\|blob\|blame\)$' || filereadable(@%) |   exe "command! -buffer -bar -bang -range=0 -nargs=* Gblame :execute s:Blame(<bang>0,<line1>,<line2>,<count>,'<mods>',[<f-args>])" | endif
fugitive_folding  User
    Fugitive  if &filetype =~# '^git\%(commit\)\=$' && &foldtext ==# 'foldtext()' |    set foldtext=fugitive#Foldtext() | endif
necovim  User
    CmSetup   call cm#register_source({ 'name': 'vim', 'abbreviation': 'vim', 'priority': 9, 'scoping': 1, 'scopes': ['vim'], 'cm_refresh': 'cm#sources#necovim#refresh', 'cm_refresh_patterns': ['\w\+\.$'], })
fugitive  VimEnter
    *         if empty(expand('<amatch>'))|call FugitiveDetect(getcwd())|endif
gitgutter  VimEnter
    *         if winnr() != winnr('$') | call gitgutter#all(0) | endif
NERDTreeHijackNetrw  VimEnter
    *         silent! autocmd! FileExplorer
              call nerdtree#checkForBrowse(expand("<amatch>"))
PluginEasyTags  VimEnter
    *         call xolox#easytags#register(1)
sig_autocmds  VimEnter
    *         call signature#utils#SetupHighlightGroups()
airline  VimEnter
    *         call <sid>on_window_changed()
TagbarAutoCmds  VimEnter
    *         call s:CorrectFocusOnStartup()
fugitive_commit  VimLeavePre
    COMMIT_EDITMSG
              execute s:sub(s:FinishCommit(), '^echoerr (.*)', 'echohl ErrorMsg|echo \1|echohl NONE')
airline  VimResized
    *         unlet! w:airline_lastmode | :call <sid>airline_refresh()
TamanioVentana  VimResized
    *         :wincmd =
indentLine  WinNew
    *         call <SID>Setup()
fzf_popd  WinEnter
    *         call s:dopopd()
airline  WinEnter
    *         call <sid>on_window_changed()
matchparen  WinEnter
    *         call s:Highlight_Matching_Pair()
TagbarAutoCmds  WinEnter
    __Tagbar__.*
              call s:SetStatusLine()
    *         call s:HandleOnlyWindow()
              if bufwinnr(s:TagbarBufName()) == -1 |     call s:ShrinkIfExpanded() | endif
TagbarAutoCmds  WinLeave
    __Tagbar__.*
              call s:SetStatusLine()
--- Normal/Visual mode mappings ---
v  ["          *@:<C-U>exe "normal! gv"|call search('\%(^\s*".*\n\)\%(^\s*"\)\@!', "bW")<CR>
n  ["          *@:call search('\%(^\s*".*\n\)\%(^\s*"\)\@!', "bW")<CR>
v  []          *@m':<C-U>exe "normal! gv"|call search('^\s*endf*\%[unction]\>', "bW")<CR>
n  []          *@m':call search('^\s*endf*\%[unction]\>', "bW")<CR>
v  [[          *@m':<C-U>exe "normal! gv"|call search('^\s*fu\%[nction]\>', "bW")<CR>
n  [[          *@m':call search('^\s*fu\%[nction]\>', "bW")<CR>
v  ]"          *@:<C-U>exe "normal! gv"|call search('^\(\s*".*\n\)\@<!\(\s*"\)', "W")<CR>
n  ]"          *@:call search('^\(\s*".*\n\)\@<!\(\s*"\)', "W")<CR>
v  ][          *@m':<C-U>exe "normal! gv"|call search('^\s*endf*\%[unction]\>', "W")<CR>
n  ][          *@m':call search('^\s*endf*\%[unction]\>', "W")<CR>
v  ]]          *@m':<C-U>exe "normal! gv"|call search('^\s*fu\%[nction]\>', "W")<CR>
n  ]]          *@m':call search('^\s*fu\%[nction]\>', "W")<CR>
   <M-n>       *@:call AutoPairsJump()<CR>
   <M-p>       *@:call AutoPairsToggle()<CR>
n  <C-C>       * "+yy
x  <C-C>       * "+y
x  <C-E>         <Plug>(neosnippet_expand_target)
s  <C-E>         <Plug>(neosnippet_expand_or_jump)
s  <C-H>       * a<BS>
x  <C-H>         <Plug>RepeatPreviousObject
x  <C-L>         <Plug>RepeatNextObject
n  <C-L>       * :call AlternarInicioMedioFinalComoEnEmacs()<CR>
s  <CR>        * a<BS>
x  <C-N>       * :<C-U>call multiple_cursors#new("v", 0)<CR>
n  <C-N>       * :call multiple_cursors#new("n", 1)<CR>
n  <C-S>       * :update<CR>
n  <C-W>>      * :<C-U>call RepetirRedimensionadoVentana('>', v:count)<CR>
n  <C-W><      * :<C-U>call RepetirRedimensionadoVentana('<', v:count)<CR>
n  <C-W>+      * :<C-U>call RepetirRedimensionadoVentana('+', v:count)<CR>
n  <C-W>-      * :<C-U>call RepetirRedimensionadoVentana('-', v:count)<CR>
n  <Space>     * za
x  #           * :<C-U>call SeleccionVisual()<CR>?<C-R>=@/<CR><CR>N
n  #           * #N
o  %           * v:<C-U>call <SNR>100_Match_wrapper('',1,'o') <CR>
x  %           * :<C-U>call <SNR>100_Match_wrapper('',1,'v') <CR>m'gv``
n  %           * :<C-U>call <SNR>100_Match_wrapper('',1,'n') <CR>
x  &           * :&&<CR>
n  &           * :&&<CR>
n  '[          * :<C-U>call signature#mark#Goto("prev", "line", "alpha")<CR>
n  ']          * :<C-U>call signature#mark#Goto("next", "line", "alpha")<CR>
x  *           * :<C-U>call SeleccionVisual()<CR>/<C-R>=@/<CR><CR>N
n  *           * *N
n  ,ca           <Plug>NERDCommenterAltDelims
x  ,cu           <Plug>NERDCommenterUncomment
n  ,cu           <Plug>NERDCommenterUncomment
x  ,cb           <Plug>NERDCommenterAlignBoth
n  ,cb           <Plug>NERDCommenterAlignBoth
x  ,cl           <Plug>NERDCommenterAlignLeft
n  ,cl           <Plug>NERDCommenterAlignLeft
n  ,cA           <Plug>NERDCommenterAppend
x  ,cy           <Plug>NERDCommenterYank
n  ,cy           <Plug>NERDCommenterYank
x  ,cs           <Plug>NERDCommenterSexy
x  ,ci           <Plug>NERDCommenterInvert
n  ,ci           <Plug>NERDCommenterInvert
n  ,c$           <Plug>NERDCommenterToEOL
x  ,cn           <Plug>NERDCommenterNested
n  ,cn           <Plug>NERDCommenterNested
x  ,cm           <Plug>NERDCommenterMinimal
n  ,cm           <Plug>NERDCommenterMinimal
x  ,c<Space>     <Plug>NERDCommenterToggle
n  ,c<Space>     <Plug>NERDCommenterToggle
x  ,cc           <Plug>NERDCommenterComment
n  ,cc           <Plug>NERDCommenterComment
n  ,scp        * [s1z=<C-O>
n  ,scc        * 1z=
n  ,ss         * z=
n  ,sa         * zg
n  ,sh         * [szzzv
n  ,sl         * ]szzzv
n  ,tsp        * :setlocal spell!<CR>
n  ,ut         * :UpdateTags<CR>
x  ,evv        * :<C-U>       for linea in getline("'<", "'>") |     execute linea | endfor <CR>
n  ,evv        * :execute getline(".")<CR>
x  ,evn        * y@"
n  ,evn        * ^vg_y@"
n  ,ot         * :5sp|te<CR>:setlocal nospell nonu<CR>A
n  ,sv         * :source $MYVIMRC<CR>
n  ,av         * :tabnew $MYVIMRC<CR>
n  ,tth        * :call ToggleTextAndHelpFiles()<CR>
n  ,cfs        * :source ~/.vim/session/default<CR>
n  ,cs         * :source ~/.vim/session/
n  ,mds        * :mksession! ~/.vim/session/default<CR>
n  ,ms         * :mksession! ~/.vim/session/
n  ,mh         * ?\v^(\<|\=|\>){7}([^=].+)\?$<CR>
n  ,ml         * /\v^(\<|\=|\>){7}([^=].+)?$<CR>
x  ,rs         * :<C-U>call SeleccionVisual()<CR>:%s/<C-R>=@/<CR>/
x  ,rg           <Esc>,rg
x  ,rl         * :s/
n  ,rW         * :%s/\<<C-R>=expand("<cWORD>")<CR>\>\C/
n  ,rw         * :%s/\<<C-R><C-W>\>\C/
n  ,rg         * :%s/
n  ,rl         * :s/
n  ,gsr        * :lopen<CR>
n  ,gob        * :BuscarBuffers<Space>
n  ,gwd        * :lvimgrep <C-R><C-W> ./*<CR>
n  ,gcd        * :lvimgrep  ./*<Left><Left><Left><Left>
n  ,gcw        * :lvimgrep <C-R><C-W><Space>
n  ,gg         * :lvimgrep<Space>
n  ,hsc        * :nohlsearch|let @/ = ''<CR>
n  ,b            ,)
n  ,)          * i <Esc>r)
n  ,B            ,}
n  ,}          * A <Esc>r}==
x  ,ve         * :call ExtraerVariable()<CR>
n  ,ve         * viw:call ExtraerVariable()<CR>
n  ,al         * vip:Alinear<Space>
x  ,al         * :Alinear<Space>
n  ,po         * [p
n  ,pu         * ]p
n  ,tps        * :setlocal paste!<CR>
n  ,taf        * :call AlternarFormatoAlfanumerico()<CR>
n  ,faf        * :call DoblarFunciones()<CR>
n  ,ff           zfaf
n  ,fc         * zM
n  ,fo         * zR
n  ,tf         * za
n  ,cd         * :cd %:p:h<CR>:pwd<CR>
n  ,bd         * :bdelete!<CR>
n  ,bl         * :last<CR>
n  ,bj         * :bprevious<CR>
n  ,bk         * :bnext<CR>
n  ,bh         * :bfirst<CR>
n  ,bg         * :ls<CR>:buffer<Space>
n  ,bn         * :edit<Space>
n  ,tm         * :<C-U>call ModoAccionTabulacion()<CR>
n  ,t>         * :tabmove $<CR>
n  ,t<         * :tabmove 0<CR>
n  ,t+         * :tabmove +<CR>
n  ,t-         * :tabmove -<CR>
n  ,tk         * :tabnext<CR>
n  ,tj         * :tabprevious<CR>
n  ,tl         * :tablast<CR>
n  ,th         * :tabfirst<CR>
n  ,tw         * <C-W>T
n  ,to         * :tabonly<CR>
n  ,tn         * :tabnew<Space>
n  ,do         * :DiffOrigen<CR>
n  ,tdm        * :call AlternarModoDiff()<CR>
n  ,<NL>       * <C-W>J
n  ,<C-K>      * <C-W>K
n  ,<C-L>      * <C-W>L
n  ,<C-H>      * <C-W>H
n  ,wh         * :<C-U>hide<CR>
n  ,wo         * :<C-U>only<CR>
n  ,tve        * :call AlternarEdicionVirtual()<CR>
n  ,trn        * :setlocal relativenumber!<CR>
nox,em           <Plug>(easymotion-prefix)
n  ,tgtm         <Plug>(textmanip-toggle-mode)
x  ,tgtm         <Plug>(textmanip-toggle-mode)
n  ,vc         * :VCoolor<CR>
n  ,tbox       * :Tabularize /*<CR>vip<Esc>:substitute/ /=/g<CR>r A/<Esc>vipo<Esc>0r/:substitute/ /=/g<CR>:nohlsearch<CR>
x  ,tb         * :Tabularize /
n  ,tb         * :Tabularize /
n  ,tgtb       * :TagbarToggle<CR>
n  ,tgnt       * :NERDTreeToggle<CR>
n  ,jd         * :call JCommentWriter()<CR>
n  ,tsr        * :call AlternarRevisionEstatica()<CR>
n  ,tgut       * :UndotreeToggle<CR>
x  .           * :normal .<CR>
n  //          * :nohlsearch<CR>
n  <,            <Plug>Argumentative_MoveLeft
x  <           * <gv
n  >,            <Plug>Argumentative_MoveRight
x  >           * >gv
n  N           * Nzzzv
x  Q           * !$SHELL<CR>
n  Q           * !!$SHELL<CR>
x  S             <Plug>VSurround
noxY           * y$
n  ZA          * :quitall!<CR>
n  ZG          * :exit all<CR>
o  [%          * v:<C-U>call <SNR>100_MultiMatch("bW", "o") <CR>
x  [%            <Esc>[%m'gv``
n  [%          * :<C-U>call <SNR>100_MultiMatch("bW", "n") <CR>
x  [,            <Plug>Argumentative_XPrev
o  [,            <Plug>Argumentative_Prev
n  [,            <Plug>Argumentative_Prev
n  [=          * :<C-U>call signature#marker#Goto("prev", "any",  v:count)<CR>
n  [-          * :<C-U>call signature#marker#Goto("prev", "same", v:count)<CR>
n  [`          * :<C-U>call signature#mark#Goto("prev", "spot", "pos")<CR>
n  ['          * :<C-U>call signature#mark#Goto("prev", "line", "pos")<CR>
n  [h            <Plug>GitGutterPrevHunk
o  ]%          * v:<C-U>call <SNR>100_MultiMatch("W",  "o") <CR>
x  ]%            <Esc>]%m'gv``
n  ]%          * :<C-U>call <SNR>100_MultiMatch("W",  "n") <CR>
x  ],            <Plug>Argumentative_XNext
o  ],            <Plug>Argumentative_Next
n  ],            <Plug>Argumentative_Next
n  ]=          * :<C-U>call signature#marker#Goto("next", "any",  v:count)<CR>
n  ]-          * :<C-U>call signature#marker#Goto("next", "same", v:count)<CR>
n  ]`          * :<C-U>call signature#mark#Goto("next", "spot", "pos")<CR>
n  ]'          * :<C-U>call signature#mark#Goto("next", "line", "pos")<CR>
n  ]h            <Plug>GitGutterNextHunk
n  __          * :<C-U>split<CR>
n  _           * :<C-U>split<Space>
n  `[          * :<C-U>call signature#mark#Goto("prev", "spot", "alpha")<CR>
n  `]          * :<C-U>call signature#mark#Goto("next", "spot", "alpha")<CR>
x  av            <Plug>AroundLastMap
o  av            <Plug>AroundLastMap
x  an            <Plug>AroundNextMap
o  an            <Plug>AroundNextMap
o  ac            <Plug>(textobj-comment-a)
x  ac            <Plug>(textobj-comment-a)
o  aC            <Plug>(textobj-comment-big-a)
x  aC            <Plug>(textobj-comment-big-a)
o  aF            <Plug>(textobj-function-A)
x  aF            <Plug>(textobj-function-A)
o  af            <Plug>(textobj-function-a)
x  af            <Plug>(textobj-function-a)
o  a,            <Plug>Argumentative_OpPendingOuterTextObject
x  a,            <Plug>Argumentative_OuterTextObject
x  aI          * :<C-U>cal <SNR>81_HandleTextObjectMapping(0, 1, 1, [line("'<"), line("'>"), col("'<"), col("'>")])<CR><Esc>gv
o  aI          * :<C-U>cal <SNR>81_HandleTextObjectMapping(0, 1, 0, [line("."), line("."), col("."), col(".")])<CR>
x  ai          * :<C-U>cal <SNR>81_HandleTextObjectMapping(0, 0, 1, [line("'<"), line("'>"), col("'<"), col("'>")])<CR><Esc>gv
o  ai          * :<C-U>cal <SNR>81_HandleTextObjectMapping(0, 0, 0, [line("."), line("."), col("."), col(".")])<CR>
o  a%          * :<C-U>normal vi%<CR>
x  a%          * GoggV
o  al          * :<C-U>normal val<CR>
x  al          * $o0
o  ah            <Plug>GitGutterTextObjectOuterPending
n  cS            <Plug>CSurround
n  cs            <Plug>Csurround
n  ds            <Plug>Dsurround
n  dm          * :<C-U>call signature#utils#Remove(v:count)<CR>
x  gx            <Plug>NetrwBrowseXVis
n  gx            <Plug>NetrwBrowseX
o  g%          * v:<C-U>call <SNR>100_Match_wrapper('',0,'o') <CR>
x  g%          * :<C-U>call <SNR>100_Match_wrapper('',0,'v') <CR>m'gv``
n  g%          * :<C-U>call <SNR>100_Match_wrapper('',0,'n') <CR>
x  gr            <Plug>ReplaceWithRegisterVisual
n  grr           <Plug>ReplaceWithRegisterLine
n  gr            <Plug>ReplaceWithRegisterOperator
n  gcu           <Plug>Commentary<Plug>Commentary
n  gcc           <Plug>CommentaryLine
o  gc            <Plug>Commentary
n  gc            <Plug>Commentary
x  gc            <Plug>Commentary
x  gS            <Plug>VgSurround
x  g<M-n>      * :<C-U>call multiple_cursors#select_all("v", 0)<CR>
n  g<M-n>      * :call multiple_cursors#select_all("n", 0)<CR>
x  g<C-N>      * :<C-U>call multiple_cursors#new("v", 0)<CR>
n  g<C-N>      * :call multiple_cursors#new("n", 0)<CR>
n  gp          * '`[' . strpart(getregtype(), 0, 1) . '`]'
n  gV          * `[v`]
n  gk          * k
n  gj          * j
x  iv            <Plug>InnerLastMap
o  iv            <Plug>InnerLastMap
x  in            <Plug>InnerNextMap
o  in            <Plug>InnerNextMap
o  ic            <Plug>(textobj-comment-i)
x  ic            <Plug>(textobj-comment-i)
o  if            <Plug>(textobj-function-i)
x  if            <Plug>(textobj-function-i)
o  iF            <Plug>(textobj-function-I)
x  iF            <Plug>(textobj-function-I)
o  i,            <Plug>Argumentative_OpPendingInnerTextObject
x  i,            <Plug>Argumentative_InnerTextObject
x  iI          * :<C-U>cal <SNR>81_HandleTextObjectMapping(1, 1, 1, [line("'<"), line("'>"), col("'<"), col("'>")])<CR><Esc>gv
o  iI          * :<C-U>cal <SNR>81_HandleTextObjectMapping(1, 1, 0, [line("."), line("."), col("."), col(".")])<CR>
x  ii          * :<C-U>cal <SNR>81_HandleTextObjectMapping(1, 0, 1, [line("'<"), line("'>"), col("'<"), col("'>")])<CR><Esc>gv
o  ii          * :<C-U>cal <SNR>81_HandleTextObjectMapping(1, 0, 0, [line("."), line("."), col("."), col(".")])<CR>
o  i%          * :<C-U>normal vi%<CR>
x  i%          * GoggV
o  il          * :<C-U>normal vil<CR>
x  il          * g_o^
o  ih            <Plug>GitGutterTextObjectInnerVisual omap ah <Plug>GitGutterTextObjectOuterVisual
n  j           * gj
n  k           * gk
n  m?          * :<C-U>call signature#marker#List(v:count, 0)<CR>
n  m/          * :<C-U>call signature#mark#List(0, 0)<CR>
n  m<BS>       * :<C-U>call signature#marker#Purge()<CR>
n  m<Space>    * :<C-U>call signature#mark#Purge("all")<CR>
n  m-          * :<C-U>call signature#mark#Purge("line")<CR>
n  m.          * :<C-U>call signature#mark#ToggleAtLine()<CR>
n  m,          * :<C-U>call signature#mark#Toggle("next")<CR>
n  m           * :<C-U>call signature#utils#Input()<CR>
n  n           * nzzzv
x  v           * (mode() ==# 'v' ? 'V' : mode() ==# 'V' ? "\<C-V>" : 'v')
n  ySS           <Plug>YSsurround
n  ySs           <Plug>YSsurround
n  yss           <Plug>Yssurround
n  yS            <Plug>YSurround
n  ys            <Plug>Ysurround
n  ||          * :<C-U>vsplit<CR>
n  |           * :<C-U>vsplit<Space>
s  <Del>       * a<BS>
s  <BS>        * a<BS>
   <Plug>AirlineSelectNextTab * :<C-U>call <SNR>136_jump_to_tab(v:count1)<CR>
   <Plug>AirlineSelectPrevTab * :<C-U>call <SNR>136_jump_to_tab(-v:count1)<CR>
   <Plug>AirlineSelectTab9 * :call <SNR>136_select_tab(8)<CR>
   <Plug>AirlineSelectTab8 * :call <SNR>136_select_tab(7)<CR>
   <Plug>AirlineSelectTab7 * :call <SNR>136_select_tab(6)<CR>
   <Plug>AirlineSelectTab6 * :call <SNR>136_select_tab(5)<CR>
   <Plug>AirlineSelectTab5 * :call <SNR>136_select_tab(4)<CR>
   <Plug>AirlineSelectTab4 * :call <SNR>136_select_tab(3)<CR>
   <Plug>AirlineSelectTab3 * :call <SNR>136_select_tab(2)<CR>
   <Plug>AirlineSelectTab2 * :call <SNR>136_select_tab(1)<CR>
   <Plug>AirlineSelectTab1 * :call <SNR>136_select_tab(0)<CR>
n  <SNR>144_:  * :<C-U><C-R>=v:count ? v:count : ''<CR>
v  <Plug>NetrwBrowseXVis * :<C-U>call netrw#BrowseXVis()<CR>
n  <Plug>NetrwBrowseX * :call netrw#BrowseX(expand((exists("g:netrw_gx")? g:netrw_gx : '<cfile>')),netrw#CheckIfRemote())<CR>
n  <Plug>ReplaceWithRegisterVisual * :<C-U>call setline('.', getline('.'))|execute 'silent! call repeat#setreg("\<Plug>ReplaceWithRegisterVisual", v:register)'|call ReplaceWithRegister#SetRegister()|if ReplaceWithRegister#IsExprReg()|    let g:ReplaceWithRegister_expr = getreg('=')|endif|execute 'normal!' ReplaceWithRegister#VisualMode()|call ReplaceWithRegister#Operator('visual', "\<Plug>ReplaceWithRegisterVisual")<CR>
v  <Plug>ReplaceWithRegisterVisual * :<C-U>call setline('.', getline('.'))|execute 'silent! call repeat#setreg("\<Plug>ReplaceWithRegisterVisual", v:register)'|call ReplaceWithRegister#SetRegister()|if ReplaceWithRegister#IsExprReg()|    let g:ReplaceWithRegister_expr = getreg('=')|endif|call ReplaceWithRegister#Operator('visual', "\<Plug>ReplaceWithRegisterVisual")<CR>
n  <Plug>ReplaceWithRegisterLine * :<C-U>call setline('.', getline('.'))|execute 'silent! call repeat#setreg("\<Plug>ReplaceWithRegisterLine", v:register)'|call ReplaceWithRegister#SetRegister()|if ReplaceWithRegister#IsExprReg()|    let g:ReplaceWithRegister_expr = getreg('=')|endif|execute 'normal! V' . v:count1 . "_\<Esc>"|call ReplaceWithRegister#Operator('visual', "\<Plug>ReplaceWithRegisterLine")<CR>
n  <Plug>ReplaceWithRegisterExpressionSpecial * :<C-U>let g:ReplaceWithRegister_expr = getreg('=')|execute 'normal!' v:count1 . '.'<CR>
n  <Plug>ReplaceWithRegisterOperator * ReplaceWithRegister#OperatorExpression()
n  <Plug>CommentaryUndo   :echoerr "Change your <Plug>CommentaryUndo map to <Plug>Commentary<Plug>Commentary"<CR>
n  <Plug>ChangeCommentary * c:<C-U>call <SNR>88_textobject(1)<CR>
o  <Plug>Commentary * :<C-U>call <SNR>88_textobject(get(v:, 'operator', '') ==# 'c')<CR>
n  <Plug>CommentaryLine * <SNR>88_go() . '_'
n  <Plug>Commentary * <SNR>88_go()
x  <Plug>Commentary * <SNR>88_go()
v  <Plug>VgSurround * :<C-U>call <SNR>87_opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>
v  <Plug>VSurround * :<C-U>call <SNR>87_opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>
n  <Plug>YSurround * <SNR>87_opfunc2('setup')
n  <Plug>Ysurround * <SNR>87_opfunc('setup')
n  <Plug>YSsurround * <SNR>87_opfunc2('setup').'_'
n  <Plug>Yssurround * '^'.v:count1.<SNR>87_opfunc('setup').'g_'
n  <Plug>CSurround * :<C-U>call <SNR>87_changesurround(1)<CR>
n  <Plug>Csurround * :<C-U>call <SNR>87_changesurround()<CR>
n  <Plug>Dsurround * :<C-U>call <SNR>87_dosurround(<SNR>87_inputtarget())<CR>
n  <Plug>SurroundRepeat * .
   <Plug>RepeatPreviousObject * :<C-U>call <SNR>86_RepeatPreviousObject()<CR>
   <Plug>RepeatNextObject * :<C-U>call <SNR>86_RepeatNextObject()<CR>
   <Plug>InnerLastMap * :<C-U>call <SNR>86_NextTextObject('i', 'F', 'InnerLastMap', '')<CR>
   <Plug>AroundLastMap * :<C-U>call <SNR>86_NextTextObject('a', 'F', 'AroundLastMap', '')<CR>
   <Plug>InnerNextMap * :<C-U>call <SNR>86_NextTextObject('i', 'f', 'InnerNextMap', '')<CR>
   <Plug>AroundNextMap * :<C-U>call <SNR>86_NextTextObject('a', 'f', 'AroundNextMap', '')<CR>
o  <Plug>(textobj-comment-i) & :<C-U>call g:__textobj_comment.do_by_function("select-i","-","o")<CR>
v  <Plug>(textobj-comment-i) & :<C-U>call g:__textobj_comment.do_by_function("select-i","-","v")<CR>
o  <Plug>(textobj-comment-a) & :<C-U>call g:__textobj_comment.do_by_function("select-a","-","o")<CR>
v  <Plug>(textobj-comment-a) & :<C-U>call g:__textobj_comment.do_by_function("select-a","-","v")<CR>
o  <Plug>(textobj-comment-big-a) & :<C-U>call g:__textobj_comment.do_by_function("select-a","big","o")<CR>
v  <Plug>(textobj-comment-big-a) & :<C-U>call g:__textobj_comment.do_by_function("select-a","big","v")<CR>
o  <Plug>(textobj-function-i) & :<C-U>call g:__textobj_function.do_by_function("select","i","o")<CR>
v  <Plug>(textobj-function-i) & :<C-U>call g:__textobj_function.do_by_function("select","i","v")<CR>
o  <Plug>(textobj-function-A) & :<C-U>call g:__textobj_function.do_by_function("select","A","o")<CR>
v  <Plug>(textobj-function-A) & :<C-U>call g:__textobj_function.do_by_function("select","A","v")<CR>
o  <Plug>(textobj-function-I) & :<C-U>call g:__textobj_function.do_by_function("select","I","o")<CR>
v  <Plug>(textobj-function-I) & :<C-U>call g:__textobj_function.do_by_function("select","I","v")<CR>
o  <Plug>(textobj-function-a) & :<C-U>call g:__textobj_function.do_by_function("select","a","o")<CR>
v  <Plug>(textobj-function-a) & :<C-U>call g:__textobj_function.do_by_function("select","a","v")<CR>
n  <SNR>84_    * <SNR>84_
   <Plug>Argumentative_OpPendingOuterTextObject & :exe "normal v\<SNR>82_Argumentative_OuterTextObject"<CR>
   <Plug>Argumentative_OpPendingInnerTextObject & :exe "normal v\<SNR>82_Argumentative_InnerTextObject"<CR>
   <Plug>Argumentative_OuterTextObject & :<C-U>call <SNR>82_VisualTextObject("\<SNR>82_OuterTextObject")<CR>
   <Plug>Argumentative_InnerTextObject & :<C-U>call <SNR>82_VisualTextObject("\<SNR>82_InnerTextObject")<CR>
   <SNR>82_Argumentative_OuterTextObject * :<C-U>call <SNR>82_VisualTextObject("\<SNR>82_OuterTextObject")<CR>
   <SNR>82_Argumentative_InnerTextObject * :<C-U>call <SNR>82_VisualTextObject("\<SNR>82_InnerTextObject")<CR>
   <Plug>Argumentative_MoveRight & :<C-U>call <SNR>82_Count("MoveRight", "\<SNR>82_MoveRight")<CR>
   <Plug>Argumentative_MoveLeft & :<C-U>call  <SNR>82_Count("MoveLeft", "\<SNR>82_MoveLeft")<CR>
   <Plug>Argumentative_XNext & :<C-U>call <SNR>82_Count("", "\<SNR>82_ArgMotion", 1)<CR>m'gv``
   <Plug>Argumentative_XPrev & :<C-U>call <SNR>82_Count("", "\<SNR>82_ArgMotion", 0)<CR>m'gv``
   <Plug>Argumentative_Next & :<C-U>call <SNR>82_Count("", "\<SNR>82_ArgMotion", 1)<CR>
   <Plug>Argumentative_Prev & :<C-U>call <SNR>82_Count("", "\<SNR>82_ArgMotion", 0)<CR>
   <Plug>(easymotion-prefix)N   <Plug>(easymotion-N)
   <Plug>(easymotion-prefix)n   <Plug>(easymotion-n)
   <Plug>(easymotion-prefix)k   <Plug>(easymotion-k)
   <Plug>(easymotion-prefix)j   <Plug>(easymotion-j)
   <Plug>(easymotion-prefix)gE   <Plug>(easymotion-gE)
   <Plug>(easymotion-prefix)ge   <Plug>(easymotion-ge)
   <Plug>(easymotion-prefix)E   <Plug>(easymotion-E)
   <Plug>(easymotion-prefix)e   <Plug>(easymotion-e)
   <Plug>(easymotion-prefix)B   <Plug>(easymotion-B)
   <Plug>(easymotion-prefix)b   <Plug>(easymotion-b)
   <Plug>(easymotion-prefix)W   <Plug>(easymotion-W)
   <Plug>(easymotion-prefix)w   <Plug>(easymotion-w)
   <Plug>(easymotion-prefix)T   <Plug>(easymotion-T)
   <Plug>(easymotion-prefix)t   <Plug>(easymotion-t)
   <Plug>(easymotion-prefix)s   <Plug>(easymotion-s)
   <Plug>(easymotion-prefix)F   <Plug>(easymotion-F)
   <Plug>(easymotion-prefix)f   <Plug>(easymotion-f)
x  <Plug>(easymotion-activate) * :<C-U>call EasyMotion#activate(1)<CR>
nos<Plug>(easymotion-activate) * :<C-U>call EasyMotion#activate(0)<CR>
   <Plug>(easymotion-dotrepeat) * :<C-U>call EasyMotion#DotRepeat()<CR>
x  <Plug>(easymotion-repeat) * <Esc>:<C-U>call EasyMotion#Repeat(1)<CR>
nos<Plug>(easymotion-repeat) * :<C-U>call EasyMotion#Repeat(0)<CR>
x  <Plug>(easymotion-prev) * :<C-U>call EasyMotion#NextPrevious(1,1)<CR>
nos<Plug>(easymotion-prev) * :<C-U>call EasyMotion#NextPrevious(0,1)<CR>
x  <Plug>(easymotion-next) * :<C-U>call EasyMotion#NextPrevious(1,0)<CR>
nos<Plug>(easymotion-next) * :<C-U>call EasyMotion#NextPrevious(0,0)<CR>
x  <Plug>(easymotion-wl) * <Esc>:<C-U>call EasyMotion#WBL(1,0)<CR>
nos<Plug>(easymotion-wl) * :<C-U>call EasyMotion#WBL(0,0)<CR>
x  <Plug>(easymotion-lineforward) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,0)<CR>
nos<Plug>(easymotion-lineforward) * :<C-U>call EasyMotion#LineAnywhere(0,0)<CR>
x  <Plug>(easymotion-lineanywhere) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,2)<CR>
nos<Plug>(easymotion-lineanywhere) * :<C-U>call EasyMotion#LineAnywhere(0,2)<CR>
x  <Plug>(easymotion-bd-wl) * <Esc>:<C-U>call EasyMotion#WBL(1,2)<CR>
nos<Plug>(easymotion-bd-wl) * :<C-U>call EasyMotion#WBL(0,2)<CR>
x  <Plug>(easymotion-linebackward) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,1)<CR>
nos<Plug>(easymotion-linebackward) * :<C-U>call EasyMotion#LineAnywhere(0,1)<CR>
x  <Plug>(easymotion-bl) * <Esc>:<C-U>call EasyMotion#WBL(1,1)<CR>
nos<Plug>(easymotion-bl) * :<C-U>call EasyMotion#WBL(0,1)<CR>
x  <Plug>(easymotion-el) * <Esc>:<C-U>call EasyMotion#EL(1,0)<CR>
nos<Plug>(easymotion-el) * :<C-U>call EasyMotion#EL(0,0)<CR>
x  <Plug>(easymotion-gel) * <Esc>:<C-U>call EasyMotion#EL(1,1)<CR>
nos<Plug>(easymotion-gel) * :<C-U>call EasyMotion#EL(0,1)<CR>
x  <Plug>(easymotion-bd-el) * <Esc>:<C-U>call EasyMotion#EL(1,2)<CR>
nos<Plug>(easymotion-bd-el) * :<C-U>call EasyMotion#EL(0,2)<CR>
x  <Plug>(easymotion-jumptoanywhere) * <Esc>:<C-U>call EasyMotion#JumpToAnywhere(1,2)<CR>
nos<Plug>(easymotion-jumptoanywhere) * :<C-U>call EasyMotion#JumpToAnywhere(0,2)<CR>
x  <Plug>(easymotion-vim-n) * <Esc>:<C-U>call EasyMotion#Search(1,0,1)<CR>
nos<Plug>(easymotion-vim-n) * :<C-U>call EasyMotion#Search(0,0,1)<CR>
x  <Plug>(easymotion-n) * <Esc>:<C-U>call EasyMotion#Search(1,0,0)<CR>
nos<Plug>(easymotion-n) * :<C-U>call EasyMotion#Search(0,0,0)<CR>
x  <Plug>(easymotion-bd-n) * <Esc>:<C-U>call EasyMotion#Search(1,2,0)<CR>
nos<Plug>(easymotion-bd-n) * :<C-U>call EasyMotion#Search(0,2,0)<CR>
x  <Plug>(easymotion-vim-N) * <Esc>:<C-U>call EasyMotion#Search(1,1,1)<CR>
nos<Plug>(easymotion-vim-N) * :<C-U>call EasyMotion#Search(0,1,1)<CR>
x  <Plug>(easymotion-N) * <Esc>:<C-U>call EasyMotion#Search(1,1,0)<CR>
nos<Plug>(easymotion-N) * :<C-U>call EasyMotion#Search(0,1,0)<CR>
x  <Plug>(easymotion-eol-j) * <Esc>:<C-U>call EasyMotion#Eol(1,0)<CR>
nos<Plug>(easymotion-eol-j) * :<C-U>call EasyMotion#Eol(0,0)<CR>
x  <Plug>(easymotion-sol-k) * <Esc>:<C-U>call EasyMotion#Sol(1,1)<CR>
nos<Plug>(easymotion-sol-k) * :<C-U>call EasyMotion#Sol(0,1)<CR>
x  <Plug>(easymotion-sol-j) * <Esc>:<C-U>call EasyMotion#Sol(1,0)<CR>
nos<Plug>(easymotion-sol-j) * :<C-U>call EasyMotion#Sol(0,0)<CR>
x  <Plug>(easymotion-k) * <Esc>:<C-U>call EasyMotion#JK(1,1)<CR>
nos<Plug>(easymotion-k) * :<C-U>call EasyMotion#JK(0,1)<CR>
x  <Plug>(easymotion-j) * <Esc>:<C-U>call EasyMotion#JK(1,0)<CR>
nos<Plug>(easymotion-j) * :<C-U>call EasyMotion#JK(0,0)<CR>
x  <Plug>(easymotion-bd-jk) * <Esc>:<C-U>call EasyMotion#JK(1,2)<CR>
nos<Plug>(easymotion-bd-jk) * :<C-U>call EasyMotion#JK(0,2)<CR>
x  <Plug>(easymotion-eol-bd-jk) * <Esc>:<C-U>call EasyMotion#Eol(1,2)<CR>
nos<Plug>(easymotion-eol-bd-jk) * :<C-U>call EasyMotion#Eol(0,2)<CR>
x  <Plug>(easymotion-sol-bd-jk) * <Esc>:<C-U>call EasyMotion#Sol(1,2)<CR>
nos<Plug>(easymotion-sol-bd-jk) * :<C-U>call EasyMotion#Sol(0,2)<CR>
x  <Plug>(easymotion-eol-k) * <Esc>:<C-U>call EasyMotion#Eol(1,1)<CR>
nos<Plug>(easymotion-eol-k) * :<C-U>call EasyMotion#Eol(0,1)<CR>
x  <Plug>(easymotion-iskeyword-ge) * <Esc>:<C-U>call EasyMotion#EK(1,1)<CR>
nos<Plug>(easymotion-iskeyword-ge) * :<C-U>call EasyMotion#EK(0,1)<CR>
x  <Plug>(easymotion-w) * <Esc>:<C-U>call EasyMotion#WB(1,0)<CR>
nos<Plug>(easymotion-w) * :<C-U>call EasyMotion#WB(0,0)<CR>
x  <Plug>(easymotion-bd-W) * <Esc>:<C-U>call EasyMotion#WBW(1,2)<CR>
nos<Plug>(easymotion-bd-W) * :<C-U>call EasyMotion#WBW(0,2)<CR>
x  <Plug>(easymotion-iskeyword-w) * <Esc>:<C-U>call EasyMotion#WBK(1,0)<CR>
nos<Plug>(easymotion-iskeyword-w) * :<C-U>call EasyMotion#WBK(0,0)<CR>
x  <Plug>(easymotion-gE) * <Esc>:<C-U>call EasyMotion#EW(1,1)<CR>
nos<Plug>(easymotion-gE) * :<C-U>call EasyMotion#EW(0,1)<CR>
x  <Plug>(easymotion-e) * <Esc>:<C-U>call EasyMotion#E(1,0)<CR>
nos<Plug>(easymotion-e) * :<C-U>call EasyMotion#E(0,0)<CR>
x  <Plug>(easymotion-bd-E) * <Esc>:<C-U>call EasyMotion#EW(1,2)<CR>
nos<Plug>(easymotion-bd-E) * :<C-U>call EasyMotion#EW(0,2)<CR>
x  <Plug>(easymotion-iskeyword-e) * <Esc>:<C-U>call EasyMotion#EK(1,0)<CR>
nos<Plug>(easymotion-iskeyword-e) * :<C-U>call EasyMotion#EK(0,0)<CR>
x  <Plug>(easymotion-b) * <Esc>:<C-U>call EasyMotion#WB(1,1)<CR>
nos<Plug>(easymotion-b) * :<C-U>call EasyMotion#WB(0,1)<CR>
x  <Plug>(easymotion-iskeyword-b) * <Esc>:<C-U>call EasyMotion#WBK(1,1)<CR>
nos<Plug>(easymotion-iskeyword-b) * :<C-U>call EasyMotion#WBK(0,1)<CR>
x  <Plug>(easymotion-iskeyword-bd-w) * <Esc>:<C-U>call EasyMotion#WBK(1,2)<CR>
nos<Plug>(easymotion-iskeyword-bd-w) * :<C-U>call EasyMotion#WBK(0,2)<CR>
x  <Plug>(easymotion-W) * <Esc>:<C-U>call EasyMotion#WBW(1,0)<CR>
nos<Plug>(easymotion-W) * :<C-U>call EasyMotion#WBW(0,0)<CR>
x  <Plug>(easymotion-bd-w) * <Esc>:<C-U>call EasyMotion#WB(1,2)<CR>
nos<Plug>(easymotion-bd-w) * :<C-U>call EasyMotion#WB(0,2)<CR>
x  <Plug>(easymotion-iskeyword-bd-e) * <Esc>:<C-U>call EasyMotion#EK(1,2)<CR>
nos<Plug>(easymotion-iskeyword-bd-e) * :<C-U>call EasyMotion#EK(0,2)<CR>
x  <Plug>(easymotion-ge) * <Esc>:<C-U>call EasyMotion#E(1,1)<CR>
nos<Plug>(easymotion-ge) * :<C-U>call EasyMotion#E(0,1)<CR>
x  <Plug>(easymotion-E) * <Esc>:<C-U>call EasyMotion#EW(1,0)<CR>
nos<Plug>(easymotion-E) * :<C-U>call EasyMotion#EW(0,0)<CR>
x  <Plug>(easymotion-bd-e) * <Esc>:<C-U>call EasyMotion#E(1,2)<CR>
nos<Plug>(easymotion-bd-e) * :<C-U>call EasyMotion#E(0,2)<CR>
x  <Plug>(easymotion-B) * <Esc>:<C-U>call EasyMotion#WBW(1,1)<CR>
nos<Plug>(easymotion-B) * :<C-U>call EasyMotion#WBW(0,1)<CR>
n  <Plug>(easymotion-overwin-w) * :<C-U>call EasyMotion#overwin#w()<CR>
n  <Plug>(easymotion-overwin-line) * :<C-U>call EasyMotion#overwin#line()<CR>
n  <Plug>(easymotion-overwin-f2) * :<C-U>call EasyMotion#OverwinF(2)<CR>
n  <Plug>(easymotion-overwin-f) * :<C-U>call EasyMotion#OverwinF(1)<CR>
x  <Plug>(easymotion-Tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,1)<CR>
nos<Plug>(easymotion-Tln) * :<C-U>call EasyMotion#TL(-1,0,1)<CR>
x  <Plug>(easymotion-t2) * <Esc>:<C-U>call EasyMotion#T(2,1,0)<CR>
nos<Plug>(easymotion-t2) * :<C-U>call EasyMotion#T(2,0,0)<CR>
x  <Plug>(easymotion-t) * <Esc>:<C-U>call EasyMotion#T(1,1,0)<CR>
nos<Plug>(easymotion-t) * :<C-U>call EasyMotion#T(1,0,0)<CR>
x  <Plug>(easymotion-s) * <Esc>:<C-U>call EasyMotion#S(1,1,2)<CR>
nos<Plug>(easymotion-s) * :<C-U>call EasyMotion#S(1,0,2)<CR>
x  <Plug>(easymotion-tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,0)<CR>
nos<Plug>(easymotion-tn) * :<C-U>call EasyMotion#T(-1,0,0)<CR>
x  <Plug>(easymotion-bd-t2) * <Esc>:<C-U>call EasyMotion#T(2,1,2)<CR>
nos<Plug>(easymotion-bd-t2) * :<C-U>call EasyMotion#T(2,0,2)<CR>
x  <Plug>(easymotion-tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,0)<CR>
nos<Plug>(easymotion-tl) * :<C-U>call EasyMotion#TL(1,0,0)<CR>
x  <Plug>(easymotion-bd-tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,2)<CR>
nos<Plug>(easymotion-bd-tn) * :<C-U>call EasyMotion#T(-1,0,2)<CR>
x  <Plug>(easymotion-fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,0)<CR>
nos<Plug>(easymotion-fn) * :<C-U>call EasyMotion#S(-1,0,0)<CR>
x  <Plug>(easymotion-bd-tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,2)<CR>
nos<Plug>(easymotion-bd-tl) * :<C-U>call EasyMotion#TL(1,0,2)<CR>
x  <Plug>(easymotion-fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,0)<CR>
nos<Plug>(easymotion-fl) * :<C-U>call EasyMotion#SL(1,0,0)<CR>
x  <Plug>(easymotion-bd-tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,2)<CR>
nos<Plug>(easymotion-bd-tl2) * :<C-U>call EasyMotion#TL(2,0,2)<CR>
x  <Plug>(easymotion-bd-fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,2)<CR>
nos<Plug>(easymotion-bd-fn) * :<C-U>call EasyMotion#S(-1,0,2)<CR>
x  <Plug>(easymotion-f) * <Esc>:<C-U>call EasyMotion#S(1,1,0)<CR>
nos<Plug>(easymotion-f) * :<C-U>call EasyMotion#S(1,0,0)<CR>
x  <Plug>(easymotion-bd-fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,2)<CR>
nos<Plug>(easymotion-bd-fl) * :<C-U>call EasyMotion#SL(1,0,2)<CR>
x  <Plug>(easymotion-Fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,1)<CR>
nos<Plug>(easymotion-Fl2) * :<C-U>call EasyMotion#SL(2,0,1)<CR>
x  <Plug>(easymotion-tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,0)<CR>
nos<Plug>(easymotion-tl2) * :<C-U>call EasyMotion#TL(2,0,0)<CR>
x  <Plug>(easymotion-f2) * <Esc>:<C-U>call EasyMotion#S(2,1,0)<CR>
nos<Plug>(easymotion-f2) * :<C-U>call EasyMotion#S(2,0,0)<CR>
x  <Plug>(easymotion-Fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,1)<CR>
nos<Plug>(easymotion-Fln) * :<C-U>call EasyMotion#SL(-1,0,1)<CR>
x  <Plug>(easymotion-sln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,2)<CR>
nos<Plug>(easymotion-sln) * :<C-U>call EasyMotion#SL(-1,0,2)<CR>
x  <Plug>(easymotion-tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,0)<CR>
nos<Plug>(easymotion-tln) * :<C-U>call EasyMotion#TL(-1,0,0)<CR>
x  <Plug>(easymotion-fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,0)<CR>
nos<Plug>(easymotion-fl2) * :<C-U>call EasyMotion#SL(2,0,0)<CR>
x  <Plug>(easymotion-bd-fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,2)<CR>
nos<Plug>(easymotion-bd-fl2) * :<C-U>call EasyMotion#SL(2,0,2)<CR>
x  <Plug>(easymotion-T2) * <Esc>:<C-U>call EasyMotion#T(2,1,1)<CR>
nos<Plug>(easymotion-T2) * :<C-U>call EasyMotion#T(2,0,1)<CR>
x  <Plug>(easymotion-bd-tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,2)<CR>
nos<Plug>(easymotion-bd-tln) * :<C-U>call EasyMotion#TL(-1,0,2)<CR>
x  <Plug>(easymotion-T) * <Esc>:<C-U>call EasyMotion#T(1,1,1)<CR>
nos<Plug>(easymotion-T) * :<C-U>call EasyMotion#T(1,0,1)<CR>
x  <Plug>(easymotion-bd-t) * <Esc>:<C-U>call EasyMotion#T(1,1,2)<CR>
nos<Plug>(easymotion-bd-t) * :<C-U>call EasyMotion#T(1,0,2)<CR>
x  <Plug>(easymotion-Tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,1)<CR>
nos<Plug>(easymotion-Tn) * :<C-U>call EasyMotion#T(-1,0,1)<CR>
x  <Plug>(easymotion-s2) * <Esc>:<C-U>call EasyMotion#S(2,1,2)<CR>
nos<Plug>(easymotion-s2) * :<C-U>call EasyMotion#S(2,0,2)<CR>
x  <Plug>(easymotion-Tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,1)<CR>
nos<Plug>(easymotion-Tl) * :<C-U>call EasyMotion#TL(1,0,1)<CR>
x  <Plug>(easymotion-sn) * <Esc>:<C-U>call EasyMotion#S(-1,1,2)<CR>
nos<Plug>(easymotion-sn) * :<C-U>call EasyMotion#S(-1,0,2)<CR>
x  <Plug>(easymotion-Fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,1)<CR>
nos<Plug>(easymotion-Fn) * :<C-U>call EasyMotion#S(-1,0,1)<CR>
x  <Plug>(easymotion-sl) * <Esc>:<C-U>call EasyMotion#SL(1,1,2)<CR>
nos<Plug>(easymotion-sl) * :<C-U>call EasyMotion#SL(1,0,2)<CR>
x  <Plug>(easymotion-Fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,1)<CR>
nos<Plug>(easymotion-Fl) * :<C-U>call EasyMotion#SL(1,0,1)<CR>
x  <Plug>(easymotion-sl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,2)<CR>
nos<Plug>(easymotion-sl2) * :<C-U>call EasyMotion#SL(2,0,2)<CR>
x  <Plug>(easymotion-bd-fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,2)<CR>
nos<Plug>(easymotion-bd-fln) * :<C-U>call EasyMotion#SL(-1,0,2)<CR>
x  <Plug>(easymotion-F) * <Esc>:<C-U>call EasyMotion#S(1,1,1)<CR>
nos<Plug>(easymotion-F) * :<C-U>call EasyMotion#S(1,0,1)<CR>
x  <Plug>(easymotion-bd-f) * <Esc>:<C-U>call EasyMotion#S(1,1,2)<CR>
nos<Plug>(easymotion-bd-f) * :<C-U>call EasyMotion#S(1,0,2)<CR>
x  <Plug>(easymotion-F2) * <Esc>:<C-U>call EasyMotion#S(2,1,1)<CR>
nos<Plug>(easymotion-F2) * :<C-U>call EasyMotion#S(2,0,1)<CR>
x  <Plug>(easymotion-bd-f2) * <Esc>:<C-U>call EasyMotion#S(2,1,2)<CR>
nos<Plug>(easymotion-bd-f2) * :<C-U>call EasyMotion#S(2,0,2)<CR>
x  <Plug>(easymotion-Tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,1)<CR>
nos<Plug>(easymotion-Tl2) * :<C-U>call EasyMotion#TL(2,0,1)<CR>
x  <Plug>(easymotion-fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,0)<CR>
nos<Plug>(easymotion-fln) * :<C-U>call EasyMotion#SL(-1,0,0)<CR>
x  <Plug>(textmanip-move-left-1col-r) * :<C-U>call <SNR>79_obsolete('1col')<CR>
x  <Plug>(textmanip-move-left-1col-i) * :<C-U>call <SNR>79_obsolete('1col')<CR>
x  <Plug>(textmanip-move-left-1col) * :<C-U>call <SNR>79_obsolete('1col')<CR>
x  <Plug>(textmanip-move-right-1col-r) * :<C-U>call <SNR>79_obsolete('1col')<CR>
x  <Plug>(textmanip-move-right-1col-i) * :<C-U>call <SNR>79_obsolete('1col')<CR>
x  <Plug>(textmanip-move-right-1col) * :<C-U>call <SNR>79_obsolete('1col')<CR>
x  <Plug>(textmanip-toggle-mode) * :<C-U>call textmanip#mode('toggle')<CR>gv
n  <Plug>(textmanip-toggle-mode) * :<C-U>call textmanip#mode('toggle')<CR>
x  <Plug>(textmanip-blank-below) * :<C-U>call textmanip#start("blank", "v", "x", "auto")<CR>
x  <Plug>(textmanip-blank-above) * :<C-U>call textmanip#start("blank", "^", "x", "auto")<CR>
x  <Plug>(textmanip-move1-right-r) * :<C-U>call textmanip#start("move1", ">", "x", "replace")<CR>
x  <Plug>(textmanip-move1-right-i) * :<C-U>call textmanip#start("move1", ">", "x", "insert")<CR>
x  <Plug>(textmanip-move1-right) * :<C-U>call textmanip#start("move1", ">", "x", "auto")<CR>
x  <Plug>(textmanip-move1-left-r) * :<C-U>call textmanip#start("move1", "<", "x", "replace")<CR>
x  <Plug>(textmanip-move1-left-i) * :<C-U>call textmanip#start("move1", "<", "x", "insert")<CR>
x  <Plug>(textmanip-move1-left) * :<C-U>call textmanip#start("move1", "<", "x", "auto")<CR>
x  <Plug>(textmanip-move-right-r) * :<C-U>call textmanip#start("move", ">", "x", "replace")<CR>
x  <Plug>(textmanip-move-right-i) * :<C-U>call textmanip#start("move", ">", "x", "insert")<CR>
x  <Plug>(textmanip-move-right) * :<C-U>call textmanip#start("move", ">", "x", "auto")<CR>
x  <Plug>(textmanip-move-left-r) * :<C-U>call textmanip#start("move", "<", "x", "replace")<CR>
x  <Plug>(textmanip-move-left-i) * :<C-U>call textmanip#start("move", "<", "x", "insert")<CR>
x  <Plug>(textmanip-move-left) * :<C-U>call textmanip#start("move", "<", "x", "auto")<CR>
x  <Plug>(textmanip-move-down-r) * :<C-U>call textmanip#start("move", "v", "x", "replace")<CR>
x  <Plug>(textmanip-move-down-i) * :<C-U>call textmanip#start("move", "v", "x", "insert")<CR>
x  <Plug>(textmanip-move-down) * :<C-U>call textmanip#start("move", "v", "x", "auto")<CR>
x  <Plug>(textmanip-move-up-r) * :<C-U>call textmanip#start("move", "^", "x", "replace")<CR>
x  <Plug>(textmanip-move-up-i) * :<C-U>call textmanip#start("move", "^", "x", "insert")<CR>
x  <Plug>(textmanip-move-up) * :<C-U>call textmanip#start("move", "^", "x", "auto")<CR>
x  <Plug>(textmanip-duplicate-right-r) * :<C-U>call textmanip#start("duplicate", ">", "x", "replace")<CR>
x  <Plug>(textmanip-duplicate-right-i) * :<C-U>call textmanip#start("duplicate", ">", "x", "insert")<CR>
x  <Plug>(textmanip-duplicate-right) * :<C-U>call textmanip#start("duplicate", ">", "x", "auto")<CR>
x  <Plug>(textmanip-duplicate-left-r) * :<C-U>call textmanip#start("duplicate", "<", "x", "replace")<CR>
x  <Plug>(textmanip-duplicate-left-i) * :<C-U>call textmanip#start("duplicate", "<", "x", "insert")<CR>
x  <Plug>(textmanip-duplicate-left) * :<C-U>call textmanip#start("duplicate", "<", "x", "auto")<CR>
x  <Plug>(textmanip-duplicate-down-r) * :<C-U>call textmanip#start("duplicate", "v", "x", "replace")<CR>
x  <Plug>(textmanip-duplicate-down-i) * :<C-U>call textmanip#start("duplicate", "v", "x", "insert")<CR>
x  <Plug>(textmanip-duplicate-down) * :<C-U>call textmanip#start("duplicate", "v", "x", "auto")<CR>
x  <Plug>(textmanip-duplicate-up-r) * :<C-U>call textmanip#start("duplicate", "^", "x", "replace")<CR>
x  <Plug>(textmanip-duplicate-up-i) * :<C-U>call textmanip#start("duplicate", "^", "x", "insert")<CR>
x  <Plug>(textmanip-duplicate-up) * :<C-U>call textmanip#start("duplicate", "^", "x", "auto")<CR>
n  <Plug>(textmanip-blank-below) * :<C-U>call textmanip#start("blank", "v", "n", "auto")<CR>
n  <Plug>(textmanip-blank-above) * :<C-U>call textmanip#start("blank", "^", "n", "auto")<CR>
n  <Plug>(textmanip-move-right-r) * :<C-U>call textmanip#start("move", ">", "n", "replace")<CR>
n  <Plug>(textmanip-move-right-i) * :<C-U>call textmanip#start("move", ">", "n", "insert")<CR>
n  <Plug>(textmanip-move-right) * :<C-U>call textmanip#start("move", ">", "n", "auto")<CR>
n  <Plug>(textmanip-move-left-r) * :<C-U>call textmanip#start("move", "<", "n", "replace")<CR>
n  <Plug>(textmanip-move-left-i) * :<C-U>call textmanip#start("move", "<", "n", "insert")<CR>
n  <Plug>(textmanip-move-left) * :<C-U>call textmanip#start("move", "<", "n", "auto")<CR>
n  <Plug>(textmanip-move-down-r) * :<C-U>call textmanip#start("move", "v", "n", "replace")<CR>
n  <Plug>(textmanip-move-down-i) * :<C-U>call textmanip#start("move", "v", "n", "insert")<CR>
n  <Plug>(textmanip-move-down) * :<C-U>call textmanip#start("move", "v", "n", "auto")<CR>
n  <Plug>(textmanip-move-up-r) * :<C-U>call textmanip#start("move", "^", "n", "replace")<CR>
n  <Plug>(textmanip-move-up-i) * :<C-U>call textmanip#start("move", "^", "n", "insert")<CR>
n  <Plug>(textmanip-move-up) * :<C-U>call textmanip#start("move", "^", "n", "auto")<CR>
n  <Plug>(textmanip-duplicate-down-r) * :<C-U>call textmanip#start("duplicate", "v", "n", "replace")<CR>
n  <Plug>(textmanip-duplicate-down-i) * :<C-U>call textmanip#start("duplicate", "v", "n", "insert")<CR>
n  <Plug>(textmanip-duplicate-down) * :<C-U>call textmanip#start("duplicate", "v", "n", "auto")<CR>
n  <Plug>(textmanip-duplicate-up-r) * :<C-U>call textmanip#start("duplicate", "^", "n", "replace")<CR>
n  <Plug>(textmanip-duplicate-up-i) * :<C-U>call textmanip#start("duplicate", "^", "n", "insert")<CR>
n  <Plug>(textmanip-duplicate-up) * :<C-U>call textmanip#start("duplicate", "^", "n", "auto")<CR>
   <Plug>StopMarkdownPreview   :if exists(':MarkdownPreviewStop') | exec 'MarkdownPreviewStop ' | endif<CR>
   <Plug>MarkdownPreview   :call <SNR>78_serverStart()<CR>
n  <Plug>NERDCommenterAltDelims * :call <SNR>77_SwitchToAlternativeDelimiters(1)<CR>
x  <Plug>NERDCommenterUncomment * :call NERDComment("x", "Uncomment")<CR>
n  <Plug>NERDCommenterUncomment * :call NERDComment("n", "Uncomment")<CR>
x  <Plug>NERDCommenterAlignBoth * :call NERDComment("x", "AlignBoth")<CR>
n  <Plug>NERDCommenterAlignBoth * :call NERDComment("n", "AlignBoth")<CR>
x  <Plug>NERDCommenterAlignLeft * :call NERDComment("x", "AlignLeft")<CR>
n  <Plug>NERDCommenterAlignLeft * :call NERDComment("n", "AlignLeft")<CR>
n  <Plug>NERDCommenterAppend * :call NERDComment("n", "Append")<CR>
x  <Plug>NERDCommenterYank * :call NERDComment("x", "Yank")<CR>
n  <Plug>NERDCommenterYank * :call NERDComment("n", "Yank")<CR>
x  <Plug>NERDCommenterSexy * :call NERDComment("x", "Sexy")<CR>
n  <Plug>NERDCommenterSexy * :call NERDComment("n", "Sexy")<CR>
x  <Plug>NERDCommenterInvert * :call NERDComment("x", "Invert")<CR>
n  <Plug>NERDCommenterInvert * :call NERDComment("n", "Invert")<CR>
n  <Plug>NERDCommenterToEOL * :call NERDComment("n", "ToEOL")<CR>
x  <Plug>NERDCommenterNested * :call NERDComment("x", "Nested")<CR>
n  <Plug>NERDCommenterNested * :call NERDComment("n", "Nested")<CR>
x  <Plug>NERDCommenterMinimal * :call NERDComment("x", "Minimal")<CR>
n  <Plug>NERDCommenterMinimal * :call NERDComment("n", "Minimal")<CR>
x  <Plug>NERDCommenterToggle * :call NERDComment("x", "Toggle")<CR>
n  <Plug>NERDCommenterToggle * :call NERDComment("n", "Toggle")<CR>
x  <Plug>NERDCommenterComment * :call NERDComment("x", "Comment")<CR>
n  <Plug>NERDCommenterComment * :call NERDComment("n", "Comment")<CR>
n  <M-w>         :silent VCoolIns ra<CR>
n  <M-v>         :silent VCoolIns h<CR>
n  <M-r>         :VCoolIns r<CR>
n  <M-c>         :VCoolor<CR>
x  <M-n>       * :<C-U>call multiple_cursors#select_all("v", 0)<CR>
n  <M-n>       * :call multiple_cursors#select_all("n", 1)<CR>
x  <Plug>(neosnippet_register_oneshot_snippet) * :<C-U>call neosnippet#mappings#_register_oneshot_snippet()<CR>
x  <Plug>(neosnippet_expand_target) * :<C-U>call neosnippet#mappings#_expand_target()<CR>
x  <Plug>(neosnippet_get_selected_text) * :call neosnippet#helpers#get_selected_text(visualmode(), 1)<CR>
s  <Plug>(neosnippet_jump) * neosnippet#mappings#jump_impl()
s  <Plug>(neosnippet_expand) * neosnippet#mappings#expand_impl()
s  <Plug>(neosnippet_jump_or_expand) * neosnippet#mappings#jump_or_expand_impl()
s  <Plug>(neosnippet_expand_or_jump) * neosnippet#mappings#expand_or_jump_impl()
n  <Plug>(ale_hover) * :ALEHover<CR>
n  <Plug>(ale_find_references) * :ALEFindReferences<CR>
n  <Plug>(ale_go_to_definition_in_tab) * :ALEGoToDefinitionInTab<CR>
n  <Plug>(ale_go_to_definition) * :ALEGoToDefinition<CR>
n  <Plug>(ale_fix) * :ALEFix<CR>
n  <Plug>(ale_detail) * :ALEDetail<CR>
n  <Plug>(ale_lint) * :ALELint<CR>
n  <Plug>(ale_reset_buffer) * :ALEResetBuffer<CR>
n  <Plug>(ale_disable_buffer) * :ALEDisableBuffer<CR>
n  <Plug>(ale_enable_buffer) * :ALEEnableBuffer<CR>
n  <Plug>(ale_toggle_buffer) * :ALEToggleBuffer<CR>
n  <Plug>(ale_reset) * :ALEReset<CR>
n  <Plug>(ale_disable) * :ALEDisable<CR>
n  <Plug>(ale_enable) * :ALEEnable<CR>
n  <Plug>(ale_toggle) * :ALEToggle<CR>
n  <Plug>(ale_last) * :ALELast<CR>
n  <Plug>(ale_first) * :ALEFirst<CR>
n  <Plug>(ale_next_wrap) * :ALENextWrap<CR>
n  <Plug>(ale_next) * :ALENext<CR>
n  <Plug>(ale_previous_wrap) * :ALEPreviousWrap<CR>
n  <Plug>(ale_previous) * :ALEPrevious<CR>
n  <Plug>GitGutterPreviewHunk * :GitGutterPreviewHunk<CR>
n  <Plug>GitGutterUndoHunk * :GitGutterUndoHunk<CR>
n  <Plug>GitGutterStageHunk * :GitGutterStageHunk<CR>
n  <Plug>GitGutterPrevHunk * &diff ? '[c' : ":\<C-U>execute v:count1 . 'GitGutterPrevHunk'\<CR>"
n  <Plug>GitGutterNextHunk * &diff ? ']c' : ":\<C-U>execute v:count1 . 'GitGutterNextHunk'\<CR>"
x  <Plug>GitGutterTextObjectOuterVisual * :<C-U>call gitgutter#hunk#text_object(0)<CR>
x  <Plug>GitGutterTextObjectInnerVisual * :<C-U>call gitgutter#hunk#text_object(1)<CR>
o  <Plug>GitGutterTextObjectOuterPending * :<C-U>call gitgutter#hunk#text_object(0)<CR>
o  <Plug>GitGutterTextObjectInnerPending * :<C-U>call gitgutter#hunk#text_object(1)<CR>
n  <F9>        * :make|call EjecutarSiNoHayErrores()<CR>
n  <M-O>       * :call append(line('.')-1, '')<CR>
n  <M-o>       * :call append(line('.'), '')<CR>
x  <Right>       <Plug>(textmanip-move-right-r)
x  <Left>        <Plug>(textmanip-move-left-r)
x  <Down>        <Plug>(textmanip-move-down-r)
x  <Up>          <Plug>(textmanip-move-up-r)
x  <M-l>         <Plug>(textmanip-move-right)
n  <M-l>         v<M-l>
x  <M-h>         <Plug>(textmanip-move-left)
n  <M-h>         v<M-h>
x  <M-k>         <Plug>(textmanip-move-up)
n  <M-k>         V<M-k>
x  <M-j>         <Plug>(textmanip-move-down)
n  <M-j>         V<M-j>
x  <M-Y>         <Plug>(textmanip-duplicate-down)
n  <M-Y>         <Plug>(textmanip-duplicate-down)
x  <M-y>         <Plug>(textmanip-duplicate-up)
n  <M-y>         <Plug>(textmanip-duplicate-up)
n  <F4>        * :call AlternarModoDiff()<CR>
n  <F3>        * :setlocal relativenumber!<CR>
n  <F6>        * :TagbarToggle<CR>
n  <F5>        * :NERDTreeToggle<CR>
n  <F7>        * :UndotreeToggle<CR>
x  ñ           * "
n  ñ           * "
--- Insert/Command-line mode mappings ---
i  <M-n>       *@<Esc>:call AutoPairsJump()<CR>a
i  <M-p>       *@AutoPairsToggle()
i  <M-b>       *@<C-R>=AutoPairsBackInsert()<CR>
i  <M-e>       *@<C-R>=AutoPairsFastWrap()<CR>
i  <BS>        *@<C-R>=AutoPairsDelete()<CR>
i  <M-'>       *@<C-R>=AutoPairsMoveCharacter('''')<CR>
i  <M-}>       *@<C-R>=AutoPairsMoveCharacter('}')<CR>
i  <M-{>       *@<C-R>=AutoPairsMoveCharacter('{')<CR>
i  <M-]>       *@<C-R>=AutoPairsMoveCharacter(']')<CR>
i  <M-[>       *@<C-R>=AutoPairsMoveCharacter('[')<CR>
i  <M-)>       *@<C-R>=AutoPairsMoveCharacter(')')<CR>
i  <M-(>       *@<C-R>=AutoPairsMoveCharacter('(')<CR>
i  ¿           *@<C-R>=AutoPairsInsert('¿')<CR>
i  ¡           *@<C-R>=AutoPairsInsert('¡')<CR>
i  <C-H>       *@<C-R>=AutoPairsDelete()<CR>
i  <CR>        &@<C-G>u<CR><SNR>73_DiscretionaryEnd<SNR>72_AutoPairsReturn
i  <Space>     *@<C-]><C-R>=AutoPairsSpace()<CR>
i  !           *@<C-R>=AutoPairsInsert('!')<CR>
i  "           *@<C-R>=AutoPairsInsert('"')<CR>
i  '           *@<C-R>=AutoPairsInsert('''')<CR>
i  (           *@<C-R>=AutoPairsInsert('(')<CR>
i  )           *@<C-R>=AutoPairsInsert(')')<CR>
i  <M-">       *@<C-R>=AutoPairsMoveCharacter('"')<CR>
i  ?           *@<C-R>=AutoPairsInsert('?')<CR>
i  [           *@<C-R>=AutoPairsInsert('[')<CR>
i  ]           *@<C-R>=AutoPairsInsert(']')<CR>
i  `           *@<C-R>=AutoPairsInsert('`')<CR>
i  {           *@<C-R>=AutoPairsInsert('{')<CR>
i  }           *@<C-R>=AutoPairsInsert('}')<CR>
i  <Plug>_     * deoplete#mapping#_dummy_complete()
i  <Plug>ISurround * <C-R>=<SNR>87_insert(1)<CR>
i  <Plug>Isurround * <C-R>=<SNR>87_insert()<CR>
i  <Plug>StopMarkdownPreview   <Esc>:if exists(':MarkdownPreviewStop') | exec 'MarkdownPreviewStop ' | endif<CR>a
i  <Plug>MarkdownPreview   <Esc>:call <SNR>78_serverStart()<CR>a
i  <Plug>NERDCommenterInsert * <Space><BS><Esc>:call NERDComment('i', "insert")<CR>
i  <M-w>         <Esc>:VCoolIns ra<CR>a
i  <M-v>         <Esc>:VCoolIns h<CR>a
i  <M-r>         <Esc>:VCoolIns r<CR>a
i  <M-c>         <Esc>:VCoolor<CR>a
i  <Plug>AlwaysEnd & <SNR>73_AlwaysEnd
i  <Plug>DiscretionaryEnd & <SNR>73_DiscretionaryEnd
i  <SNR>73_AlwaysEnd * <C-R>=<SNR>73_crend(1)<CR>
i  <SNR>73_DiscretionaryEnd * <C-R>=<SNR>73_crend(0)<CR>
i  <Plug>AutoPairsReturn & <SNR>72_AutoPairsReturn
i  <SNR>72_AutoPairsReturn * <C-R>=AutoPairsReturn()<CR>
i  <Plug>(neosnippet_start_unite_snippet) * unite#sources#neosnippet#start_complete()
i  <Plug>(neosnippet_jump) * neosnippet#mappings#jump_impl()
i  <Plug>(neosnippet_expand) * neosnippet#mappings#expand_impl()
i  <Plug>(neosnippet_jump_or_expand) * neosnippet#mappings#jump_or_expand_impl()
i  <Plug>(neosnippet_expand_or_jump) * neosnippet#mappings#expand_or_jump_impl()
c  <M-BS>        <M-BS>
c  <M-w>       * <C-\>esplit(getcmdline(), " ")[0]<CR><Space>
i  <M-j><M-k>  * <Esc>ddj
i  <M-k><M-j>  * <Esc>ddk
i  <M-D>       * '<Esc>' . (col('.') == 1 ? "" : "l") . 'C'
i  <M-d>       * '<Esc>' . (col('.') == 1 ? "" : "l") . 'dwi'
c  <Down>      * <C-N>
c  <Up>        * <C-P>
c  <M-D>       * <C-E><C-U>
c  <M-d>       * <S-Right><C-W>
c  <M-f>       * <S-Right>
c  <M-b>       * <S-Left>
c  <C-A>       * <Home>
c  <C-B>       * <Left>
i  <C-D>       * <Del>
c  <C-D>       * <Del>
i  <C-E>         <Plug>(neosnippet_expand_or_jump)
c  <C-F>       * <Right>
i  <C-G>S        <Plug>ISurround
i  <C-G>s        <Plug>Isurround
i  <CR>        * <C-G>u<CR>
c  <C-N>       * <Down>
c  <C-P>       * <Up>
i  <C-S>       * <Esc>:update<CR>a
i  <C-U>       * <C-G>u<C-U>
i  <C-X><CR>   & <C-G>u<CR><SNR>73_AlwaysEnd
i  ,b            ,)
i  ,)          * <Space><Esc>r)a
i  ,B            ,}
i  ,}          * <Space><Esc>r}==
i  jk          * <Esc>
i  kj          * <Esc>
c  w!!         * w !sudo tee % > /dev/null<CR>
--- Abbreviations ---

No se encontró ninguna abreviatura
--- Highlighting ---
SpecialKey     xxx ctermfg=238 guifg=#444444
EndOfBuffer    xxx links to NonText
TermCursor     xxx cterm=reverse gui=reverse
TermCursorNC   xxx cleared
NonText        xxx ctermfg=238 guifg=#444444
Directory      xxx ctermfg=153 guifg=#b3deef
ErrorMsg       xxx cterm=reverse ctermfg=203 gui=reverse guifg=#f43753
IncSearch      xxx ctermfg=235 ctermbg=15 guifg=#282828 guibg=#ffffff
Search         xxx cterm=bold,underline ctermfg=15 gui=bold,underline guifg=#ffffff
MoreMsg        xxx ctermfg=121 gui=bold guifg=SeaGreen
ModeMsg        xxx cterm=bold gui=bold
LineNr         xxx ctermfg=238 guifg=#444444
CursorLineNr   xxx ctermfg=81 guifg=#73cef4
Question       xxx ctermfg=185 guifg=#c9d05c
StatusLine     xxx cterm=bold ctermfg=234 ctermbg=242 gui=bold guifg=#1d1d1d guibg=#666666
StatusLineNC   xxx ctermfg=246 ctermbg=238 guifg=#999999 guibg=#444444
VertSplit      xxx ctermfg=235 ctermbg=235 guifg=#282828 guibg=#282828
Title          xxx cterm=bold ctermfg=153 gui=bold guifg=#b3deef
Visual         xxx ctermbg=0 guibg=#040404
VisualNC       xxx cleared
WarningMsg     xxx ctermfg=203 guifg=#f43753
WildMenu       xxx cterm=bold ctermfg=235 ctermbg=185 gui=bold guifg=#282828 guibg=#c9d05c
Folded         xxx ctermfg=242 ctermbg=234 guifg=#666666 guibg=#1d1d1d
FoldColumn     xxx ctermfg=242 ctermbg=234 guifg=#666666 guibg=#1d1d1d
DiffAdd        xxx ctermbg=238 guibg=#464632
DiffChange     xxx ctermbg=239 guibg=#335261
DiffDelete     xxx ctermfg=203 ctermbg=237 guifg=#f43753 guibg=#79313c
DiffText       xxx cterm=reverse gui=reverse
SignColumn     xxx ctermfg=14 ctermbg=242 guifg=Cyan guibg=Grey
Conceal        xxx ctermfg=249 guifg=Grey70
SpellBad       xxx ctermfg=203 guifg=#f43753 guisp=Red
SpellCap       xxx ctermfg=215 guifg=#ffc24b guisp=Blue
SpellRare      xxx ctermfg=81 guifg=#73cef4 guisp=Magenta
SpellLocal     xxx ctermfg=180 guifg=#d3b987 guisp=Cyan
Pmenu          xxx ctermfg=235 ctermbg=81 guifg=#282828 guibg=#73cef4
PmenuSel       xxx ctermfg=235 ctermbg=185 guifg=#282828 guibg=#c9d05c
PmenuSbar      xxx ctermfg=180 ctermbg=180 guifg=#d3b987 guibg=#d3b987
PmenuThumb     xxx ctermfg=215 ctermbg=215 guifg=#ffc24b guibg=#ffc24b
TabLine        xxx ctermfg=246 ctermbg=238 guifg=#999999 guibg=#444444
TabLineSel     xxx cterm=bold ctermfg=185 gui=bold guifg=#c9d05c
TabLineFill    xxx ctermbg=238 guibg=#444444
CursorColumn   xxx ctermbg=236 guibg=#323232
CursorLine     xxx ctermbg=236 guibg=#323232
ColorColumn    xxx ctermbg=236 guibg=#323232
QuickFixLine   xxx links to Search
Whitespace     xxx links to NonText
NormalNC       xxx cleared
Cursor         xxx guifg=bg guibg=fg
lCursor        xxx guifg=bg guibg=fg
Substitute     xxx links to Search
MatchParen     xxx cterm=bold ctermfg=203 gui=bold guifg=#f43753
Normal         xxx ctermfg=255 ctermbg=235 guifg=#eeeeee guibg=#282828
Comment        xxx ctermfg=242 guifg=#666666
Constant       xxx ctermfg=215 guifg=#ffc24b
Special        xxx ctermfg=81 guifg=#73cef4
Identifier     xxx ctermfg=153 guifg=#b3deef
Statement      xxx ctermfg=153 guifg=#b3deef
PreProc        xxx ctermfg=185 guifg=#c9d05c
Type           xxx ctermfg=81 guifg=#73cef4
Underlined     xxx cterm=underline gui=underline
Ignore         xxx ctermfg=0 guifg=bg
Error          xxx ctermfg=255 ctermbg=203 guifg=#eeeeee guibg=#f43753
Todo           xxx cterm=bold ctermfg=203 gui=bold guifg=#f43753
String         xxx ctermfg=180 guifg=#d3b987
Character      xxx ctermfg=215 guifg=#ffc24b
Number         xxx ctermfg=215 guifg=#ffc24b
Boolean        xxx ctermfg=215 guifg=#ffc24b
Float          xxx ctermfg=215 guifg=#ffc24b
Function       xxx ctermfg=153 guifg=#b3deef
Conditional    xxx ctermfg=185 guifg=#c9d05c
Repeat         xxx links to Statement
Label          xxx links to Statement
Operator       xxx ctermfg=203 guifg=#f43753
Keyword        xxx links to Statement
Exception      xxx ctermfg=203 guifg=#f43753
Include        xxx links to PreProc
Define         xxx links to PreProc
Macro          xxx links to PreProc
PreCondit      xxx links to PreProc
StorageClass   xxx links to Type
Structure      xxx links to Type
Typedef        xxx links to Type
Tag            xxx links to Special
SpecialChar    xxx links to Special
Delimiter      xxx links to Special
SpecialComment xxx links to Special
Debug          xxx links to Special
VisualNOS      xxx ctermbg=0 guibg=#040404
cssVendor      xxx ctermfg=142 guifg=#9faa00
cssTagName     xxx ctermfg=142 guifg=#9faa00
cssAttrComma   xxx ctermfg=255 guifg=#eeeeee
cssBackgroundProp xxx ctermfg=153 guifg=#b3deef
cssBorderProp  xxx ctermfg=153 guifg=#b3deef
cssBoxProp     xxx ctermfg=81 guifg=#73cef4
cssDimensionProp xxx ctermfg=81 guifg=#73cef4
cssFontProp    xxx ctermfg=153 guifg=#b3deef
cssPositioningProp xxx ctermfg=81 guifg=#73cef4
cssTextProp    xxx ctermfg=153 guifg=#b3deef
cssValueLength xxx ctermfg=255 guifg=#eeeeee
cssValueInteger xxx ctermfg=255 guifg=#eeeeee
cssValueNumber xxx ctermfg=255 guifg=#eeeeee
cssIdentifier  xxx ctermfg=142 guifg=#9faa00
cssIncludeKeyword xxx ctermfg=215 guifg=#ffc24b
cssImportant   xxx ctermfg=203 guifg=#f43753
cssClassName   xxx ctermfg=185 guifg=#c9d05c
cssClassNameDot xxx ctermfg=255 guifg=#eeeeee
cssProp        xxx ctermfg=153 guifg=#b3deef
cssAttr        xxx ctermfg=255 guifg=#eeeeee
cssUnitDecorators xxx ctermfg=255 guifg=#eeeeee
cssNoise       xxx ctermfg=203 guifg=#f43753
diffRemoved    xxx ctermfg=203 guifg=#f43753
diffChanged    xxx ctermfg=153 guifg=#b3deef
diffAdded      xxx ctermfg=185 guifg=#c9d05c
diffSubname    xxx ctermfg=142 guifg=#9faa00
elmDelimiter   xxx ctermfg=255 guifg=#eeeeee
elmOperator    xxx ctermfg=203 guifg=#f43753
FugitiveblameHash xxx ctermfg=153 guifg=#b3deef
FugitiveblameUncommitted xxx ctermfg=203 guifg=#f43753
FugitiveblameTime xxx ctermfg=185 guifg=#c9d05c
FugitiveblameNotCommittedYet xxx ctermfg=215 guifg=#ffc24b
gitcommitBranch xxx ctermfg=81 guifg=#73cef4
gitcommitDiscardedType xxx ctermfg=160 guifg=#c5152f
gitcommitSelectedType xxx ctermfg=142 guifg=#9faa00
gitcommitHeader xxx ctermfg=153 guifg=#b3deef
gitcommitUntrackedFile xxx ctermfg=215 guifg=#ffc24b
gitcommitDiscardedFile xxx ctermfg=203 guifg=#f43753
gitcommitSelectedFile xxx ctermfg=185 guifg=#c9d05c
helpHyperTextEntry xxx ctermfg=185 guifg=#c9d05c
helpHeadline   xxx ctermfg=81 guifg=#73cef4
helpSectionDelim xxx ctermfg=242 guifg=#666666
helpNote       xxx ctermfg=203 guifg=#f43753
javaScriptOperator xxx ctermfg=185 guifg=#c9d05c
javaScriptBraces xxx ctermfg=153 guifg=#b3deef
javaScriptNull xxx ctermfg=215 guifg=#ffc24b
jsonEscape     xxx ctermfg=81 guifg=#73cef4
jsonNumber     xxx ctermfg=215 guifg=#ffc24b
jsonBraces     xxx ctermfg=255 guifg=#eeeeee
jsonNull       xxx ctermfg=215 guifg=#ffc24b
jsonBoolean    xxx ctermfg=215 guifg=#ffc24b
jsonKeywordMatch xxx ctermfg=203 guifg=#f43753
jsonQuote      xxx ctermfg=255 guifg=#eeeeee
jsonNoise      xxx ctermfg=203 guifg=#f43753
markdownH1     xxx cterm=bold ctermfg=153 gui=bold guifg=#b3deef
markdownHeadingRule xxx cterm=bold ctermfg=203 gui=bold guifg=#f43753
markdownHeadingDelimiter xxx cterm=bold ctermfg=203 gui=bold guifg=#f43753
markdownListMarker xxx ctermfg=215 guifg=#ffc24b
markdownBlockquote xxx ctermfg=215 guifg=#ffc24b
markdownRule   xxx ctermfg=185 guifg=#c9d05c
markdownLinkText xxx ctermfg=185 guifg=#c9d05c
markdownLinkTextDelimiter xxx ctermfg=153 guifg=#b3deef
markdownLinkDelimiter xxx ctermfg=153 guifg=#b3deef
markdownIdDeclaration xxx ctermfg=142 guifg=#9faa00
markdownAutomaticLink xxx ctermfg=81 guifg=#73cef4
markdownUrl    xxx ctermfg=81 guifg=#73cef4
markdownUrlTitle xxx ctermfg=180 guifg=#d3b987
markdownUrlDelimiter xxx ctermfg=215 guifg=#ffc24b
markdownUrlTitleDelimiter xxx ctermfg=58 guifg=#715b2f
markdownCodeDelimiter xxx ctermfg=81 guifg=#73cef4
markdownCode   xxx ctermfg=180 guifg=#d3b987
markdownEscape xxx ctermfg=81 guifg=#73cef4
markdownError  xxx ctermfg=203 guifg=#f43753
NERDTreeHelp   xxx ctermfg=255 guifg=#eeeeee
NERDTreeHelpKey xxx ctermfg=185 guifg=#c9d05c
NERDTreeHelpCommand xxx ctermfg=215 guifg=#ffc24b
NERDTreeHelpTitle xxx ctermfg=153 guifg=#b3deef
NERDTreeUp     xxx ctermfg=185 guifg=#c9d05c
NERDTreeCWD    xxx ctermfg=81 guifg=#73cef4
NERDTreeOpenable xxx ctermfg=203 guifg=#f43753
NERDTreeClosable xxx ctermfg=215 guifg=#ffc24b
pugJavascriptOutputChar xxx ctermfg=215 guifg=#ffc24b
GitGutterAdd   xxx ctermfg=185 guifg=#c9d05c
GitGutterChange xxx ctermfg=153 guifg=#b3deef
GitGutterDelete xxx ctermfg=203 guifg=#f43753
GitGutterChangeDelete xxx ctermfg=203 guifg=#f43753
javaScriptOpSymbols xxx ctermfg=203 guifg=#f43753
javaScriptParens xxx ctermfg=153 guifg=#b3deef
javaScriptDocTags xxx ctermfg=242 guifg=#6a6b3f
javaScriptDocSeeTag xxx ctermfg=66 guifg=#44778d
javaScriptBrowserObjects xxx ctermfg=81 guifg=#73cef4
javaScriptDOMObjects xxx ctermfg=81 guifg=#73cef4
javaScriptFuncArg xxx ctermfg=215 guifg=#ffc24b
jsParensIfElse xxx ctermfg=153 guifg=#b3deef
jsObjectKey    xxx ctermfg=153 guifg=#b3deef
jsArrowFunction xxx ctermfg=142 guifg=#9faa00
jsFunctionKey  xxx ctermfg=185 guifg=#c9d05c
jsFuncName     xxx ctermfg=185 guifg=#c9d05c
jsObjectFuncName xxx ctermfg=185 guifg=#c9d05c
jsNull         xxx ctermfg=215 guifg=#ffc24b
jsObjectColon  xxx ctermfg=203 guifg=#f43753
jsParens       xxx ctermfg=153 guifg=#b3deef
jsFuncParens   xxx ctermfg=153 guifg=#b3deef
jsFuncArgs     xxx ctermfg=215 guifg=#ffc24b
jsSpecial      xxx ctermfg=215 guifg=#ffc24b
jsTemplateBraces xxx ctermfg=203 guifg=#f43753
jsGlobalObjects xxx ctermfg=81 guifg=#73cef4
jsGlobalNodeObjects xxx ctermfg=153 guifg=#b3deef
jsImport       xxx ctermfg=81 guifg=#73cef4
jsExport       xxx ctermfg=81 guifg=#73cef4
jsExportDefault xxx ctermfg=185 guifg=#c9d05c
jsExportDefaultGroup xxx ctermfg=81 guifg=#73cef4
jsFrom         xxx ctermfg=81 guifg=#73cef4
plug2          xxx ctermfg=185 guifg=#c9d05c
plugH2         xxx cterm=bold ctermfg=81 gui=bold guifg=#73cef4
plugBracket    xxx ctermfg=153 guifg=#b3deef
plugNumber     xxx ctermfg=215 guifg=#ffc24b
plugDash       xxx ctermfg=215 guifg=#ffc24b
plugStar       xxx ctermfg=180 guifg=#d3b987
plugMessage    xxx ctermfg=215 guifg=#ffc24b
plugName       xxx ctermfg=153 guifg=#b3deef
plugUpdate     xxx ctermfg=203 guifg=#f43753
plugEdge       xxx ctermfg=185 guifg=#c9d05c
plugSha        xxx ctermfg=180 guifg=#d3b987
plugNotLoaded  xxx ctermfg=237 guifg=#79313c
stylusVariable xxx ctermfg=255 guifg=#eeeeee
stylusClass    xxx ctermfg=185 guifg=#c9d05c
stylusClassChar xxx ctermfg=153 guifg=#b3deef
stylusId       xxx ctermfg=185 guifg=#c9d05c
stylusIdChar   xxx ctermfg=153 guifg=#b3deef
cssVisualVal   xxx ctermfg=255 guifg=#eeeeee
stylusImport   xxx ctermfg=215 guifg=#ffc24b
vimCommentString xxx ctermfg=58 guifg=#715b2f
vimCommentTitle xxx ctermfg=66 guifg=#44778d
vimError       xxx ctermfg=255 ctermbg=203 guifg=#eeeeee guibg=#f43753
xmlNamespace   xxx ctermfg=215 guifg=#ffc24b
xmlAttribPunct xxx ctermfg=203 guifg=#f43753
xmlProcessingDelim xxx ctermfg=203 guifg=#f43753
javascriptOpSymbol xxx ctermfg=203 guifg=#f43753
javascriptDocNotation xxx ctermfg=242 guifg=#6a6b3f
javascriptDocNamedParamType xxx ctermfg=66 guifg=#44778d
javascriptDocParamName xxx ctermfg=58 guifg=#715b2f
javascriptDocParamType xxx ctermfg=66 guifg=#44778d
javascriptTemplateSB xxx ctermfg=203 guifg=#f43753
javascriptRepeat xxx ctermfg=185 guifg=#c9d05c
javascriptObjectLabelColon xxx ctermfg=203 guifg=#f43753
javascriptObjectMethodName xxx ctermfg=185 guifg=#c9d05c
javascriptFuncName xxx ctermfg=185 guifg=#c9d05c
yamlFlowString xxx ctermfg=180 guifg=#d3b987
yamlFlowStringDelimiter xxx ctermfg=255 guifg=#eeeeee
yamlKeyValueDelimiter xxx ctermfg=203 guifg=#f43753
EspaciosEnBlancoExtra xxx ctermbg=172 guifg=#D78700
Conflicto      xxx ctermbg=1 guifg=#FF2233
GitGutterAddDefault xxx cleared
GitGutterChangeDefault xxx cleared
GitGutterDeleteDefault xxx cleared
GitGutterChangeDeleteDefault xxx links to GitGutterChangeDefault
GitGutterAddInvisible xxx cleared
GitGutterChangeInvisible xxx cleared
GitGutterDeleteInvisible xxx cleared
GitGutterChangeDeleteInvisible xxx links to GitGutterChangeInvisible
GitGutterAddLine xxx links to DiffAdd
GitGutterChangeLine xxx links to DiffChange
GitGutterDeleteLine xxx links to DiffDelete
GitGutterChangeDeleteLine xxx links to GitGutterChangeLine
               xxx cleared
cEnum          xxx links to Identifier
cFunction      xxx links to Function
vimAutoGroup   xxx links to vimAutoEvent
vimAutoEvent   xxx links to Type
vimScriptFuncName xxx links to vimFuncName
vimFuncName    xxx links to Function
pythonMethodTag xxx links to pythonFunction
pythonFunction xxx cleared
pythonClassTag xxx links to pythonFunction
javaClass      xxx links to Identifier
javaMethod     xxx links to Function
javaInterface  xxx links to Identifier
csClassOrStruct xxx links to Identifier
csMethod       xxx links to Function
rubyModuleName xxx links to Type
rubyClassName  xxx links to Type
rubyMethodName xxx links to Function
awkFunctionTag xxx links to Function
shFunctionTag  xxx links to Operator
tclCommandTag  xxx links to Operator
perlFunctionTag xxx links to Operator
shDoError      xxx links to Error
shIfError      xxx links to Error
shInError      xxx links to Error
shCaseError    xxx links to Error
shEsacError    xxx links to Error
shCurlyError   xxx links to Error
shParenError   xxx links to Error
shTestError    xxx links to Error
shOK           xxx cleared
shArithmetic   xxx links to Special
shCaseEsac     xxx cleared
shComment      xxx links to Comment
shDeref        xxx links to shShellVariables
shDo           xxx cleared
shDerefSimple  xxx links to shDeref
shEcho         xxx links to shString
shEscape       xxx links to shCommandSub
shNumber       xxx links to Number
shOperator     xxx links to Operator
shPosnParm     xxx links to shShellVariables
shExSingleQuote xxx links to shSingleQuote
shExDoubleQuote xxx links to shDoubleQuote
shHereString   xxx links to shRedir
shRedir        xxx links to shOperator
shSingleQuote  xxx links to shString
shDoubleQuote  xxx links to shString
shStatement    xxx links to Statement
shVariable     xxx links to shSetList
shAlias        xxx links to Identifier
shTest         xxx cleared
shCtrlSeq      xxx links to Special
shSpecial      xxx links to Special
shParen        xxx links to shArithmetic
bashSpecialVariables xxx links to shShellVariables
bashStatement  xxx links to shStatement
shIf           xxx cleared
shFor          xxx cleared
shCaseStart    xxx links to shConditional
shCase         xxx cleared
shCaseBar      xxx links to shConditional
shCaseIn       xxx links to shConditional
shCaseCommandSub xxx links to shCommandSub
shCaseExSingleQuote xxx cleared
shCaseSingleQuote xxx links to shSingleQuote
shCaseDoubleQuote xxx links to shDoubleQuote
shStringSpecial xxx links to shSpecial
shCaseRange    xxx cleared
shColon        xxx links to shComment
shCommandSub   xxx links to Special
shExpr         xxx cleared
shHereDoc      xxx links to shString
shSetList      xxx links to Identifier
shSource       xxx links to shOperator
shCmdParenRegion xxx cleared
shOption       xxx links to shCommandSub
shSubSh        xxx cleared
shComma        xxx cleared
shDerefSpecial xxx links to shDeref
shDerefVar     xxx links to shDeref
shDerefWordError xxx links to Error
shDerefPSR     xxx links to shDerefOp
shDerefPPS     xxx links to shDerefOp
shDerefOff     xxx links to shDerefOp
shDerefOp      xxx links to shOperator
shDerefVarArray xxx cleared
shDerefOpError xxx links to Error
shEchoQuote    xxx links to shString
shCharClass    xxx links to shSpecial
shDblBrace     xxx cleared
shRepeat       xxx links to Repeat
shDblParen     xxx cleared
shBeginHere    xxx links to shRedir
shHerePayload  xxx links to shHereDoc
shWrapLineOperator xxx links to shOperator
shSetOption    xxx links to shOption
shAtExpr       xxx links to shSetList
shFunctionKey  xxx links to Function
shFunctionOne  xxx cleared
shFunctionTwo  xxx cleared
shConditional  xxx links to Conditional
shForPP        xxx links to shLoop
shSet          xxx links to Statement
shTestOpr      xxx links to shConditional
shTouch        xxx cleared
shSpecialNoZS  xxx links to shSpecial
shEchoDelim    xxx links to shOperator
shQuickComment xxx links to shComment
shSpecialVar   xxx cleared
shEmbeddedEcho xxx links to shString
shTouchCmd     xxx links to shStatement
shPattern      xxx links to shString
shExprRegion   xxx links to Delimiter
shSpecialNxt   xxx links to shSpecial
shSubShRegion  xxx links to shOperator
shRange        xxx links to shOperator
shNoQuote      xxx links to shDoubleQuote
shString       xxx links to String
shAstQuote     xxx links to shDoubleQuote
shTestDoubleQuote xxx links to shString
shTestSingleQuote xxx links to shString
shTestPattern  xxx links to shString
shLoop         xxx links to shStatement
shCurlyIn      xxx cleared
shSnglCase     xxx links to Statement
shQuote        xxx links to shOperator
shCmdSubRegion xxx links to shShellVariables
shArithRegion  xxx links to shShellVariables
shSkipInitWS   xxx cleared
bashAdminStatement xxx links to shStatement
kshSpecialVariables xxx cleared
kshStatement   xxx cleared
shBkslshSnglQuote xxx cleared
shBkslshDblQuote xxx cleared
shTodo         xxx links to Todo
shHereDoc01    xxx links to shRedir
shHereDoc02    xxx links to shRedir
shHereDoc03    xxx links to shRedir
shHereDoc04    xxx links to shRedir
shHereDoc05    xxx links to shRedir
shHereDoc06    xxx links to shRedir
shHereDoc07    xxx links to shRedir
shHereDoc08    xxx links to shRedir
shHereDoc09    xxx links to shRedir
shHereDoc10    xxx links to shRedir
shHereDoc11    xxx links to shRedir
shHereDoc12    xxx links to shRedir
shHereDoc13    xxx links to shRedir
shHereDoc14    xxx links to shRedir
shHereDoc15    xxx links to shRedir
shVarAssign    xxx cleared
shSetListDelim xxx links to shOperator
shFunction     xxx links to Function
shFunctionStart xxx cleared
shFunctionThree xxx cleared
shFunctionFour xxx cleared
shDerefPattern xxx cleared
shDerefString  xxx links to shDoubleQuote
shDerefEscape  xxx cleared
shDerefDelim   xxx links to shOperator
shDerefLen     xxx links to shDerefOff
shDerefPPSleft xxx cleared
shDerefPPSright xxx cleared
shDerefPSRleft xxx cleared
shDerefPSRright xxx cleared
shCondError    xxx links to Error
shCaseEsacSync xxx cleared
shDoSync       xxx cleared
shForSync      xxx cleared
shIfSync       xxx cleared
shUntilSync    xxx cleared
shWhileSync    xxx cleared
shShellVariables xxx links to PreProc
shDerefPOL     xxx links to shDerefOp
shFunctionName xxx links to Function
airline_x      xxx ctermfg=153 ctermbg=238 guifg=#b3deef guibg=#444444
airline_x_bold xxx cterm=bold ctermfg=153 ctermbg=238 gui=bold guifg=#b3deef guibg=#444444
airline_x_red  xxx ctermfg=160 ctermbg=238 guifg=#ff0000 guibg=#444444
airline_y      xxx ctermfg=235 ctermbg=81 guifg=#282828 guibg=#73cef4
airline_y_bold xxx cterm=bold ctermfg=235 ctermbg=81 gui=bold guifg=#282828 guibg=#73cef4
airline_y_red  xxx ctermfg=160 ctermbg=81 guifg=#ff0000 guibg=#73cef4
airline_z      xxx ctermfg=239 ctermbg=153 guifg=#335261 guibg=#b3deef
airline_z_bold xxx cterm=bold ctermfg=239 ctermbg=153 gui=bold guifg=#335261 guibg=#b3deef
airline_z_red  xxx ctermfg=160 ctermbg=153 guifg=#ff0000 guibg=#b3deef
airline_term   xxx ctermfg=85 ctermbg=232 guifg=#9cffd3 guibg=#202020
airline_term_bold xxx cterm=bold ctermfg=85 ctermbg=232 gui=bold guifg=#9cffd3 guibg=#202020
airline_term_red xxx ctermfg=160 ctermbg=232 guifg=#ff0000 guibg=#202020
airline_error  xxx ctermfg=232 ctermbg=160 guifg=#000000 guibg=#990000
airline_error_bold xxx cterm=bold ctermfg=232 ctermbg=160 gui=bold guifg=#000000 guibg=#990000
airline_error_red xxx ctermfg=160 ctermbg=160 guifg=#ff0000 guibg=#990000
airline_a      xxx ctermfg=239 ctermbg=153 guifg=#335261 guibg=#b3deef
airline_a_bold xxx cterm=bold ctermfg=239 ctermbg=153 gui=bold guifg=#335261 guibg=#b3deef
airline_a_red  xxx ctermfg=160 ctermbg=153 guifg=#ff0000 guibg=#b3deef
airline_b      xxx ctermfg=235 ctermbg=81 guifg=#282828 guibg=#73cef4
airline_b_bold xxx cterm=bold ctermfg=235 ctermbg=81 gui=bold guifg=#282828 guibg=#73cef4
airline_b_red  xxx ctermfg=160 ctermbg=81 guifg=#ff0000 guibg=#73cef4
airline_c      xxx ctermfg=153 ctermbg=238 guifg=#b3deef guibg=#444444
airline_c_bold xxx cterm=bold ctermfg=153 ctermbg=238 gui=bold guifg=#b3deef guibg=#444444
airline_c_red  xxx ctermfg=160 ctermbg=238 guifg=#ff0000 guibg=#444444
airline_warning xxx ctermfg=232 ctermbg=166 guifg=#000000 guibg=#df5f00
airline_warning_bold xxx cterm=bold ctermfg=232 ctermbg=166 gui=bold guifg=#000000 guibg=#df5f00
airline_warning_red xxx ctermfg=160 ctermbg=166 guifg=#ff0000 guibg=#df5f00
airline_tablabel xxx cleared
airline_tab    xxx cleared
airline_tabsel xxx cleared
airline_tabtype xxx cleared
airline_tabfill xxx cleared
airline_tabmod xxx cleared
airline_tabmod_unsel xxx cleared
airline_tabhid xxx cleared
airline_tab_right xxx cleared
airline_tabsel_right xxx cleared
airline_tabmod_right xxx cleared
airline_tabhid_right xxx cleared
airline_tabmod_unsel_right xxx cleared
airline_a_to_airline_b xxx ctermfg=153 ctermbg=81
airline_b_to_airline_c xxx ctermfg=81 ctermbg=238
airline_c_to_airline_x xxx ctermfg=238 ctermbg=238
airline_x_to_airline_y xxx ctermfg=81 ctermbg=238
airline_y_to_airline_z xxx ctermfg=153 ctermbg=81
airline_z_to_airline_warning xxx ctermfg=166 ctermbg=153
airline_warning_to_airline_error xxx ctermfg=160 ctermbg=166
airline_c1_inactive xxx ctermfg=250 ctermbg=238 guifg=#bbbbbb guibg=#444444
airline_x_to_airline_y_bold xxx cterm=bold ctermfg=81 ctermbg=238 gui=bold
airline_x_to_airline_y_red xxx ctermfg=160 ctermbg=238 guifg=#ff0000
airline_z_to_airline_warning_bold xxx cterm=bold ctermfg=166 ctermbg=153 gui=bold
airline_z_to_airline_warning_red xxx ctermfg=160 ctermbg=153 guifg=#ff0000
airline_b_to_airline_c_bold xxx cterm=bold ctermfg=81 ctermbg=238 gui=bold
airline_b_to_airline_c_red xxx ctermfg=160 ctermbg=238 guifg=#ff0000
airline_a_to_airline_b_bold xxx cterm=bold ctermfg=153 ctermbg=81 gui=bold
airline_a_to_airline_b_red xxx ctermfg=160 ctermbg=81 guifg=#ff0000
airline_warning_to_airline_error_bold xxx cterm=bold ctermfg=160 ctermbg=166 gui=bold
airline_warning_to_airline_error_red xxx ctermfg=160 ctermbg=166 guifg=#ff0000
airline_y_to_airline_z_bold xxx cterm=bold ctermfg=153 ctermbg=81 gui=bold
airline_y_to_airline_z_red xxx ctermfg=160 ctermbg=81 guifg=#ff0000
airline_c_to_airline_x_bold xxx cterm=bold ctermfg=238 ctermbg=238 gui=bold
airline_c_to_airline_x_red xxx ctermfg=160 ctermbg=238 guifg=#ff0000
SignatureMarkText xxx cleared
SignatureMarkerText xxx cleared
airline_tabfill_to_airline_tabfill xxx ctermfg=235 ctermbg=235
airline_tabfill_to_airline_tablabel xxx ctermfg=235 ctermbg=235
airline_tabsel_to_airline_tabfill xxx ctermfg=235 ctermbg=235
ALEErrorSign   xxx links to Error
ALEStyleErrorSign xxx links to ALEErrorSign
ALEWarningSign xxx links to Todo
ALEStyleWarningSign xxx links to ALEWarningSign
ALEInfoSign    xxx links to ALEWarningSign
ALESignColumnWithErrors xxx links to Error
ALESignColumnWithoutErrors xxx links to LineNr
ALEErrorLine   xxx cleared
ALEWarningLine xxx cleared
ALEInfoLine    xxx cleared
ALEError       xxx links to SpellBad
ALEStyleError  xxx links to ALEError
ALEWarning     xxx links to SpellCap
ALEStyleWarning xxx links to ALEWarning
ALEInfo        xxx links to ALEWarning
neosnippetExpandSnippets xxx links to Special
neosnippetConcealExpandSnippets xxx cleared
shFunctionTagTag xxx links to shFunctionTag
airline_tabmod_to_airline_tabfill xxx ctermfg=235 ctermbg=235
airline_tabsel_to_airline_tabfill_bold xxx cterm=bold ctermfg=235 ctermbg=235 gui=bold
airline_tabsel_to_airline_tabfill_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_tabfill_to_airline_tabfill_bold xxx cterm=bold ctermfg=235 ctermbg=235 gui=bold
airline_tabfill_to_airline_tabfill_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_tabfill_to_airline_tablabel_bold xxx cterm=bold ctermfg=235 ctermbg=235 gui=bold
airline_tabfill_to_airline_tablabel_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_tabmod_to_airline_tabfill_bold xxx cterm=bold ctermfg=235 ctermbg=235 gui=bold
airline_tabmod_to_airline_tabfill_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_tabhid_to_airline_tabsel xxx ctermfg=235 ctermbg=235
vimTodo        xxx links to Todo
vimCommand     xxx links to Statement
vimOnlyCommand xxx cleared
vimStdPlugin   xxx cleared
vimOnlyOption  xxx cleared
vimTermOption  xxx cleared
vimErrSetting  xxx links to vimError
vimGroup       xxx links to Type
vimHLGroup     xxx links to vimGroup
vimOnlyHLGroup xxx cleared
nvimHLGroup    xxx links to vimHLGroup
vimGlobal      xxx cleared
vimSubst       xxx links to vimCommand
vimNumber      xxx links to Number
vimAddress     xxx links to vimMark
vimAutoCmd     xxx links to vimCommand
vimIsCommand   xxx cleared
vimExtCmd      xxx cleared
vimFilter      xxx cleared
vimLet         xxx links to vimCommand
vimMap         xxx links to vimCommand
vimMark        xxx links to Number
vimSet         xxx cleared
vimSyntax      xxx links to vimCommand
vimUserCmd     xxx cleared
vimCmdSep      xxx cleared
vimVar         xxx links to Identifier
vimFBVar       xxx links to vimVar
vimInsert      xxx links to vimString
vimBehaveModel xxx links to vimBehave
vimBehaveError xxx links to vimError
vimBehave      xxx links to vimCommand
vimFTCmd       xxx links to vimCommand
vimFTOption    xxx links to vimSynType
vimFTError     xxx links to vimError
vimFiletype    xxx cleared
vimAugroup     xxx cleared
vimExecute     xxx cleared
vimNotFunc     xxx links to vimCommand
vimFunction    xxx cleared
vimFunctionError xxx links to vimError
vimLineComment xxx links to vimComment
vimSpecFile    xxx links to Identifier
vimOper        xxx links to Operator
vimOperParen   xxx cleared
vimComment     xxx links to Comment
vimString      xxx links to String
vimRegister    xxx links to SpecialChar
vimCmplxRepeat xxx links to SpecialChar
vimRegion      xxx cleared
vimSynLine     xxx cleared
vimNotation    xxx links to Special
vimCtrlChar    xxx links to SpecialChar
vimFuncVar     xxx links to Identifier
vimContinue    xxx links to Special
vimAugroupKey  xxx links to vimCommand
vimAugroupError xxx links to vimError
vimEnvvar      xxx links to PreProc
vimFunc        xxx links to vimError
vimParenSep    xxx links to Delimiter
vimSep         xxx links to Delimiter
vimOperError   xxx links to Error
vimFuncKey     xxx links to vimCommand
vimFuncSID     xxx links to Special
vimAbb         xxx links to vimCommand
vimEcho        xxx cleared
vimEchoHL      xxx links to vimCommand
vimIf          xxx cleared
vimHighlight   xxx links to vimCommand
vimNorm        xxx links to vimCommand
vimUnmap       xxx links to vimMap
vimUserCommand xxx links to vimCommand
vimFuncBody    xxx cleared
vimFuncBlank   xxx cleared
vimPattern     xxx links to Type
vimSpecFileMod xxx links to vimSpecFile
vimEscapeBrace xxx cleared
vimSetEqual    xxx cleared
vimSetString   xxx links to vimString
vimSubstRep    xxx cleared
vimSubstRange  xxx cleared
vimUserAttrb   xxx links to vimSpecial
vimUserAttrbError xxx links to Error
vimUserAttrbKey xxx links to vimOption
vimUserAttrbCmplt xxx links to vimSpecial
vimUserCmdError xxx links to Error
vimUserAttrbCmpltFunc xxx links to Special
vimPatSepErr   xxx links to vimPatSep
vimPatSep      xxx links to SpecialChar
vimPatSepZ     xxx links to vimPatSep
vimPatSepZone  xxx links to vimString
vimPatSepR     xxx links to vimPatSep
vimPatRegion   xxx cleared
vimNotPatSep   xxx links to vimString
vimStringCont  xxx links to vimString
vimSubstTwoBS  xxx links to vimString
vimSubstSubstr xxx links to SpecialChar
vimCollection  xxx cleared
vimSubstPat    xxx cleared
vimSubst1      xxx links to vimSubst
vimSubstDelim  xxx links to Delimiter
vimSubstRep4   xxx cleared
vimSubstFlagErr xxx links to vimError
vimCollClass   xxx cleared
vimCollClassErr xxx links to vimError
vimSubstFlags  xxx links to Special
vimMarkNumber  xxx links to vimNumber
vimPlainMark   xxx links to vimMark
vimPlainRegister xxx links to vimRegister
vimOption      xxx links to PreProc
vimSetMod      xxx links to vimOption
vimSetSep      xxx links to Statement
vimMapMod      xxx links to vimBracket
vimMapLhs      xxx cleared
nvimAutoEvent  xxx links to vimAutoEvent
vimAutoCmdSpace xxx cleared
vimAutoEventList xxx cleared
vimAutoCmdSfxList xxx cleared
vimEchoHLNone  xxx links to vimGroup
vimMapBang     xxx links to vimCommand
nvimMap        xxx links to vimMap
nvimUnmap      xxx links to vimUnmap
vimMapRhs      xxx cleared
vimMapModKey   xxx links to vimFuncSID
vimMapModErr   xxx links to vimError
vimMapRhsExtend xxx cleared
vimMenuBang    xxx cleared
vimMenuPriority xxx cleared
vimMenuName    xxx links to PreProc
vimMenuMod     xxx links to vimMapMod
vimMenuNameMore xxx links to vimMenuName
vimMenuMap     xxx cleared
vimMenuRhs     xxx cleared
vimBracket     xxx links to Delimiter
vimUserFunc    xxx links to Normal
vimElseIfErr   xxx links to Error
vimBufnrWarn   xxx links to vimWarn
vimNormCmds    xxx cleared
vimGroupSpecial xxx links to Special
vimGroupList   xxx cleared
vimSynError    xxx links to Error
vimSynContains xxx links to vimSynOption
vimSynKeyContainedin xxx links to vimSynContains
vimSynNextgroup xxx links to vimSynOption
vimSynType     xxx links to vimSpecial
vimAuSyntax    xxx cleared
vimSynCase     xxx links to Type
vimSynCaseError xxx links to vimError
vimClusterName xxx cleared
vimGroupName   xxx links to vimGroup
vimGroupAdd    xxx links to vimSynOption
vimGroupRem    xxx links to vimSynOption
vimIskList     xxx cleared
vimIskSep      xxx links to Delimiter
vimSynKeyOpt   xxx links to vimSynOption
vimSynKeyRegion xxx cleared
vimMtchComment xxx links to vimComment
vimSynMtchOpt  xxx links to vimSynOption
vimSynRegPat   xxx links to vimString
vimSynMatchRegion xxx cleared
vimSynMtchCchar xxx cleared
vimSynMtchGroup xxx cleared
vimSynPatRange xxx links to vimString
vimSynNotPatRange xxx links to vimSynRegPat
vimSynRegOpt   xxx links to vimSynOption
vimSynReg      xxx links to Type
vimSynMtchGrp  xxx links to vimSynOption
vimSynRegion   xxx cleared
vimSynPatMod   xxx cleared
vimSyncC       xxx links to Type
vimSyncLines   xxx cleared
vimSyncMatch   xxx cleared
vimSyncError   xxx links to Error
vimSyncLinebreak xxx cleared
vimSyncLinecont xxx cleared
vimSyncRegion  xxx cleared
vimSyncGroupName xxx links to vimGroupName
vimSyncKey     xxx links to Type
vimSyncGroup   xxx links to vimGroupName
vimSyncNone    xxx links to Type
vimHiLink      xxx cleared
vimHiClear     xxx links to vimHighlight
vimHiKeyList   xxx cleared
vimHiCtermError xxx links to vimError
vimHiBang      xxx cleared
vimHiGroup     xxx links to vimGroupName
vimHiAttrib    xxx links to PreProc
vimFgBgAttrib  xxx links to vimHiAttrib
vimHiAttribList xxx links to vimError
vimHiCtermColor xxx cleared
vimHiFontname  xxx cleared
vimHiGuiFontname xxx cleared
vimHiGuiRgb    xxx links to vimNumber
vimHiTerm      xxx links to Type
vimHiCTerm     xxx links to vimHiTerm
vimHiStartStop xxx links to vimHiTerm
vimHiCtermFgBg xxx links to vimHiTerm
vimHiGui       xxx links to vimHiTerm
vimHiGuiFont   xxx links to vimHiTerm
vimHiGuiFgBg   xxx links to vimHiTerm
vimHiKeyError  xxx links to vimError
vimHiTermcap   xxx cleared
vimHiNmbr      xxx links to Number
vimCommentTitleLeader xxx cleared
vimSearchDelim xxx links to Statement
vimSearch      xxx links to vimString
vimEmbedError  xxx links to Normal
vimAugroupSyncA xxx cleared
vimKeyCodeError xxx links to vimError
vimWarn        xxx links to WarningMsg
vimAuHighlight xxx links to vimHighlight
vimAutoCmdOpt  xxx links to vimOption
vimAutoSet     xxx links to vimCommand
vimCondHL      xxx links to vimCommand
vimElseif      xxx links to vimCondHL
vimFold        xxx links to Folded
vimSynOption   xxx links to Special
vimHLMod       xxx links to PreProc
vimKeyCode     xxx links to vimSpecFile
vimKeyword     xxx links to Statement
vimScriptDelim xxx links to Comment
vimSpecial     xxx links to Type
vimStatement   xxx links to Statement
airline_tablabel_to_airline_tabfill xxx ctermfg=235 ctermbg=235
airline_tabfill_to_airline_tab_right xxx ctermfg=235 ctermbg=235
airline_tab_right_to_airline_tabsel_right xxx ctermfg=235 ctermbg=235
airline_tabsel_right_to_airline_tablabel xxx ctermfg=235 ctermbg=235
airline_tab_to_airline_tabsel xxx ctermfg=235 ctermbg=235
airline_c3_inactive xxx ctermfg=250 ctermbg=238 guifg=#bbbbbb guibg=#444444
vimAutoGroupTag xxx links to vimAutoGroup
vimCommandTag  xxx links to vimCommand
vimFuncNameTag xxx links to vimFuncName
vimScriptFuncNameTag xxx links to vimScriptFuncName
airline_tablabel_to_airline_tabsel xxx ctermfg=235 ctermbg=235
airline_tabsel_to_airline_tab xxx ctermfg=235 ctermbg=235
airline_tab_to_airline_tabfill xxx ctermfg=235 ctermbg=235
airline_c2_inactive xxx ctermfg=250 ctermbg=238 guifg=#bbbbbb guibg=#444444
airline_tab_right_to_airline_tabsel_right_bold xxx cterm=bold ctermfg=235 ctermbg=235 gui=bold
airline_tab_right_to_airline_tabsel_right_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_tabhid_to_airline_tabsel_bold xxx cterm=bold ctermfg=235 ctermbg=235 gui=bold
airline_tabhid_to_airline_tabsel_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_tabfill_to_airline_tab_right_bold xxx cterm=bold ctermfg=235 ctermbg=235 gui=bold
airline_tabfill_to_airline_tab_right_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_tablabel_to_airline_tabfill_bold xxx cterm=bold ctermfg=235 ctermbg=235 gui=bold
airline_tablabel_to_airline_tabfill_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_tabsel_right_to_airline_tablabel_bold xxx cterm=bold ctermfg=235 ctermbg=235 gui=bold
airline_tabsel_right_to_airline_tablabel_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_tab_to_airline_tabsel_bold xxx cterm=bold ctermfg=235 ctermbg=235 gui=bold
airline_tab_to_airline_tabsel_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_tablabel_to_airline_tabsel_bold xxx cterm=bold ctermfg=235 ctermbg=235 gui=bold
airline_tablabel_to_airline_tabsel_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_tabsel_to_airline_tab_bold xxx cterm=bold ctermfg=235 ctermbg=235 gui=bold
airline_tabsel_to_airline_tab_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_tab_to_airline_tabfill_bold xxx cterm=bold ctermfg=235 ctermbg=235 gui=bold
airline_tab_to_airline_tabfill_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_tab_right_to_airline_tabmod_right xxx ctermfg=235 ctermbg=235
airline_tabmod_right_to_airline_tablabel xxx ctermfg=235 ctermbg=235
airline_tab_to_airline_tabmod xxx ctermfg=235 ctermbg=235
airline_tab_right_to_airline_tabmod_right_bold xxx cterm=bold ctermfg=235 ctermbg=235 gui=bold
airline_tab_right_to_airline_tabmod_right_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_tab_to_airline_tabmod_bold xxx cterm=bold ctermfg=235 ctermbg=235 gui=bold
airline_tab_to_airline_tabmod_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_tabmod_right_to_airline_tablabel_bold xxx cterm=bold ctermfg=235 ctermbg=235 gui=bold
airline_tabmod_right_to_airline_tablabel_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_tabhid_to_airline_tabmod xxx ctermfg=235 ctermbg=235
airline_tabhid_to_airline_tabmod_bold xxx cterm=bold ctermfg=235 ctermbg=235 gui=bold
airline_tabhid_to_airline_tabmod_red xxx ctermfg=160 ctermbg=235 guifg=#ff0000
airline_c6_inactive xxx ctermfg=250 ctermbg=238 guifg=#bbbbbb guibg=#444444
--- Variables ---
NERDTreeMapPreviewSplit  gi
tagbar_indent         #2
ale_echo_msg_warning_str  Warning
textmanip_enable_mappings #0
jedi#force_py_version #3
clang_make_default_keymappings #0
NERDTreeOpener        {'open': function('174'), '_openFile': function('175'), '_isWindowUsable': function('170'), '_previousWindow': function('177'), '_openDirectory': function('176'), '_restoreCursorPos': function('178'), '_newSplit': function('172'), '_saveCursorPos': function('180'), '_newVSplit': function('173'), 'New': function('171'), '_reuseWindow': function('179'), '_checkToCloseTree': function('167'), '_gotoTargetWin': function('169'), '_bufInWindows': function('166'), '_firstUsableWindow': function('168')}
NERDTreeShowHidden     0
gitgutter_async       #1
ale_cpp_clang_options  -std=c++14 -Wall -Wextra
J_KEYWORDS_MODS       ['public', 'private', 'protected', 'static', 'final', 'synchronized', 'volatile', 'transient', 'native', 'strictfp', 'abstract']
tabular_loaded        #1
airline_detect_spell  #1
vcoolor_lowercase     #0
tagbar_singleclick    #0
J_PRIMITIVE_TYPES     ['boolean', 'byte', 'char', 'int', 'short', 'long', 'float', 'double']
jedi#auto_vim_configuration #0
NERDUsePlaceHolders    1
loaded_zipPlugin       v28
WebDevIconsNerdTreeGitPluginForceVAlign #1
NERDTreeRespectWildIgnore  0
i                     #255
plugs_order           ['vim-fugitive', 'vim-gitgutter', 'undotree', 'deoplete.nvim', 'deoplete-ternjs', 'ale', 'neosnippet', 'neosnippet-snippets', 'neoinclude.vim', 'emmet-vim', 'neco-vim', 'vim-javacomplete2', 'jcommenter.vim', 'clang_complete', 'jedi-vim', 'vim-fake', 'nerdtree', 'fzf', 'tagbar', 'vim-misc', 'vim-easytags', 'vim-signature', 'vim-repeat', 'vim-multiple-cursors', 'Tabular', 'auto-pairs', 'vim-endwise', 'vCoolor.vim', 'vim-you-autocorrect', 'nerdcommenter', 'markdown-preview.vim', 'vim-textmanip', 'vim-easymotion', 'vim-indent-object', 'vim-argumentative', 'vim-textobj-user', 'vim-textobj-function', 'vim-textobj-comment', 'vim-next-object', 'vim-surround', 'vim-commentary', 'ReplaceWithRegister', 'awesome-vim-colorschemes', 'vim-airline', 'vim-airline-themes', 'vim-devicons', 'indentLine', 'MatchTag', 'vim-css-color', 'vim-polyglot']
xolox#easytags#syntax_match_timer {'format': function('273'), 'stop': function('272'), 'total': [0, 0], 'start': function('271')}
ale_sh_shellcheck_exclusions  
indentLine_bufTypeExclude []
deoplete#enable_at_startup #1
NERDTreeMapToggleHidden  I
NERDTreeWinSize        31
loaded_mkdp           #1
loaded_nerdtree_autoload #1
gitgutter_terminal_reports_focus #1
vimsyn_embed          #0
ale_echo_delay        #10
NERDTreeMapRefreshRoot  R
ale_sh_shellcheck_options  
NERDTreeMapToggleFilters  f
RE_TYPE_ARGUMENT       \%(?\s\+\%(extends\|super\)\s\+\)\=[a-zA-Z_$][a-zA-Z0-9_$]*\%(\s*\.\s*[a-zA-Z_$][a-zA-Z0-9_$]*\)*\%(\s*\[\s*\]\)*
loaded_remote_plugins  /home/saul/.local/share/nvim/rplugin.vim
mkdp_server_started   #0
airline_detect_crypt  #1
webdevicons_enable    #1
default_grep           grep
ale_type_map          {}
ale_sign_style_warning  --
RE_IDENTIFIER          [a-zA-Z_$][a-zA-Z0-9_$]*
neosnippet#expand_word_boundary #0
airline_detect_iminsert #0
SignaturePrioritizeMarks #1
neosnippet#data_directory  /home/saul/.cache/neosnippet/
graphql_javascript_tags ['gql', 'graphql', 'Relay.QL']
timer_verbosity       #1
neosnippet#scope_aliases {}
NERDTreeMapMenu        m
ale_c_clangtidy_options  -std=gnu11 -Wall -Wextra -Wno-missing-field-initializers -Wstrict-prototypes
ale_sign_info          --
loaded_Signature      #1
SignatureIncludeMarkers  )!@#$%^&*(
SignatureMarkTextHL    SignatureMarkText
airline_theme          tender
plug_home              /home/saul/.vim/plugged
NERDTreeMapJumpParent  p
WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol  
JC_MODIFIER_ABSTRACT  #11
loaded_endwise        #1
NERDTreeShowBookmarks  0
easytags_cmd           /usr/bin/ctags-exuberant
SignatureMarkOrder     pm
loaded_man            #1
ale_sh_shell_default_shell  zsh
neosnippet#disable_select_mode_mappings #1
NERDTreeMouseMode      1
JC_MODIFIER_PUBLIC    #1
JC__CONTEXT_COMPLETE_CLASSNAME #7
RE_TYPE_WITH_ARGUMENTS_I  [a-zA-Z_$][a-zA-Z0-9_$]*\s*<\%(?\s\+\%(extends\|super\)\s\+\)\=[a-zA-Z_$][a-zA-Z0-9_$]*\%(\s*\.\s*[a-zA-Z_$][a-zA-Z0-9_$]*\)*\%(\s*\[\s*\]\)*\%(\s*,\s*\%(?\s\+\%(extends\|super\)\s\+\)\=[a-zA-Z_$][a-zA-Z0-9_$]*\%(\s*\.\s*[a-zA-Z_$][a-zA-Z0-9_$]*\)*\%(\s*\[\s*\]\)*\)*>
xolox#easytags#default_pattern_suffix  \>
neoinclude#_exprs     {}
autoloaded_fugitive   #1
NERDTreeCreatePrefix   silent
loaded_matchit        #1
airline_exclude_preview #0
AutoPairsCenterLine   #1
loaded_tagbar         #1
loaded_ale_dont_use_this_in_other_plugins_please #1
NERDTreeMapOpenSplit   i
textmanip_debug       #0
ft_ignore_pat          \.\(Z\|gz\|bz2\|zip\|tgz\)$
ale_writegood_use_global #0
NERDTreeShowLineNumbers  0
filetype_euphoria      elixir
gitgutter_diff_args    
JC__CONTEXT_METHOD_PARAM #2
tagbar_map_toggleautoclose  c
loaded_textmanip      #1
EasyMotion_use_migemo #0
xolox_message_buffer  #100
neoinclude#_delimiters {'mkd': '', 'xhtml': '', 'c': '/', 'xml': '', 'html': '', 'ruby': '/', 'cpp': '/', 'markdown': ''}
AutoPairsClosedPairs  {}
vim_ember_script      #1
indentLine_showFirstIndentLevel #0
matchparen_insert_timeout #60
NERDCreateDefaultMappings  1
deoplete#_channel_id  #4
ale_sign_column_always #0
tagbar_zoomwidth      #1
RE_BRACKETS            \%(\s*\[\s*\]\)
NERDTreeMapPreviewVSplit  gs
ale_c_gcc_options      -std=gnu11 -Wall -Wextra -Wno-missing-field-initializers -Wstrict-prototypes
AutoPairsMultilineClose #1
neoinclude#_reverse_exprs {'perl': 'substitute(v:fname, "/", "::", "g")', 'd': 'substitute(v:fname, "/", ".", "g")', 'java': 'substitute(v:fname, "/", ".", "g")', 'ruby': 'substitute(v:fname, "\.rb$", "", "")', 'python': 'substitute(substitute(v:fname, ''\v.*egg%(-info|-link)?$'', '''', ''''), ''/'', ''.'', ''g'')'}
gitgutter_git_args     
NERDTreeMapJumpRoot    P
loaded_netrwPlugin     v156
loaded_necovim        #1
NERDTreeGlyphReadOnly  RO
multi_cursor_exit_from_visual_mode #1
NERDTreeMinimalUI      0
ale_filetype_blacklist ['dirvish', 'nerdtree', 'qf', 'tags', 'unite']
tagbar_hide_nonpublic #0
xolox#misc#cursorhold#handlers [{'function': 'xolox#easytags#autoload', 'last_run': 1534668617, 'arguments': ['CursorHold'], 'interval': 4}]
xolox#easytags#update_timer {'format': function('267'), 'stop': function('266'), 'current': [], 'total': [0, 2001818], 'start': function('265')}
matchparen_timeout    #300
airline_exclude_filenames ['DebuggerWatch', 'DebuggerStack', 'DebuggerStatus']
__textobj_comment     {'obj_specs': {'big': {'select-a': ['aC'], 'select-a-function': 'textobj#comment#select_big_a'}, '-': {'select-i-function': 'textobj#comment#select_i', 'select-a': ['ac'], 'select-a-function': 'textobj#comment#select_a', 'select-i': ['ic']}}, 'define_default_key_mappings': function('285'), 'name': 'comment', 'do_by_function': function('289'), 'interface_mapping_name': function('287'), 'normalize': function('284'), 'do_by_pattern': function('288'), 'define_interface_key_mappings': function('286'), 'new': function('283')}
NERDRemoveExtraSpaces  0
indentLine_char        ¦
SignatureForceMarkerPlacement #0
loaded_commentary     #1
undotree_ShortIndicators #0
mapleader              ,
airline_section_gutter  %=
NERDTreeAutoCenter     1
NERDTreeCascadeOpenSingleChildDir  1
AutoPairsFlyMode      #0
NERDTreeMapOpenVSplit  s
tagbar_expand         #0
tagbar_autopreview    #0
textmanip_startup_mode  insert
ale_lint_on_insert_leave #0
NERDTrimTrailingWhitespace  0
NERDTreeMapDeleteBookmark  D
xolox#easytags#filetypes#vim_to_ctags {'cs': 'c#', 'aspvbs': 'asp', 'cpp': 'c++'}
SignatureForceRemoveGlobal #0
SignaturePeriodicRefresh #1
SignatureDeleteConfirmation #0
loaded_textobj_function #1
JC_MODIFIER_NATIVE    #9
undotree_HighlightSyntaxAdd  DiffAdd
fugitive_git_executable  git
airline_left_sep       
tagbar_show_visibility #1
indentLine_leadingSpaceEnabled #0
NERDTreeMapJumpFirstChild  K
loaded_nerd_tree      #1
terminal_color_10      #c9d05c
terminal_color_11      #ffc24b
terminal_color_12      #b3deef
terminal_color_13      #d3b987
ale_writegood_executable  write-good
terminal_color_15      #ffffff
JC__CONTEXT_COMPLETE_CLASSNAME_AND_LOCAL_MEMBERS #8
NERDTreeMapToggleBookmarks  B
ale_haskell_ghc_options  -dynamic
tagbar_ctags_bin       ctags-exuberant
jsx_pragma_required   #0
ale_cpp_gcc_options    -std=c++14 -Wall -Wextra
clang_library_path     /usr/lib/llvm-3.8/lib/libclang.so.1
loaded_fugitive       #1
gitgutter_map_keys    #0
NERDTreeAutoCenterThreshold  3
multi_cursor_debug_latency #0
JC__CONTEXT_PACKAGE_DECL #6
tagbar_vertical       #0
deoplete#_initialized  v:true
tagbar#icon_closed     ▶
ale_sign_warning       --
loaded_nerdtree_fs_menu #1
ale_set_quickfix      #1
RE_TYPE_MODS           \%(public\|protected\|private\|abstract\|static\|final\|strictfp\)
SignatureMarkerTextHLDynamic #0
tagbar_map_togglefold ['o', 'za']
AutoPairsMapBS        #1
RE_REFERENCE_TYPE      [a-zA-Z_$][a-zA-Z0-9_$]*\%(\s*\.\s*[a-zA-Z_$][a-zA-Z0-9_$]*\)*\%(\s*\[\s*\]\)*
EasyMotion_move_highlight #1
AutoPairsShortcutBackInsert  <M-b>
multi_cursor_visual_maps {'T': 1, 'a': 1, 't': 1, 'F': 1, 'f': 1, 'i': 1}
AutoPairsLoaded       #1
textmanip_current_mode  insert
gitgutter_max_signs   #500
gitgutter_log         #0
undotree_DiffAutoOpen #1
neosnippet#enable_optional_arguments #1
loaded_spellfile_plugin #1
gitgutter_grep         grep
airline_section_a      %#__accent_bold#%{airline#util#wrap(airline#parts#mode(),0)}%#__restore__#%{airline#util#append(airline#parts#crypt(),0)}%{airline#util#append(airline#parts#paste(),0)}%{airline#util#append(airline#extensions#keymap#status(),0)}%{airline#util#append(airline#parts#spell(),0)}%{airline#util#append("",0)}%{airline#util#append("",0)}%{airline#util#append(airline#parts#iminsert(),0)}
airline_section_b      %{airline#util#wrap(airline#extensions#hunks#get_hunks(),0)}%{airline#util#wrap(airline#extensions#branch#get_head(),0)}
ale_c_clangtidy_checks ['*', '-readability-braces-around-statements', '-google-readability-braces-around-statements', '-llvm-header-guard']
NERDTreePathNotifier  {'GetListenersMap': function('263'), 'NotifyListeners': function('262'), 'AddListener': function('261'), 'GetListenersForEvent': function('264')}
EasyMotion_smartcase  #0
loaded_fzf            #1
airline_section_x      %{airline#util#prepend(airline#extensions#tagbar#currenttag(),0)}%{airline#util#prepend("",0)}%{airline#util#prepend("",0)}%{airline#util#wrap(airline#parts#filetype(),0)}
airline_section_y      %{airline#util#wrap(airline#parts#ffenc(),0)}
NERDTreeIgnore        ['\~$']
AutoPairsMapCR        #1
more_save             #0
NERDTreeBookmarksFile  /home/saul/.NERDTreeBookmarks
AutoPairsMapCh        #1
loaded_gzip           #1
deoplete#sources#ternjs#include_keywords #1
netrw_force_overwrite_statusline #0
tagbar_map_closefold  ['-', '<kMinus>', 'zc']
xolox#easytags#highlight_timer {'format': function('270'), 'stop': function('269'), 'current': [], 'total': [3, 1134273], 'start': function('268')}
mkdp_auto_open        #0
terminal_color_0       #282828
terminal_color_1       #f43753
terminal_color_2       #c9d05c
terminal_color_3       #ffc24b
terminal_color_4       #b3deef
terminal_color_5       #d3b987
terminal_color_6       #73cef4
terminal_color_7       #eeeeee
terminal_color_8       #1d1d1d
terminal_color_9       #f43753
loaded_neoinclude     #1
undotree_DiffpanelHeight #10
next_object_prev_letter  v
undotree_RelativeTimestamp #1
tagbar_map_prevfold    zk
neoinclude#suffixes   {}
NERDTreeDirArrowExpandable  ▸
WebDevIconsUnicodeDecorateFileNodes #1
NERDCommentEmptyLines  0
webdevicons_enable_denite #1
AutoPairs             {'`': '`', '¡': '!', '"': '"', '{': '}', '''': '''', '(': ')', '¿': '?', '[': ']'}
webdevicons_conceal_nerdtree_brackets #1
vim_emblem            #1
NERDTreeFlagSet       {'clearFlags': function('205'), '_flagsForScope': function('206'), 'addFlag': function('204'), 'removeFlag': function('208'), 'renderToString': function('209'), 'New': function('207')}
RE_TYPE_ARGUMENT_EXTENDS  \%(?\s\+\%(extends\|super\)\s\+\)[a-zA-Z_$][a-zA-Z0-9_$]*\%(\s*\.\s*[a-zA-Z_$][a-zA-Z0-9_$]*\)*\%(\s*\[\s*\]\)*
ale_fortran_gcc_options  -Wall -Wextra
EasyMotion_space_jump_first #0
EasyMotion_prompt      Search for {n} character(s): 
indentLine_loaded     #1
EasyMotion_use_regexp #1
NERDTreeFileNode      {'isRoot': function('119'), 'openInNewTab': function('124'), 'rename': function('128'), 'activate': function('104'), 'clearBookmarks': function('107'), 'displayString': function('110'), 'cacheParent': function('106'), 'delete': function('109'), 'findNode': function('112'), '_renderToString': function('130'), 'openSplit': function('122'), 'New': function('120'), 'findOpenDirSiblingWithVisibleChildren': function('113'), 'findSibling': function('114'), 'renderToString': function('129'), 'refresh': function('126'), 'getNerdtree': function('115'), 'openVSplit': function('123'), 'bookmark': function('105'), 'putCursorHere': function('125'), 'equals': function('111'), 'isVisible': function('118'), 'copy': function('108'), 'GetSelected': function('117'), 'refreshFlags': function('127'), 'open': function('121'), 'GetRootForTab': function('116')}
tagbar_show_linenumbers #0
NERDTreeMapOpenInTabSilent  T
NERDTreeMapHelp        ?
mkdp_auto_close       #1
ale_completion_enabled #0
tagbar_map_nextfold    zj
ale_set_loclist       #1
NERDTreeMapJumpPrevSibling  <C-k>
NERDDefaultNesting     1
xolox#easytags#version  3.11
SignatureDeferPlacement #1
ale_cpp_clangtidy_options  -std=c++14 -Wall -Wextra
ale_echo_cursor       #1
zipPlugin_ext          *.apk,*.celzip,*.crtx,*.docm,*.docx,*.dotm,*.dotx,*.ear,*.epub,*.gcsx,*.glox,*.gqsx,*.ja,*.jar,*.kmz,*.oxt,*.potm,*.potx,*.ppam,*.ppsm,*.ppsx,*.pptm,*.pptx,*.sldx,*.thmx,*.vdw,*.war,*.wsz,*.xap,*.xlam,*.xlam,*.xlsb,*.xlsm,*.xlsx,*.xltm,*.xltx,*.xpi,*.zip
NERDTreeMapOpenInTab   t
loaded_matchparen     #1
NERDTreeChDirMode      0
ale_vim_vint_executable  vint
mako_detect_lang_from_ext #1
gitgutter_sign_removed  _
NERDTreeShowFiles      1
textmanip_move_shiftwidth #1
easytags_events       ['BufWritePost', 'CursorHold', 'CursorHoldI']
ale_linter_aliases    {}
NERDTreeHijackNetrw    1
JC__CONTEXT_IMPORT    #3
SignatureErrorIfNoAvailableMarks #1
neoinclude#exts       {}
NERDTreeKeyMap        {'All': function('69'), 'BindAll': function('72'), 'Create': function('77'), 'bind': function('73'), 'Add': function('78'), 'FindFor': function('71'), 'Invoke': function('76'), 'Compare': function('70'), 'invoke': function('75'), 'Remove': function('74')}
WebDevIconsUnicodeDecorateFileNodesExactSymbols {'.vimrc': '', '.bashrc': '', '_gvimrc': '', '_vimrc': '', 'dropbox': '', '.gvimrc': '', 'license': '', 'procfile': '', '.gitignore': '', 'gruntfile.js': '', '.bashprofile': '', 'gulpfile.coffee': '', 'gruntfile.ls': '', 'node_modules': '', 'gulpfile.js': '', '.zshrc': '', 'gulpfile.ls': '', 'exact-match-case-sensitive-2': '2', 'docker-compose.yml': '', '.gitconfig': '', '.ds_store': '', 'react.jsx': '', 'exact-match-case-sensitive-1.txt': '1', 'dockerfile': '', 'gruntfile.coffee': '', 'favicon.ico': ''}
tagbar_autofocus      #0
NERDTreeBookmarksSort  1
ale_lint_on_save      #1
colors_name            tender
tagbar_status_func     airline#extensions#tagbar#get_status
loaded_ReplaceWithRegister #1
airline_last_window_changed [3, 1, 1, 1, 'vim']
NERDTreeUI            {'getLineNum': function('235'), 'restoreScreenState': function('247'), 'getRootLineNum': function('236'), 'IndentWid': function('242'), 'getPath': function('234'), 'getShowFiles': function('238'), 'New': function('233'), 'toggleShowBookmarks': function('255'), 'getShowBookmarks': function('237'), 'toggleZoom': function('258'), 'saveScreenState': function('248'), 'toggleIgnoreFilter': function('254'), '_dumpHelp': function('232'), 'renderViewSavingPosition': function('252'), '_stripMarkup': function('250'), '_indentLevelFor': function('241'), 'setShowHidden': function('249'), 'toggleShowHidden': function('257'), 'UpDirLine': function('259'), 'getShowHelp': function('239'), 'toggleHelp': function('253'), '_renderBookmarks': function('246'), 'isIgnoreFilterEnabled': function('243'), 'render': function('251'), 'getShowHidden': function('240'), 'MarkupReg': function('245'), 'isMinimal': function('244'), 'centerView': function('231'), 'toggleShowFiles': function('256')}
tagbar_map_closeallfolds ['=', 'zM']
ale_list_window_size  #10
WebDevIconsNerdTreeBeforeGlyphPadding   
SignaturePurgeConfirmation #0
ale_windows_node_executable_path  node.exe
tagbar_map_togglesort  s
vcoolor_loaded        #1
multi_cursor_select_all_word_key  <A-n>
JC_MODIFIER_FINAL     #5
indentLine_fileTypeExclude []
sh_fold_enabled       #0
airline#init#vim_async #0
webdevicons_gui_glyph_fix #0
SignatureWrapJumps    #1
ale_echo_msg_info_str  Info
terminal_color_background  #eeeeee
EasyMotion_cursor_highlight #1
neosnippet#enable_auto_clear_markers #1
neoinclude#exprs      {}
undotree_TreeNodeShape  *
ale#util#error_priority #5
RE_TYPE_WITH_ARGUMENTS  [a-zA-Z_$][a-zA-Z0-9_$]*\s*<\%(?\s\+\%(extends\|super\)\s\+\)\=[a-zA-Z_$][a-zA-Z0-9_$]*\%(\s*\.\s*[a-zA-Z_$][a-zA-Z0-9_$]*\)*\%(\s*\[\s*\]\)*\%(\s*,\s*\%(?\s\+\%(extends\|super\)\s\+\)\=[a-zA-Z_$][a-zA-Z0-9_$]*\%(\s*\.\s*[a-zA-Z_$][a-zA-Z0-9_$]*\)*\%(\s*\[\s*\]\)*\)*>\%(\s*[a-zA-Z_$][a-zA-Z0-9_$]*\s*<\%(?\s\+\%(extends\|super\)\s\+\)\=[a-zA-Z_$][a-zA-Z0-9_$]*\%(\s*\.\s*[a-zA-Z_$][a-zA-Z0-9_$]*\)*\%(\s*\[\s*\]\)*\%(\s*,\s*\%(?\s\+\%(extends\|super\)\s\+\)\=[a-zA-Z_$][a-zA-Z0-9_$]*\%(\s*\.\s*[a-zA-Z_$][a-zA-Z0-9_$]*\)*\%(\s*\[\s*\]\)*\)*>\)*
NERDBlockComIgnoreEmpty  0
airline_theme_map     {'zenburn': 'zenburn', '\CNeoSolarized': 'solarized', 'solarized': 'solarized', 'wombat': 'wombat', '\CTomorrow': 'tomorrow', 'base16': 'base16', 'mo[l|n]okai': 'molokai', 'flattened': 'solarized'}
airline#themes#tender#palette {'accents': {'orange': ['#df5f00', '', 166, ''], 'bold': ['', '', '', '', 'bold'], 'blue': ['#005fff', '', 27, ''], 'green': ['#008700', '', 22, ''], 'purple': ['#af00df', '', 128, ''], 'none': ['', '', '', '', ''], 'airline_error': ['#000000', '#990000', 232, 160], 'italic': ['', '', '', '', 'italic'], 'airline_term': ['#9cffd3', '#202020', 85, 232], 'yellow': ['#dfff00', '', 190, ''], 'airline_warning': ['#000000', '#df5f00', 232, 166], 'red': ['#ff0000', '', 160, '']}, 'inactive': {'airline_x': ['#bbbbbb', '#444444', 250, 238, ''], 'airline_y': ['#bbbbbb', '#666666', 250, 242, ''], 'airline_z': ['#bbbbbb', '#666666', 250, 242, ''], 'airline_term': ['#9cffd3', '#202020', 85, 232], 'airline_error': ['#000000', '#990000', 232, 160], 'airline_a': ['#bbbbbb', '#666666', 250, 242, ''], 'airline_b': ['#bbbbbb', '#666666', 250, 242, ''], 'airline_c': ['#bbbbbb', '#444444', 250, 238, ''], 'airline_warning': ['#000000', '#df5f00', 232, 166]}, 'replace': {'airline_x': ['#f43753', '#444444', 203, 238, ''], 'airline_y': ['#282828', '#c5152f', 235, 160, ''], 'airline_z': ['#282828', '#f43753', 235, 203, ''], 'airline_term': ['#9cffd3', '#202020', 85, 232], 'airline_error': ['#000000', '#990000', 232, 160], 'airline_a': ['#282828', '#f43753', 235, 203, ''], 'airline_b': ['#282828', '#c5152f', 235, 160, ''], 'airline_c': ['#f43753', '#444444', 203, 238, ''], 'airline_warning': ['#000000', '#df5f00', 232, 166]}, 'normal': {'airline_tab_right_to_airline_tabmod_right': ['', '', '235', '235', ''], 'airline_tablabel_to_airline_tabsel': ['', '', '235', '235', ''], 'airline_x_to_airline_y': ['', '', '81', '238', ''], 'airline_error': ['#000000', '#990000', 232, 160, ''], 'airline_tabsel_to_airline_tab': ['', '', '235', '235', ''], 'airline_tab_right_to_airline_tabsel_right': ['', '', '235', '235', ''], 'airline_tabsel_to_airline_tabfill': ['', '', '235', '235', ''], 'airline_tab_to_airline_tabmod': ['', '', '235', '235', ''], 'airline_x': ['#b3deef', '#444444', 153, 238, ''], 'airline_y': ['#282828', '#73cef4', 235, 81, ''], 'airline_z': ['#335261', '#b3deef', 239, 153, ''], 'airline_tabhid_to_airline_tabsel': ['', '', '235', '235', ''], 'airline_tabfill_to_airline_tab_right': ['', '', '235', '235', ''], 'airline_tabmod_right_to_airline_tablabel': ['', '', '235', '235', ''], 'airline_tablabel_to_airline_tabfill': ['', '', '235', '235', ''], 'airline_z_to_airline_warning': ['', '', '166', '153', ''], 'airline_b_to_airline_c': ['', '', '81', '238', ''], 'airline_tab_to_airline_tabfill': ['', '', '235', '235', ''], 'airline_tabfill_to_airline_tablabel': ['', '', '235', '235', ''], 'airline_tabsel_right_to_airline_tablabel': ['', '', '235', '235', ''], 'airline_warning': ['#000000', '#df5f00', 232, 166, ''], 'airline_a_to_airline_b': ['', '', '153', '81', ''], 'airline_tab_to_airline_tabsel': ['', '', '235', '235', ''], 'airline_tabhid_to_airline_tabmod': ['', '', '235', '235', ''], 'airline_tabfill_to_airline_tabfill': ['', '', '235', '235', ''], 'airline_c': ['#b3deef', '#444444', 153, 238, ''], 'airline_term': ['#9cffd3', '#202020', 85, 232, ''], 'airline_tabmod_to_airline_tabfill': ['', '', '235', '235', ''], 'airline_warning_to_airline_error': ['', '', '160', '166', ''], 'airline_a': ['#335261', '#b3deef', 239, 153, ''], 'airline_b': ['#282828', '#73cef4', 235, 81, ''], 'airline_y_to_airline_z': ['', '', '153', '81', ''], 'airline_c_to_airline_x': ['', '', '238', '238', '']}, 'visual': {'airline_tab_right_to_airline_tabmod_right': ['', '', '235', '235', ''], 'airline_x_to_airline_y': ['', '', '58', '238', ''], 'airline_error': ['#000000', '#990000', 232, 160, ''], 'airline_tabsel_to_airline_tab': ['', '', '235', '235', ''], 'airline_tab_right_to_airline_tabsel_right': ['', '', '235', '235', ''], 'airline_tabsel_to_airline_tabfill': ['', '', '235', '235', ''], 'airline_tab_to_airline_tabmod': ['', '', '235', '235', ''], 'airline_x': ['#ffc24b', '#444444', 215, 238, ''], 'airline_y': ['#282828', '#715b2f', 235, 58, ''], 'airline_z': ['#282828', '#ffc24b', 235, 215, ''], 'airline_tabhid_to_airline_tabsel': ['', '', '235', '235', ''], 'airline_tabfill_to_airline_tab_right': ['', '', '235', '235', ''], 'airline_z_to_airline_warning': ['', '', '166', '215', ''], 'airline_tabmod_right_to_airline_tablabel': ['', '', '235', '235', ''], 'airline_a_to_airline_b': ['', '', '215', '58', ''], 'airline_tablabel_to_airline_tabfill': ['', '', '235', '235', ''], 'airline_tabfill_to_airline_tabfill': ['', '', '235', '235', ''], 'airline_b_to_airline_c': ['', '', '58', '238', ''], 'airline_tab_to_airline_tabfill': ['', '', '235', '235', ''], 'airline_a': ['#282828', '#ffc24b', 235, 215, ''], 'airline_tabsel_right_to_airline_tablabel': ['', '', '235', '235', ''], 'airline_warning': ['#000000', '#df5f00', 232, 166, ''], 'airline_c_to_airline_x': ['', '', '238', '238', ''], 'airline_tab_to_airline_tabsel': ['', '', '235', '235', ''], 'airline_tabhid_to_airline_tabmod': ['', '', '235', '235', ''], 'airline_y_to_airline_z': ['', '', '215', '58', ''], 'airline_term': ['#9cffd3', '#202020', 85, 232, ''], 'airline_tabmod_to_airline_tabfill': ['', '', '235', '235', ''], 'airline_warning_to_airline_error': ['', '', '160', '166', ''], 'airline_tabfill_to_airline_tablabel': ['', '', '235', '235', ''], 'airline_b': ['#282828', '#715b2f', 235, 58, ''], 'airline_c': ['#ffc24b', '#444444', 215, 238, ''], 'airline_tablabel_to_airline_tabsel': ['', '', '235', '235', '']}, 'insert': {'airline_tablabel_to_airline_tabfill': ['', '', '235', '235', ''], 'airline_tab_right_to_airline_tabmod_right': ['', '', '235', '235', ''], 'airline_x_to_airline_y': ['', '', '142', '238', ''], 'airline_error': ['#000000', '#990000', 232, 160, ''], 'airline_tabsel_to_airline_tab': ['', '', '235', '235', ''], 'airline_tab_right_to_airline_tabsel_right': ['', '', '235', '235', ''], 'airline_tabsel_to_airline_tabfill': ['', '', '235', '235', ''], 'airline_tab_to_airline_tabmod': ['', '', '235', '235', ''], 'airline_x': ['#c9d05c', '#464632', 185, 238, ''], 'airline_y': ['#282828', '#9faa00', 235, 142, ''], 'airline_z': ['#464632', '#c9d05c', 238, 185, ''], 'airline_tabhid_to_airline_tabsel': ['', '', '235', '235', ''], 'airline_a_to_airline_b': ['', '', '185', '142', ''], 'airline_tab_to_airline_tabsel': ['', '', '235', '235', ''], 'airline_tabmod_right_to_airline_tablabel': ['', '', '235', '235', ''], 'airline_tablabel_to_airline_tabsel': ['', '', '235', '235', ''], 'airline_tabfill_to_airline_tabfill': ['', '', '235', '235', ''], 'airline_b_to_airline_c': ['', '', '142', '238', ''], 'airline_tab_to_airline_tabfill': ['', '', '235', '235', ''], 'airline_tabfill_to_airline_tablabel': ['', '', '235', '235', ''], 'airline_tabsel_right_to_airline_tablabel': ['', '', '235', '235', ''], 'airline_warning': ['#000000', '#df5f00', 232, 166, ''], 'airline_c_to_airline_x': ['', '', '238', '238', ''], 'airline_tabfill_to_airline_tab_right': ['', '', '235', '235', ''], 'airline_tabhid_to_airline_tabmod': ['', '', '235', '235', ''], 'airline_y_to_airline_z': ['', '', '185', '142', ''], 'airline_term': ['#9cffd3', '#202020', 85, 232, ''], 'airline_tabmod_to_airline_tabfill': ['', '', '235', '235', ''], 'airline_z_to_airline_warning': ['', '', '166', '185', ''], 'airline_a': ['#464632', '#c9d05c', 238, 185, ''], 'airline_b': ['#282828', '#9faa00', 235, 142, ''], 'airline_c': ['#c9d05c', '#464632', 185, 238, ''], 'airline_warning_to_airline_error': ['', '', '160', '166', '']}}
NERDDelimiterMap      {'mkd': {'right': '-->', 'left': '<!---'}, 'tsalt': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'uil': {'left': '!'}, 'geek': {'left': 'GEEK_COMMENT:'}, 'terraform': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '#'}, 'dracula': {'left': ';'}, 'remind': {'left': '#'}, 'modula2': {'right': '*)', 'left': '(*'}, 'modula3': {'right': '*)', 'left': '(*'}, 'cucumber': {'left': '#'}, 'lpc': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'sqlforms': {'left': '-- '}, 'gdb': {'left': '#'}, 'gtkrc': {'left': '#'}, 'ave': {'left': ''''}, 'st': {'left': '"'}, 'amiga': {'left': ';'}, 'gitignore': {'left': '#'}, 'perl': {'left': '#'}, 'bbx': {'left': '%'}, 'gitrebase': {'left': '#'}, 'scilab': {'left': '//'}, 'basic': {'leftAlt': 'REM ', 'left': ''''}, 'desktop': {'left': '#'}, 'dcl': {'left': '$!'}, 'meson': {'left': '#'}, 'ox': {'left': '//'}, 'tads': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'abc': {'left': '%'}, 'processing': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'fancy': {'left': '#'}, 'ishd': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'pcap': {'left': '#'}, 'lotos': {'right': '*)', 'left': '(*'}, 'sqlj': {'left': '-- '}, 'hog': {'left': '#'}, 'newlisp': {'left': ';'}, 'debsources': {'left': '#'}, 'ecd': {'left': '#'}, 'c': {'right': '*/', 'leftAlt': '//', 'left': '/*'}, 'd': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'vhdl': {'left': '--'}, 'h': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'privoxy': {'left': '#'}, 'ansible': {'left': '#'}, 'haml': {'leftAlt': '/', 'left': '-#'}, 'rib': {'left': '#'}, 'ora': {'left': '#'}, 'pine': {'left': '#'}, 'ps1': {'left': '#'}, 'glsl': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'dhcpd': {'left': '#'}, 'ttl': {'left': '#'}, 'slice': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'rebol': {'left': ';'}, 'sshdconfig': {'left': '#'}, 'hyphy': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'vala': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'awk': {'left': '#'}, 'nginx': {'left': '#'}, 'nroff': {'left': '\"'}, 'gentoo-package-keywords': {'left': '#'}, 'dns': {'left': ';'}, 'octave': {'leftAlt': '#', 'left': '%'}, 'catalog': {'right': '--', 'left': '--'}, 'gentoo-conf-d': {'left': '#'}, 'aml': {'left': '/*'}, 'conkyrc': {'left': '#'}, 'less': {'right': '*/', 'left': '/*'}, 'named': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'lisp': {'nestedAlt': 1, 'nested': 1, 'leftAlt': '#|', 'left': ';', 'rightAlt': '|#'}, 'stp': {'right': '*/', 'leftAlt': '//', 'left': '/*'}, 'calibre': {'left': '//'}, 'dosbatch': {'leftAlt': '::', 'left': 'REM '}, 'minizinc': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '% '}, 'fx': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'model': {'right': '$', 'left': '$'}, 'resolv': {'left': '#'}, 'haxe': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'pic': {'left': ';'}, 'nagios': {'left': ';'}, 'llvm': {'left': ';'}, 'ldif': {'left': '#'}, 'snnsres': {'left': '#'}, 'clipper': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'ocaml': {'right': '*)', 'nested': 1, 'left': '(*'}, 'erlang': {'leftAlt': '%%', 'left': '%'}, 'specman': {'left': '//'}, 'yaml': {'left': '#'}, 'hxml': {'left': '#'}, 'swift': {'right': '*/', 'leftAlt': '//', 'left': '/*'}, 'slrnrc': {'left': '%'}, 'rspec': {'left': '#'}, 'php': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'trasys': {'left': '$'}, 'exports': {'left': '#'}, 'def': {'left': ';'}, 'tak': {'left': '$'}, 'snippets': {'left': '#'}, 'gentoo-make-conf': {'left': '#'}, 'aspvbs': {'rightAlt': '-->', 'leftAlt': '<!--', 'left': ''''}, 'sqr': {'left': '!'}, 'ada': {'leftAlt': '--  ', 'left': '--'}, 'go': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'debcontrol': {'left': '#'}, 'ember-script': {'left': '#'}, 'mustache': {'right': '}}', 'left': '{{!'}, 'crontab': {'left': '#'}, 'scala': {'nestedAlt': 1, 'nested': 1, 'leftAlt': '/*', 'left': '//', 'rightAlt': '*/'}, 'pfmain': {'left': '//'}, 'clojure': {'left': ';'}, 'coq': {'right': '*)', 'left': '(*'}, 'java': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'javascript': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'povini': {'left': ';'}, 'samba': {'leftAlt': '#', 'left': ';'}, 'mib': {'left': '--'}, 'autohotkey': {'rightAlt': '*/', 'leftAlt': '/*', 'left': ';'}, 'inform': {'left': '!'}, 'ptcap': {'left': '#'}, 'hercules': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'scss': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'supercollider': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'cmake': {'left': '#'}, 'lilo': {'left': '#'}, 'bindzone': {'left': ';'}, 'esmtprc': {'left': '#'}, 'simula': {'leftAlt': '--', 'left': '%'}, 'wml': {'left': '#'}, 'ebuild': {'left': '#'}, 'mirah': {'left': '#'}, 'gentoo-env-d': {'left': '#'}, 'sather': {'left': '--'}, 'tli': {'left': '#'}, 'cterm': {'left': '*'}, 'rc': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'lss': {'left': '#'}, 'elmfilt': {'left': '#'}, 'blade': {'right': '--}}', 'left': '{{--'}, 'actionscript': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'smarty': {'right': '*}', 'left': '{*'}, 'hb': {'left': '#'}, 'scheme': {'nestedAlt': 1, 'nested': 1, 'leftAlt': '#|', 'left': ';', 'rightAlt': '|#'}, 'postscr': {'left': '%'}, 'snnsnet': {'left': '#'}, 'ntp': {'left': '#'}, 'tags': {'left': ';'}, 'teak': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'acedb': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'sgmldecl': {'right': '--', 'left': '--'}, 'pug': {'leftAlt': '//', 'left': '//-'}, 'fgl': {'left': '#'}, 'fstab': {'left': '#'}, 'icon': {'left': '#'}, 'sls': {'left': '#'}, 'cpp': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'puppet': {'left': '#'}, 'tup': {'left': '#'}, 'cfg': {'left': '#'}, 'sass': {'leftAlt': '/*', 'left': '//'}, 'handlebars': {'right': ' --}}', 'left': '{{!-- '}, 'paludis-use-conf': {'left': '#'}, 'kix': {'left': ';'}, 'texmf': {'left': '%'}, 'augeas': {'right': '*)', 'left': '(*'}, 'natural': {'left': '/*'}, 'sile': {'left': '%'}, 'toml': {'left': '#'}, 'jsp': {'right': '--%>', 'left': '<%--'}, 'idris': {'right': '-}', 'leftAlt': '--', 'left': '{-'}, 'tsscl': {'left': '#'}, 'spec': {'left': '#'}, 'ooc': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'smith': {'left': ';'}, 'verilog_systemverilog': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'atlas': {'right': '$', 'left': 'C'}, 'clean': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'sa': {'left': '--'}, 'monk': {'left': ';'}, 'rust': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'eclass': {'left': '#'}, 'gentoo-package-use': {'left': '#'}, 'django': {'right': '-->', 'rightAlt': '#}', 'leftAlt': '{#', 'left': '<!--'}, 'sm': {'left': '#'}, 'foxpro': {'left': '*'}, 'tcl': {'left': '#'}, 'ss': {'rightAlt': '|#', 'leftAlt': '#|', 'left': ';'}, 'iss': {'left': ';'}, 'ist': {'left': '%'}, 'laravel': {'right': '--}}', 'left': '{{--'}, 'htmldjango': {'right': '-->', 'rightAlt': '#}', 'leftAlt': '{#', 'left': '<!--'}, 'masm': {'left': ';'}, 'ppwiz': {'left': ';;'}, 'xkb': {'left': '//'}, 'sml': {'right': '*)', 'nested': 1, 'left': '(*'}, 'pandoc': {'right': '-->', 'left': '<!--'}, 'objcpp': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'mail': {'left': '> '}, 'elixir': {'left': '#'}, 'prolog': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '%'}, 'diff': {'left': '#'}, 'gentoo-init-d': {'left': '#'}, 'liquid': {'right': '{% endcomment %}', 'left': '{% comment %}'}, 'idlang': {'left': ';'}, 'gnuplot': {'left': '#'}, 'rmd': {'left': '#'}, 'dosini': {'left': ';'}, 'sed': {'left': '#'}, 'javacc': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'expect': {'left': '#'}, 'dot': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'jade': {'leftAlt': '//', 'left': '//-'}, 'lua': {'rightAlt': ']]', 'leftAlt': '--[[', 'left': '--'}, 'man': {'left': '."'}, 'map': {'left': '%'}, 'asm68k': {'left': ';'}, 'gsp': {'right': '--%>', 'rightAlt': '-->', 'leftAlt': '<!--', 'left': '<%--'}, 'molpro': {'left': '!'}, 'psf': {'left': '#'}, 'haskell': {'nestedAlt': 1, 'nested': 0, 'leftAlt': '{-', 'left': '--', 'rightAlt': '-}'}, 'tasm': {'left': ';'}, 'tf': {'left': ';'}, 'caos': {'left': '*'}, 'omlet': {'right': '*)', 'left': '(*'}, 'docbk': {'right': '-->', 'left': '<!--'}, 'htmlos': {'right': '/#', 'left': '#'}, 'robots': {'left': '#'}, 'maple': {'left': '#'}, 'focexec': {'left': '-*'}, 'typescript': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'apdl': {'left': '!'}, 'omnimark': {'left': ';'}, 'sdc': {'left': '#'}, 'bst': {'left': '%'}, 'openroad': {'left': '//'}, 'gitconfig': {'left': ';'}, 'vera': {'right': '*/', 'leftAlt': '//', 'left': '/*'}, 'jgraph': {'right': '*)', 'left': '(*'}, 'systemverilog': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'racket': {'nestedAlt': 1, 'nested': 1, 'leftAlt': '#|', 'left': ';', 'rightAlt': '|#'}, 'xpm2': {'left': '!'}, 'master': {'left': '$'}, 'vrml': {'left': '#'}, 'context': {'leftAlt': '--', 'left': '%'}, 'spectre': {'leftAlt': '*', 'left': '//'}, 'nasm': {'left': ';'}, 'htmlcheetah': {'left': '##'}, 'sgmllnx': {'right': '-->', 'left': '<!--'}, 'slang': {'left': '%'}, 'lytex': {'left': '%'}, 'nimrod': {'left': '#'}, 'uc': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'cython': {'leftAlt': '#', 'left': '# '}, 'dsl': {'left': ';'}, 'dylan': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'matlab': {'rightAlt': '%}', 'leftAlt': '%{', 'left': '%'}, 'velocity': {'right': '', 'rightAlt': '*#', 'leftAlt': '#*', 'left': '##'}, 'smil': {'right': '>', 'left': '<!'}, 'hostsaccess': {'left': '#'}, 'tex': {'left': '%'}, 'javascript.jquery': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'sh': {'nestedAlt': 0, 'nested': 0, 'right': '', 'rightAlt': '', 'leftAlt': '', 'left': '#'}, 'ahk': {'rightAlt': '*/', 'leftAlt': '/*', 'left': ';'}, 'r': {'leftAlt': '#''', 'left': '#'}, 'registry': {'left': ';'}, 'webmacro': {'left': '##'}, 'ncf': {'left': ';'}, 'kscript': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'robot': {'left': '#'}, 'mako': {'left': '##'}, 'cuda': {'right': '*/', 'leftAlt': '//', 'left': '/*'}, 'csp': {'left': '--'}, 'apachestyle': {'left': '#'}, 'hive': {'left': '-- '}, 'pilrc': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'vimperator': {'left': '"'}, 'sinda': {'left': '$'}, 'mma': {'right': '*)', 'left': '(*'}, 'winbatch': {'left': ';'}, 'pdf': {'left': '%'}, 'mush': {'left': '#'}, 'virata': {'left': '%'}, 'mason': {'right': '%>', 'left': '<% #'}, 'twig': {'right': '#}', 'left': '{#'}, 'poscar': {'left': '!'}, 'jproperties': {'left': '#'}, 'txt2tags': {'left': '%'}, 'coffee': {'rightAlt': '###', 'leftAlt': '###', 'left': '#'}, 'bib': {'left': '//'}, 'julia': {'rightAlt': '=#', 'leftAlt': '#=', 'left': '# '}, 'lace': {'left': '--'}, 'scons': {'left': '#'}, 'fsharp': {'right': '*)', 'leftAlt': '//', 'left': '(*'}, 'inittab': {'left': '#'}, 'vb': {'left': ''''}, 'incar': {'left': '!'}, 'occam': {'left': '--'}, 'tmux': {'left': '#'}, 'lscript': {'left': ''''}, 'wvdial': {'left': ';'}, 'asm': {'leftAlt': '#', 'left': ';'}, 'asn': {'left': '--'}, 'asp': {'rightAlt': '*%', 'leftAlt': '%*', 'left': '%'}, 'vsejcl': {'left': '/*'}, 'xquery': {'right': ':)', 'left': '(:'}, 'form': {'left': '*'}, 'bc': {'left': '#'}, 'nastran': {'left': '$'}, 'asy': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'tidy': {'left': '#'}, 'dtml': {'right': '</dtml-comment>', 'left': '<dtml-comment>'}, 'radiance': {'left': '#'}, 'ia64': {'left': '#'}, 'armasm': {'left': ';'}, 'plsql': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '-- '}, 'renpy': {'left': '# '}, 'pov': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'applescript': {'rightAlt': '*)', 'leftAlt': '(*', 'left': '--'}, 'm4': {'left': 'dnl '}, 'autoit': {'left': ';'}, 'apache': {'left': '#'}, 'sicad': {'left': '*'}, 'btm': {'left': '::'}, 'hbs': {'right': ' --}}', 'left': '{{!-- '}, 'tssgm': {'right': '''', 'left': 'comment = '''}, 'xdefaults': {'left': '!'}, 'gentoo-package-mask': {'left': '#'}, 'praat': {'left': '#'}, 'pike': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'eruby': {'right': '%>', 'rightAlt': '-->', 'leftAlt': '<!--', 'left': '<%#'}, 'lprolog': {'left': '%'}, 'snobol4': {'left': '*'}, 'spin': {'rightAlt': '}', 'leftAlt': '{', 'left': ''''}, 'squid': {'left': '#'}, 'scsh': {'left': ';'}, 'objc': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'ruby': {'left': '#'}, 'gdmo': {'left': '--'}, 'dakota': {'left': '#'}, 'objj': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'verilog': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'ratpoison': {'left': '#'}, 'vasp': {'left': '!'}, 'spice': {'left': '$'}, 'eiffel': {'left': '--'}, 'gitcommit': {'left': '#'}, 'jess': {'left': ';'}, 'cabal': {'left': '--'}, 'cf': {'right': '--->', 'left': '<!---'}, 'cg': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'ch': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'dockerfile': {'left': '#'}, 'cl': {'left': '#'}, 'sql': {'left': '-- '}, 'mips': {'left': '#'}, 'ampl': {'left': '#'}, 'vgrindefs': {'left': '#'}, 'cs': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'ppd': {'left': '%'}, 'ahdl': {'left': '--'}, 'stan': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'snnspat': {'left': '#'}, 'pyrex': {'leftAlt': '#', 'left': '# '}, 'wikipedia': {'right': '-->', 'left': '<!--'}, 'upstart': {'left': '#'}, 'python': {'leftAlt': '#', 'left': '# '}, 'elf': {'left': ''''}, 'jinja': {'right': '-->', 'rightAlt': '#}', 'leftAlt': '{#', 'left': '<!--'}, 'shader_test': {'left': '#'}, 'pascal': {'right': '}', 'rightAlt': '*)', 'leftAlt': '(*', 'left': '{'}, 'elm': {'rightAlt': '--}', 'leftAlt': '{--', 'left': '--'}, 'rgb': {'left': '!'}, 'mel': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'lynx': {'left': '#'}, 'opl': {'left': 'REM'}, 'pccts': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'po': {'left': '#'}, 'lhaskell': {'right': '-}', 'leftAlt': '>-- ', 'left': '>{-'}, 'lilypond': {'left': '%'}, 'wget': {'left': '#'}, 'moduala.': {'right': '*)', 'left': '(*'}, 'asterisk': {'left': ';'}, 'asciidoc': {'left': '//'}, 'xmath': {'left': '#'}, 'nsis': {'left': '#'}, 'emblem': {'left': '/'}, 'markdown': {'right': '-->', 'left': '<!--'}, 'plm': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'gams': {'left': '*'}, 'patran': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '$'}, 'texinfo': {'left': '@c '}, 'idl': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'z8a': {'left': ';'}, 'sshconfig': {'left': '#'}, 'genshi': {'right': '-->', 'rightAlt': '#}', 'leftAlt': '{#', 'left': '<!--'}, 'skill': {'left': ';'}, 'cvs': {'left': 'CVS:'}, 'slim': {'leftAlt': '/!', 'left': '/'}, 'aap': {'left': '#'}, 'lout': {'left': '#'}, 'fvwm': {'left': '#'}, 'groovy': {'rightAlt': '*/', 'leftAlt': '/*', 'left': '//'}, 'factor': {'leftAlt': '!# ', 'left': '! '}, 'fortran': {'left': '!'}}
neoinclude#delimiters {}
airline_inactive_collapse #1
NERDTreeUpdateOnCursorHold #1
RE_TYPE                [a-zA-Z_$][a-zA-Z0-9_$]*\%(\s*\.\s*[a-zA-Z_$][a-zA-Z0-9_$]*\)*\%(\s*\[\s*\]\)*
DevIconsDefaultFolderOpenSymbol  
ale_cpp_clangcheck_options  -extra-arg='-std=c++14 -Wall -Wextra
ale_change_sign_column_color #0
airline#extensions#tabline#enabled #1
indentLine_enabled    #1
neoinclude#_ctags_arguments {'vim': '--language-force=vim --extra=fq --fields=+ailmnSz --vim-kinds=-f --regex-vim=''/function!?[ \t]+(([bwtglsa]:)?\w+(\.\w+)+|(g:)?([A-Z]\w*|\w+(#\w+)+)|s:\w+)[ \t]*\(/\1/function/''', 'c': '-R --sort=1 --c-kinds=+p --fields=+iaS --extra=+q -I __wur,__THROW,__attribute_malloc__,__nonnull+,__attribute_pure__,__attribute_warn_unused_result__,__attribute__+', 'cpp': '--language-force=C++ -R --sort=1 --c++-kinds=+p --fields=+iaS --extra=+q -I __wur,__THROW,__attribute_malloc__,__nonnull+,__attribute_pure__,__attribute_warn_unused_result__,__attribute__+', '_': ''}
undotree_HighlightChangedText #1
loaded_nerdtree_exec_menuitem #1
RE_QUALID              [a-zA-Z_$][a-zA-Z0-9_$]*\%(\s*\.\s*[a-zA-Z_$][a-zA-Z0-9_$]*\)*
srcpath_list          ['/home/saul/.vim/plugged/vim-fake/src']
NERDTreeSortDirs       1
ale#util#style_warning_priority #1
NERDTreeMapToggleFiles  F
J_KEYWORDS_TYPE       ['class', 'interface', 'enum']
multi_cursor_start_word_key  <C-n>
J_KEYWORDS            ['boolean', 'byte', 'char', 'int', 'short', 'long', 'float', 'double', 'public', 'private', 'protected', 'static', 'final', 'synchronized', 'volatile', 'transient', 'native', 'strictfp', 'abstract', 'class', 'interface', 'enum', 'super', 'this', 'void', 'assert', 'break', 'case', 'catch', 'const', 'continue', 'default', 'do', 'else', 'extends', 'finally', 'for', 'goto', 'if', 'implements', 'import', 'instanceof', 'interface', 'new', 'package', 'return', 'switch', 'throw', 'throws', 'try', 'while', 'true', 'false', 'null']
NERDAllowAnyVisualDelims  1
neoinclude#reverse_exprs {}
webdevicons_enable_airline_statusline #1
webdevicons_enable_flagship_statusline #1
gitgutter_sign_added   +
RE_ARRAY_TYPE          ^\s*\([a-zA-Z_$][a-zA-Z0-9_$]*\%(\s*\.\s*[a-zA-Z_$][a-zA-Z0-9_$]*\)*\)\(\%(\s*\[\s*\]\)\+\)\s*$
__textobj_function    {'obj_specs': {'a': {'select': ['af'], 'select-function': 'textobj#function#select_a'}, 'I': {'select': ['iF'], 'select-function': 'textobj#function#select_I'}, 'A': {'select': ['aF'], 'select-function': 'textobj#function#select_A'}, 'i': {'select': ['if'], 'select-function': 'textobj#function#select_i'}}, 'define_default_key_mappings': function('285'), 'name': 'function', 'do_by_function': function('289'), 'interface_mapping_name': function('287'), 'normalize': function('284'), 'do_by_pattern': function('288'), 'define_interface_key_mappings': function('286'), 'new': function('283')}
airline_exclude_filetypes []
neoinclude#functions  {}
J_JSP_BUILTIN_OBJECTS {'page': 'javax.servlet.jsp.HttpJspPage', 'application': 'javax.servlet.ServletContext', 'config': 'javax.servlet.ServletConfig', 'session': 'javax.servlet.http.HttpSession', 'out': 'javax.servlet.jsp.JspWriter', 'response': 'javax.servlet.http.HttpServletResponse', 'request': 'javax.servlet.http.HttpServletRequest', 'pageContext': 'javax.servlet.jsp.PageContext'}
NERDTreeMapOpenRecursively  O
gitgutter_signs       #1
loaded_ale            #1
tagbar_autoclose      #0
J_ARRAY_TYPE_INFO     {'tag': 'CLASSDEF', 'fields': [{'t': 'int', 'm': '1', 'n': 'length'}], 'name': '[', 'methods': [{'p': [], 'r': 'Object', 'd': 'Object clone()', 'm': '1', 'n': 'clone'}, {'p': ['Object'], 'r': 'boolean', 'd': 'boolean Object.equals(Object obj)', 'm': '1', 'n': 'equals'}, {'p': [], 'r': 'Class', 'd': 'Class Object.getClass()', 'm': '100010001', 'n': 'getClass'}, {'p': [], 'r': 'int', 'd': 'int Object.hashCode()', 'm': '100000001', 'n': 'hashCode'}, {'p': [], 'r': 'void', 'd': 'void Object.notify()', 'm': '100010001', 'n': 'notify'}, {'p': [], 'r': 'void', 'd': 'void Object.notifyAll()', 'm': '100010001', 'n': 'notifyAll'}, {'p': [], 'r': 'String', 'd': 'String Object.toString()', 'm': '1', 'n': 'toString'}, {'p': [], 'r': 'void', 'd': 'void Object.wait() throws InterruptedException', 'm': '10001', 'n': 'wait'}, {'p': ['long'], 'r': 'void', 'd': 'void Object.wait(long timeout) throws InterruptedException', 'm': '100010001', 'n': 'wait'}, {'p': ['long', 'int'], 'r': 'void', 'd': 'void Object.wait(long timeout, int nanos) throws InterruptedException', 'm': '10001', 'n': 'wait'}], 'ctors': []}
undotree_SplitWidth   #30
easytags_ignored_filetypes  ^tex$
NERDTreeMapUpdirKeepOpen  U
EasyMotion_landing_highlight #0
JC__CONTEXT_ANNOTATION_FIELDS #10
airline_section_warning  %{airline#util#wrap(airline#extensions#ale#get_warning(),0)}%{airline#util#wrap(airline#extensions#whitespace#check(),0)}
multi_cursor_select_all_key  g<A-n>
tagbar_map_preview     p
neoinclude#ctags_arguments {}
deoplete#_prev_completion {'candidates': [], 'event': '', 'input': ''}
tagbar_silent         #0
ale_history_log_output #1
EasyMotion_off_screen_search #1
ale_linters_explicit  #0
xolox_messages        ['easytags.vim 3.11: Updated 6 tags in 0.31 seconds (synchronously).', 'easytags.vim 3.11: Updated 307 tags in 0.36 seconds (synchronously).']
NERDTreeMapCloseDir    x
_webdevicons_airline_orig_formatter  default
tagbar_map_openfold   ['+', '<kPlus>', 'zo']
NERDTreeSortHiddenFirst  1
indentLine_newVersion #1
J_ARRAY_TYPE_MEMBERS  [{'word': 'clone(', 'menu': 'Object clone()', 'kind': 'm', 'abbr': 'clone()'}, {'word': 'equals(', 'menu': 'boolean equals(Object)', 'kind': 'm', 'abbr': 'equals()'}, {'word': 'getClass(', 'menu': 'Class Object.getClass()', 'kind': 'm', 'abbr': 'getClass()'}, {'word': 'hashCode(', 'menu': 'int hashCode()', 'kind': 'm', 'abbr': 'hashCode()'}, {'word': 'length', 'menu': 'int', 'kind': 'f'}, {'word': 'notify(', 'menu': 'void Object.notify()', 'kind': 'm', 'abbr': 'notify()'}, {'word': 'notifyAll(', 'menu': 'void Object.notifyAll()', 'kind': 'm', 'abbr': 'notifyAll()'}, {'word': 'toString(', 'menu': 'String toString()', 'kind': 'm', 'abbr': 'toString()'}, {'word': 'wait(', 'menu': 'void Object.wait() throws InterruptedException', 'kind': 'm', 'abbr': 'wait()'}, {'word': 'wait(', 'menu': 'void Object.wait(long timeout) throws InterruptedException', 'kind': 'm', 'abbr': 'wait()', 'dup': 1}, {'word': 'wait(', 'menu': 'void Object.wait(long timeout, int nanos) throws InterruptedException', 'kind': 'm', 'abbr': 'wait()', 'dup': 1}]
neoinclude#_patterns  {'mkd': '\%(src\|href\)="\ze[^"]*$', 'xhtml': '\%(src\|href\)="\ze[^"]*$', 'cs': '^\s*\<using', 'c': '^\s*#\s*include', 'haskell': '^\s*\<import', 'r': '^\s*source(', 'html': '\%(src\|href\)="\ze[^"]*$', 'java': '^\s*\<import', 'cpp': '^\s*#\s*include', 'ruby': '^\s*\<\%(load\|require\|require_relative\)\>', 'markdown': '\%(src\|href\)="\ze[^"]*$', 'xml': '\%(src\|href\)="\ze[^"]*$'}
WebDevIconsUnicodeDecorateFileNodesPatternSymbols {'.*angular.*\.js$': '', '.*materialize.*\.css$': '', '.*jquery.*\.js$': '', '.*backbone.*\.js$': '', '.*vimrc.*': '', '.*materialize.*\.js$': '', '.*mootools.*\.js$': '', '.*require.*\.js$': '', 'Vagrantfile$': ''}
NERDTreeAutoDeleteBuffer #0
neoinclude#_paths     {}
tagbar_left           #0
NERDTreePath          {'copyingWillOverwrite': function('9'), 'Resolve': function('34'), 'AbsolutePathFor': function('1'), 'extractDriveLetter': function('14'), '_strForGlob': function('43'), 'getSortKey': function('22'), 'cacheDisplayString': function('3'), 'isUnixHiddenFile': function('24'), 'rename': function('38'), 'refresh': function('36'), 'Create': function('6'), 'createParentDirectories': function('10'), 'getDir': function('17'), 'changeToDir': function('4'), 'delete': function('11'), '_splitChunks': function('21'), 'exists': function('15'), 'Slash': function('33'), 'New': function('32'), '_strForUI': function('40'), '_strForCd': function('41'), 'copy': function('7'), 'ignore': function('26'), 'strTrunk': function('45'), 'getSortOrderIndex': function('20'), 'edit': function('13'), 'displayString': function('12'), 'isHiddenUnder': function('23'), 'compareTo': function('5'), 'isAncestor': function('28'), 'isUnixHiddenPath': function('25'), 'tabnr': function('46'), 'bookmarkNames': function('2'), 'readInfoFromDisk': function('35'), 'str': function('39'), '_ignorePatternMatches': function('27'), 'equals': function('31'), '_strForEdit': function('42'), 'getParent': function('18'), '_escChars': function('16'), 'CopyingSupported': function('8'), 'getLastPathComponent': function('19'), 'isUnder': function('29'), 'JoinPathStrings': function('30'), '_str': function('44'), 'WinToUnixPath': function('47'), 'refreshFlags': function('37')}
indent_object_except_first_level #1
loaded_fake           #1
loaded_surround       #1
DevIconsEnableFoldersOpenClose #0
multi_cursor_start_key  g<C-n>
loaded_textobj_comment #1
EasyMotion_use_upper  #0
EasyMotion_do_mapping #1
JC__CONTEXT_METHOD_REFERENCE #9
NERDTreeCreator       {'_createNERDTree': function('188'), 'createWindowTree': function('187'), 'createTabTree': function('185'), 'BufNamePrefix': function('183'), '_uniq': function('203'), '_createTreeWin': function('191'), '_nextBufferName': function('194'), 'ToggleTabTree': function('201'), 'createMirror': function('190'), '_setupStatusline': function('199'), 'CreateWindowTree': function('186'), '_tabpagevar': function('200'), 'CreateTabTree': function('184'), '_setCommonBufOptions': function('198'), '_isBufHidden': function('192'), 'New': function('193'), '_broadcastInitEvent': function('182'), 'toggleTabTree': function('202'), 'CreateMirror': function('189'), '_pathForString': function('196'), '_removeTreeBufForTab': function('197'), '_nextBufferNumber': function('195'), '_bindMappings': function('181')}
gitgutter_sign_removed_first_line  ‾
JC_MODIFIER_PROTECTED #3
loaded_webdevicons    #1
airline_powerline_fonts #1
loaded_deoplete_ternjs #1
NERDTreeMapPreview     go
tabular_default_format  l1
NERDTreeCascadeSingleChildDir  1
loaded_plug           #1
ale_fix_buffer_data   {}
ale_enabled           #1
airline_detect_modified #1
airline#highlighter#normal_fg_hi  255
neosnippet#enable_completed_snippet #0
ale_warn_about_trailing_whitespace #1
ale_linters           {'c': ['gcc'], 'cpp': ['clang']}
airline_mode_map      {'c': 'COMMAND', '^S': 'S-BLOCK', 'R': 'REPLACE', 's': 'SELECT', 't': 'TERMINAL', 'V': 'V-LINE', '^V': 'V-BLOCK', 'i': 'INSERT', '__': '------', 'S': 'S-LINE', 'v': 'VISUAL', 'n': 'NORMAL'}
tagbar_map_nexttag     <C-N>
EasyMotion_disable_two_key_combo #0
DevIconsEnableFolderPatternMatching #1
ale_buffer_info       {'3': {'temporary_file_list': [], 'job_list': [], 'active_linter_list': [], 'echoed': 0, 'loclist': [{'lnum': 16, 'bufnr': 3, 'col': 7, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'end_col': 15, 'text': 'Make the scope explicit like ''g:more_save'' (see Anti-pattern of vimrc (Scope of identifier))', 'sign_id': 1000017}, {'lnum': 19, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000002}, {'lnum': 40, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000003}, {'lnum': 46, 'bufnr': 3, 'col': 46, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000004}, {'lnum': 46, 'bufnr': 3, 'col': 54, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000004}, {'lnum': 47, 'bufnr': 3, 'col': 37, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000005}, {'lnum': 48, 'bufnr': 3, 'col': 37, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000006}, {'lnum': 49, 'bufnr': 3, 'col': 37, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000007}, {'lnum': 52, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000008}, {'lnum': 56, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000009}, {'lnum': 60, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000010}, {'lnum': 64, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000011}, {'lnum': 68, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000012}, {'lnum': 72, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000013}, {'lnum': 76, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000014}, {'lnum': 84, 'bufnr': 3, 'col': 15, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'end_col': 23, 'text': 'Make the scope explicit like ''g:more_save'' (see Anti-pattern of vimrc (Scope of identifier))', 'sign_id': 1000015}, {'lnum': 85, 'bufnr': 3, 'col': 9, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'end_col': 17, 'text': 'Make the scope explicit like ''g:more_save'' (see Anti-pattern of vimrc (Scope of identifier))', 'sign_id': 1000016}], 'temporary_directory_list': [], 'count': {'0': 0, '1': 17, 'style_warning': 0, 'info': 0, 'warning': 17, 'total': 17, 'style_error': 0, 'error': 0}}}
neoinclude#max_processes #20
tagbar_map_incrementfolds ['zr']
loaded_argumentative  #1
python_highlight_all  #1
AutoPairsShortcutFastWrap  <M-e>
RE_TYPE_DECL_HEAD      \(class\|interface\|enum\)[ \t\n\r^L]\+
NERDMenuMode           3
NERDTreeRemoveDirCmd   rm -rf 
deoplete#_rank        {'config': 1}
gitgutter_sign_modified_removed  ~_
NERDTreeMenuItem      {'isSeparator': function('67'), 'All': function('60'), 'AllEnabled': function('61'), 'execute': function('66'), 'enabled': function('65'), 'isSubmenu': function('68'), 'Create': function('62'), 'CreateSubmenu': function('64'), 'CreateSeparator': function('63')}
airline#extensions#quickfix#location_text  Location
ale_echo_msg_error_str  Error
undotree_WindowLayout #1
tagbar_case_insensitive #0
JC__CONTEXT_AFTER_DOT #1
RE_ANNOTATION          @[a-zA-Z_][a-zA-Z0-9_$]*
easytags_python_script  /home/saul/.vim/plugged/vim-easytags/plugin/../misc/easytags/highlight.py
gitgutter_highlight_lines #0
EasyMotion_grouping   #1
WebDevIconsUnicodeDecorateFileNodesDefaultSymbol  
NERDToggleCheckAllLines  0
deoplete#_context     {}
EasyMotion_skipfoldedline #1
NERDTreeCaseSensitiveSort  0
gitgutter_diff_base    
easytags_ctags_version  5.9
SignatureMarkerLineHL  SignatureMarkerLine
NERDTreeMapRefresh     r
WebDevIconsUnicodeByteOrderMarkerDefaultSymbol  
JAVA_HOME              /usr/lib/jvm/java-9-oracle
DevIconsAppendArtifactFix #0
NERDDefaultAlign       none
ale_list_vertical     #0
ale_sh_shellcheck_executable  shellcheck
WebDevIconsUnicodeDecorateFolderNodes #0
indentLine_faster     #0
xolox#easytags#syntax_keyword_timer {'format': function('276'), 'stop': function('275'), 'total': [0, 0], 'start': function('274')}
neosnippet#disable_runtime_snippets {}
loaded_airline        #1
WebDevIconsUnicodeGlyphDoubleWidth #1
loaded_nerd_comments  #1
xolox#easytags#filetypes#ctags_to_vim {'c#': 'cs', 'asp': 'aspvbs', 'c++': 'cpp'}
terminal_color_14      #73cef4
necovim#keyword_pattern  \h[[:alnum:]-]*=\?\|\c\[:\%(\h\w*:\]\)\?\|&\h[[:alnum:]_:]*\|<SID>\%(\h\w*\)\?\|<Plug>([^)]*)\?\|<\h[[:alnum:]_-]*>\?\|\h[[:alnum:]_:#]*[!(]\?\|$\h\w*
op_compilacion        {'cs': {'salida': '', 'banderas': '', 'compilador': 'mcs'}, 'c': {'salida': '-o', 'banderas': '-std=gnu11 -Wall -Wextra -Wno-missing-field-initializers -Wstrict-prototypes', 'compilador': 'gcc'}, 'haskell': {'salida': '', 'banderas': '-dynamic', 'compilador': 'ghc'}, 'nombre_ejecutable': '%:t:r', 'sh': {'salida': '', 'banderas': '', 'compilador': 'bash -n'}, 'html': {'salida': '', 'banderas': '', 'compilador': 'xdg-open'}, 'java': {'salida': '', 'banderas': '', 'compilador': 'javac'}, 'cpp': {'salida': '-o', 'banderas': '-std=c++14 -Wall -Wextra', 'compilador': 'g++'}, 'fortran': {'salida': '-o', 'banderas': '-Wall -Wextra', 'compilador': 'gfortran'}, 'python': {'salida': '', 'banderas': '', 'compilador': 'flake8'}, 'archivos': '%'}
tagbar_map_togglecaseinsensitive  i
airline_statusline_funcrefs [function('AirlineWebDevIcons'), function('airline#extensions#quickfix#apply'), function('airline#extensions#netrw#apply'), function('airline#extensions#undotree#apply'), function('airline#extensions#po#apply'), function('airline#extensions#wordcount#apply')]
neosnippet#enable_conceal_markers #1
AutoPairsShortcutJump  <M-n>
WebDevIconsUnicodeDecorateFileNodesExtensionSymbols {'erl': '', 'styl': '', 'db': '', 'rmd': '', 'c++': '', 'pyc': '', 'pyd': '', 'go': '', 'suo': '', 'lua': '', 'bash': '', 'pyo': '', 'mustache': '', 'gif': '', 'jsx': '', 'java': '', 'lhs': '', 'scala': '', 'zsh': '', 'jpeg': '', 'ts': '', 'jl': '', 'coffee': '', 'scss': '', 'js': '', 'xul': '', 'fish': '', 'htm': '', 'php': '', 'rb': '', 'f#': '', 'c': '', 'd': '', 'md': '', 'h': '', 'mli': 'λ', 'ml': 'λ', 'png': '', 'jpg': '', 'cc': '', 't': '', 'fsi': '', 'cljc': '', 'ksh': '', 'hs': '', 'sql': '', 'cp': '', 'ps1': '', 'bmp': '', 'sln': '', 'cljs': '', 'html': '', 'cpp': '', 'hrl': '', 'rs': '', 'sass': '', 'vue': '﵂', 'awk': '', 'conf': '', 'pl': '', 'pm': '', 'rlib': '', 'pp': '', 'clj': '', 'py': '', 'fsscript': '', 'less': '', 'ai': '', 'fs': '', 'csh': '', 'psd': '', 'psb': '', 'json': '', 'rss': '', 'cxx': '', 'css': '', 'sh': '', 'hpp': '', 'bat': '', 'fsx': '', 'ini': '', 'markdown': '', 'hbs': '', 'twig': '', 'yaml': '', 'vim': '', 'ejs': '', 'ico': '', 'edn': '', 'slim': '', 'tsx': '', 'dump': '', 'hxx': '', 'diff': '', 'dart': '', 'yml': ''}
AutoPairsMapSpace     #1
webdevicons_enable_vimfiler #1
airline_section_c      %<%<%{airline#extensions#fugitiveline#bufname()}%m %#__accent_red#%{airline#util#wrap(airline#parts#readonly(),0)}%#__restore__#
tagbar_foldlevel      #99
ale_set_balloons      #0
loaded_deoplete       #1
plugs                 {'markdown-preview.vim': {'uri': 'https://git::@github.com/iamcco/markdown-preview.vim.git', 'dir': '/home/saul/.vim/plugged/markdown-preview.vim/', 'frozen': 0, 'branch': 'master'}, 'nerdcommenter': {'uri': 'https://git::@github.com/scrooloose/nerdcommenter.git', 'dir': '/home/saul/.vim/plugged/nerdcommenter/', 'frozen': 0, 'branch': 'master'}, 'vim-signature': {'uri': 'https://git::@github.com/kshenoy/vim-signature.git', 'dir': '/home/saul/.vim/plugged/vim-signature/', 'frozen': 0, 'branch': 'master'}, 'auto-pairs': {'uri': 'https://git::@github.com/jiangmiao/auto-pairs.git', 'dir': '/home/saul/.vim/plugged/auto-pairs/', 'frozen': 0, 'branch': 'master'}, 'vim-multiple-cursors': {'uri': 'https://git::@github.com/terryma/vim-multiple-cursors.git', 'dir': '/home/saul/.vim/plugged/vim-multiple-cursors/', 'frozen': 0, 'branch': 'master'}, 'vim-surround': {'uri': 'https://git::@github.com/tpope/vim-surround.git', 'dir': '/home/saul/.vim/plugged/vim-surround/', 'frozen': 0, 'branch': 'master'}, 'emmet-vim': {'uri': 'https://git::@github.com/mattn/emmet-vim.git', 'dir': '/home/saul/.vim/plugged/emmet-vim/', 'frozen': 0, 'for': ['html', 'xml', 'css', 'sass'], 'branch': 'master'}, 'vim-fake': {'uri': 'https://git::@github.com/tkhren/vim-fake.git', 'dir': '/home/saul/.vim/plugged/vim-fake/', 'frozen': 0, 'branch': 'master'}, 'vim-css-color': {'uri': 'https://git::@github.com/ap/vim-css-color.git', 'dir': '/home/saul/.vim/plugged/vim-css-color/', 'frozen': 0, 'branch': 'master'}, 'Tabular': {'uri': 'https://git::@github.com/godlygeek/Tabular.git', 'dir': '/home/saul/.vim/plugged/Tabular/', 'frozen': 0, 'branch': 'master'}, 'neoinclude.vim': {'uri': 'https://git::@github.com/Shougo/neoinclude.vim.git', 'dir': '/home/saul/.vim/plugged/neoinclude.vim/', 'frozen': 0, 'branch': 'master'}, 'jedi-vim': {'uri': 'https://git::@github.com/davidhalter/jedi-vim.git', 'dir': '/home/saul/.vim/plugged/jedi-vim/', 'frozen': 0, 'for': 'python', 'branch': 'master'}, 'vim-textobj-comment': {'uri': 'https://git::@github.com/glts/vim-textobj-comment.git', 'dir': '/home/saul/.vim/plugged/vim-textobj-comment/', 'frozen': 0, 'branch': 'master'}, 'ale': {'uri': 'https://git::@github.com/w0rp/ale.git', 'dir': '/home/saul/.vim/plugged/ale/', 'frozen': 0, 'branch': 'master'}, 'jcommenter.vim': {'uri': 'https://git::@github.com/saulaxel/jcommenter.vim.git', 'dir': '/home/saul/.vim/plugged/jcommenter.vim/', 'frozen': 0, 'for': 'java', 'branch': 'master'}, 'vim-next-object': {'uri': 'https://git::@github.com/saulaxel/vim-next-object.git', 'dir': '/home/saul/.vim/plugged/vim-next-object/', 'frozen': 0, 'branch': 'master'}, 'vim-easytags': {'uri': 'https://git::@github.com/xolox/vim-easytags.git', 'dir': '/home/saul/.vim/plugged/vim-easytags/', 'frozen': 0, 'branch': 'master'}, 'vim-easymotion': {'uri': 'https://git::@github.com/easymotion/vim-easymotion.git', 'dir': '/home/saul/.vim/plugged/vim-easymotion/', 'frozen': 0, 'branch': 'master'}, 'vim-textmanip': {'uri': 'https://git::@github.com/t9md/vim-textmanip.git', 'dir': '/home/saul/.vim/plugged/vim-textmanip/', 'frozen': 0, 'branch': 'master'}, 'vim-misc': {'uri': 'https://git::@github.com/xolox/vim-misc.git', 'dir': '/home/saul/.vim/plugged/vim-misc/', 'frozen': 0, 'branch': 'master'}, 'vim-fugitive': {'uri': 'https://git::@github.com/tpope/vim-fugitive.git', 'dir': '/home/saul/.vim/plugged/vim-fugitive/', 'frozen': 0, 'branch': 'master'}, 'nerdtree': {'uri': 'https://git::@github.com/scrooloose/nerdtree.git', 'dir': '/home/saul/.vim/plugged/nerdtree/', 'frozen': 0, 'branch': 'master'}, 'vim-textobj-user': {'uri': 'https://git::@github.com/kana/vim-textobj-user.git', 'dir': '/home/saul/.vim/plugged/vim-textobj-user/', 'frozen': 0, 'branch': 'master'}, 'vim-airline': {'uri': 'https://git::@github.com/vim-airline/vim-airline.git', 'dir': '/home/saul/.vim/plugged/vim-airline/', 'frozen': 0, 'branch': 'master'}, 'vim-gitgutter': {'uri': 'https://git::@github.com/airblade/vim-gitgutter.git', 'dir': '/home/saul/.vim/plugged/vim-gitgutter/', 'frozen': 0, 'branch': 'master'}, 'vim-you-autocorrect': {'uri': 'https://git::@github.com/sedm0784/vim-you-autocorrect.git', 'dir': '/home/saul/.vim/plugged/vim-you-autocorrect/', 'frozen': 0, 'branch': 'master'}, 'vCoolor.vim': {'uri': 'https://git::@github.com/KabbAmine/vCoolor.vim.git', 'dir': '/home/saul/.vim/plugged/vCoolor.vim/', 'frozen': 0, 'branch': 'master'}, 'vim-airline-themes': {'uri': 'https://git::@github.com/vim-airline/vim-airline-themes.git', 'dir': '/home/saul/.vim/plugged/vim-airline-themes/', 'frozen': 0, 'branch': 'master'}, 'vim-endwise': {'uri': 'https://git::@github.com/tpope/vim-endwise.git', 'dir': '/home/saul/.vim/plugged/vim-endwise/', 'frozen': 0, 'branch': 'master'}, 'vim-commentary': {'uri': 'https://git::@github.com/tpope/vim-commentary.git', 'dir': '/home/saul/.vim/plugged/vim-commentary/', 'frozen': 0, 'branch': 'master'}, 'deoplete.nvim': {'uri': 'https://git::@github.com/Shougo/deoplete.nvim.git', 'dir': '/home/saul/.vim/plugged/deoplete.nvim/', 'frozen': 0, 'branch': 'master', 'do': 'UpdateRemotePlugins'}, 'vim-textobj-function': {'uri': 'https://git::@github.com/kana/vim-textobj-function.git', 'dir': '/home/saul/.vim/plugged/vim-textobj-function/', 'frozen': 0, 'branch': 'master'}, 'MatchTag': {'uri': 'https://git::@github.com/gregsexton/MatchTag.git', 'dir': '/home/saul/.vim/plugged/MatchTag/', 'frozen': 0, 'branch': 'master'}, 'ReplaceWithRegister': {'uri': 'https://git::@github.com/vim-scripts/ReplaceWithRegister.git', 'dir': '/home/saul/.vim/plugged/ReplaceWithRegister/', 'frozen': 0, 'branch': 'master'}, 'awesome-vim-colorschemes': {'uri': 'https://git::@github.com/rafi/awesome-vim-colorschemes.git', 'dir': '/home/saul/.vim/plugged/awesome-vim-colorschemes/', 'frozen': 0, 'branch': 'master'}, 'vim-argumentative': {'uri': 'https://git::@github.com/PeterRincker/vim-argumentative.git', 'dir': '/home/saul/.vim/plugged/vim-argumentative/', 'frozen': 0, 'branch': 'master'}, 'vim-indent-object': {'uri': 'https://git::@github.com/michaeljsmith/vim-indent-object.git', 'dir': '/home/saul/.vim/plugged/vim-indent-object/', 'frozen': 0, 'branch': 'master'}, 'undotree': {'uri': 'https://git::@github.com/mbbill/undotree.git', 'dir': '/home/saul/.vim/plugged/undotree/', 'frozen': 0, 'branch': 'master'}, 'tagbar': {'uri': 'https://git::@github.com/majutsushi/tagbar.git', 'dir': '/home/saul/.vim/plugged/tagbar/', 'frozen': 0, 'branch': 'master'}, 'neosnippet-snippets': {'uri': 'https://git::@github.com/Shougo/neosnippet-snippets.git', 'dir': '/home/saul/.vim/plugged/neosnippet-snippets/', 'frozen': 0, 'branch': 'master'}, 'clang_complete': {'uri': 'https://git::@github.com/Rip-Rip/clang_complete.git', 'dir': '/home/saul/.vim/plugged/clang_complete/', 'frozen': 0, 'for': ['c', 'cpp'], 'branch': 'master'}, 'neosnippet': {'uri': 'https://git::@github.com/Shougo/neosnippet.git', 'dir': '/home/saul/.vim/plugged/neosnippet/', 'frozen': 0, 'branch': 'master'}, 'vim-javacomplete2': {'uri': 'https://git::@github.com/artur-shaik/vim-javacomplete2.git', 'dir': '/home/saul/.vim/plugged/vim-javacomplete2/', 'frozen': 0, 'for': 'java', 'branch': 'master'}, 'deoplete-ternjs': {'uri': 'https://git::@github.com/carlitux/deoplete-ternjs.git', 'dir': '/home/saul/.vim/plugged/deoplete-ternjs/', 'frozen': 0, 'branch': 'master', 'do': 'sudo npm install -g tern'}, 'indentLine': {'uri': 'https://git::@github.com/Yggdroot/indentLine.git', 'dir': '/home/saul/.vim/plugged/indentLine/', 'frozen': 0, 'branch': 'master'}, 'neco-vim': {'uri': 'https://git::@github.com/Shougo/neco-vim.git', 'dir': '/home/saul/.vim/plugged/neco-vim/', 'frozen': 0, 'for': 'vim', 'branch': 'master'}, 'vim-devicons': {'uri': 'https://git::@github.com/ryanoasis/vim-devicons.git', 'dir': '/home/saul/.vim/plugged/vim-devicons/', 'frozen': 0, 'branch': 'master'}, 'vim-repeat': {'uri': 'https://git::@github.com/tpope/vim-repeat.git', 'dir': '/home/saul/.vim/plugged/vim-repeat/', 'frozen': 0, 'branch': 'master'}, 'fzf': {'uri': 'https://git::@github.com/junegunn/fzf.git', 'dir': '/home/saul/.fzf/', 'frozen': 0, 'branch': 'master', 'do': './install --all'}, 'vim-polyglot': {'uri': 'https://git::@github.com/sheerun/vim-polyglot.git', 'dir': '/home/saul/.vim/plugged/vim-polyglot/', 'frozen': 0, 'branch': 'master'}}
deoplete#sources#ternjs#tern_bin  tern
neoinclude#_ctags_commands {'go': 'gotags', '_': 'ctags'}
ale_c_clang_options    -std=gnu11 -Wall -Wextra -Wno-missing-field-initializers -Wstrict-prototypes
NERDTreeMenuController {'_echoPrompt': function('50'), '_cursorDown': function('58'), 'showMenu': function('49'), '_setCmdheight': function('55'), '_nextIndexFor': function('54'), '_allIndexesFor': function('53'), '_cursorUp': function('59'), '_saveOptions': function('56'), '_current': function('51'), '_handleKeypress': function('52'), 'New': function('48'), '_restoreOptions': function('57')}
tagbar_map_hidenonpublic  v
loaded_neosnippet     #1
tagbar_map_openallfolds ['*', '<kMultiply>', 'zR']
SignatureEnabledAtStartup #1
mkdp_auto_start       #0
webdevicons_enable_ctrlp #1
indentLine_mysyntaxfile  /home/saul/.vim/plugged/indentLine/after/syntax/indentLine.vim
airline_section_z      %3p%% %#__accent_bold#%{g:airline_symbols.linenr}%4l%#__restore__#%#__accent_bold#/%L%{g:airline_symbols.maxlinenr}%#__restore__# :%3v
neoinclude#_exts      {'c': ['h'], 'perl': ['pm'], 'java': ['java'], 'cpp': ['', 'h', 'hpp', 'hxx'], 'ruby': ['rb'], 'python': ['py', 'py3']}
xolox#misc#version     1.17.6
neosnippet#enable_snipmate_compatibility #0
NERDTreeMapChangeRoot  C
multi_cursor_prev_key  <C-p>
NERDCompactSexyComs    0
airline#init#is_windows #0
ale_set_highlights    #1
ale_sign_style_error   >>
tagbar_width          #40
EasyMotion_keys        asdghklqwertyuiopzxcvbnmfj;
DevIconsEnableFolderExtensionPatternMatching #0
NERDTreeMapOpenExpl    e
NERDTreeOldSortOrder  []
ale_set_signs         #1
ale_lint_on_text_changed  always
JC__CONTEXT_IMPORT_STATIC #4
multi_cursor_next_key  <C-n>
tagbar_autoshowtag    #0
comando_compilacion   {'cs': 'mcs  % ', 'c': 'gcc -o %:t:r % -std=gnu11 -Wall -Wextra -Wno-missing-field-initializers -Wstrict-prototypes', 'haskell': 'ghc  % -dynamic', 'nombre_ejecutable': '% % %:t:r % %', 'sh': 'bash -n  % ', 'html': 'xdg-open  % ', 'java': 'javac  % ', 'cpp': 'g++ -o %:t:r % -std=c++14 -Wall -Wextra', 'fortran': 'gfortran -o %:t:r % -Wall -Wextra', 'python': 'flake8  % ', 'archivos': '% % %:t:r % %'}
ale_linters_ignore    {}
ale_vim_vint_show_style_issues #1
RE_TYPE_ARGUMENTS      <\%(?\s\+\%(extends\|super\)\s\+\)\=[a-zA-Z_$][a-zA-Z0-9_$]*\%(\s*\.\s*[a-zA-Z_$][a-zA-Z0-9_$]*\)*\%(\s*\[\s*\]\)*\%(\s*,\s*\%(?\s\+\%(extends\|super\)\s\+\)\=[a-zA-Z_$][a-zA-Z0-9_$]*\%(\s*\.\s*[a-zA-Z_$][a-zA-Z0-9_$]*\)*\%(\s*\[\s*\]\)*\)*>
tagbar_map_showproto   <Space>
textmanip_hooks       {}
ale_command_wrapper    
ale_sh_language_server_use_global #0
NERDTreeMapCloseChildren  X
webdevicons_enable_airline_tabline #1
mkdp_command_for_global #0
ale_lint_on_enter     #1
airline_right_sep      
neosnippet#snippets_directory  
airline_symbols       {'space': ' ', 'paste': 'PASTE', 'maxlinenr': ' ', 'notexists': 'Ɇ', 'crypt': '🔒', 'linenr': '☰ ', 'readonly': '', 'spell': 'SPELL', 'modified': '+', 'keymap': 'Keymap:', 'ellipsis': '...', 'branch': '', 'whitespace': '☲'}
airline_gui_mode       cterm
NERDTreeSortOrder     ['\/$', '*', '\.swp$', '\.bak$', '\~$']
ale_max_signs         #-1
WebDevIconsUnicodeDecorateFolderNodesExactMatches #1
RE_ARRAY_ACCESS        ^\s*\([a-zA-Z_$][a-zA-Z0-9_$]*\)\s*\(\[.*\]\)\+\s*$
SignatureMap          {}
AutoPairsShortcutToggle  <M-p>
multi_cursor_skip_key  <C-x>
terminal_color_foreground  #282828
ale#util#nul_file      /dev/null
loaded_tutor_mode_plugin #1
loaded_nerdtree_ui_glue_autoload #1
loaded_airline_themes #1
indentLine_bufNameExclude []
tagbar_map_prevtag     <C-P>
SignatureMarkLineHL    SignatureMarkLine
EasyMotion_enter_jump_first #0
loaded_2html_plugin    vim7.4_v2
NERDTreeHighlightCursorline  1
next_object_wrap_file #1
gitgutter_enabled     #1
multi_cursor_exit_from_insert_mode #1
loaded_easytags       #1
RE_CASTING             ^\s*(\([a-zA-Z_$][a-zA-Z0-9_$]*\%(\s*\.\s*[a-zA-Z_$][a-zA-Z0-9_$]*\)*\))\s*\([a-zA-Z_$][a-zA-Z0-9_$]*\)\>
WebDevIconsNerdTreeAfterGlyphPadding   
textmanip_move_ignore_shiftwidth #0
RE_KEYWORDS            \<\%(boolean\|byte\|char\|int\|short\|long\|float\|double\|public\|private\|protected\|static\|final\|synchronized\|volatile\|transient\|native\|strictfp\|abstract\|class\|interface\|enum\|super\|this\|void\|assert\|break\|case\|catch\|const\|continue\|default\|do\|else\|extends\|finally\|for\|goto\|if\|implements\|import\|instanceof\|interface\|new\|package\|return\|switch\|throw\|throws\|try\|while\|true\|false\|null\)\>
airline#extensions#tabline#formatter  webdevicons
ale_history_enabled   #1
fugitive_summary_format  %s
undotree_HelpLine     #1
NERDTreeNotificationThreshold  100
NERDTreeMapActivateNode  o
airline_detect_spelllang #1
NERDTreeWinPos         left
ale_writegood_options  
undotree_SetFocusWhenToggle #0
loaded_tarPlugin       v29
indentLine_indentLevel #20
indentLine_maxLines   #3000
tagbar_map_previewwin  P
loaded_undotree       #1
AutoPairsSmartQuotes  #1
gitgutter_override_sign_column_highlight #1
JC__CONTEXT_OTHER     #0
ale_sign_offset       #1000000
JC__CONTEXT_COMPLETE_ON_OVERRIDE #11
NERDTreeStatusline     %{exists('b:NERDTree')?b:NERDTree.root.path.str():''}
tagbar_map_jump        <CR>
easytags_by_filetype   
ale_fixers            {}
ale_warn_about_trailing_blank_lines #1
multi_cursor_quit_key  <Esc>
undotree_DiffCommand   diff
webdevicons_enable_nerdtree #1
jsx_ext_required      #0
ale_echo_msg_format    %code: %%s
RE_SELECT_OR_ACCESS    ^\s*\([a-zA-Z_$][a-zA-Z0-9_$]*\)\s*\(\[.*\]\)\=\s*$
fake_bootstrap        #1
ale_sh_language_server_executable  bash-language-server
xolox#easytags#syntax_filter_stage_1_timer {'format': function('279'), 'stop': function('278'), 'total': [0, 0], 'start': function('277')}
DevIconsArtifactFixChar   
neoinclude#paths      {}
neoinclude#ctags_commands {}
airline_left_alt_sep   
ale_lint_delay        #200
EasyMotion_show_prompt #1
EasyMotion_add_search_history #1
airline_section_error  %{airline#util#wrap(airline#extensions#ale#get_error(),0)}
EasyMotion_do_shade   #1
ale#util#warning_priority #4
tagbar_map_decrementfolds ['zm']
EasyMotion_inc_highlight #1
gitgutter_git_executable  git
xolox#easytags#syntax_filter_stage_2_timer {'format': function('282'), 'stop': function('281'), 'total': [0, 0], 'start': function('280')}
ale_lint_on_filetype_changed #1
tern#filetypes        ['jsx', 'javascript.jsx', 'vue']
NERDSpaceDelims        0
loaded_xolox_misc     #1
neoinclude#_suffixes  {'haskell': '.hs'}
ale_fix_on_save       #0
airline_right_alt_sep  
tagbar_map_help       ['<F1>', '?']
gitgutter_sign_modified  ~
FILE_SEP               /
tagbar_iconchars      ['▶', '▼']
SignatureMarkTextHLDynamic #0
airline_detect_paste  #1
undotree_HighlightSyntaxChange  DiffChange
ale_sign_error         >>
loaded_vim_you_autocorrect #1
SignatureIncludeMarks  abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
deoplete#_logging     {}
NERDTreeDirNode       {'isCascadable': function('149'), 'activate': function('132'), 'getCascade': function('139'), 'getChildIndex': function('143'), 'renderToString': function('129'), 'reveal': function('161'), 'refresh': function('158'), 'openInNewTab': function('155'), 'getVisibleChildCount': function('146'), 'transplantChild': function('165'), 'getVisibleChildren': function('147'), 'GetRootForTab': function('116'), 'addChild': function('133'), 'toggleOpen': function('164'), 'close': function('134'), 'delete': function('109'), '_renderToString': function('130'), 'openSplit': function('122'), '_glob': function('144'), 'findOpenDirSiblingWithVisibleChildren': function('113'), 'openExplorer': function('154'), 'sortChildren': function('163'), 'AbsoluteTreeRoot': function('131'), 'openVSplit': function('123'), 'bookmark': function('105'), 'refreshDirFlags': function('160'), '_initChildren': function('150'), 'isVisible': function('118'), 'copy': function('108'), 'GetSelected': function('145'), 'isRoot': function('119'), 'openAlong': function('153'), 'rename': function('128'), 'displayString': function('137'), 'cacheParent': function('106'), 'getChildByIndex': function('142'), 'findNode': function('138'), 'New': function('151'), 'removeChild': function('162'), 'getChild': function('141'), 'openRecursively': function('157'), 'equals': function('111'), '_openInNewTab': function('156'), 'clearBookmarks': function('107'), 'open': function('152'), 'findSibling': function('114'), 'closeChildren': function('135'), 'getNerdtree': function('115'), 'putCursorHere': function('125'), 'createChild': function('136'), 'hasVisibleChildren': function('148'), 'getChildCount': function('140'), 'refreshFlags': function('159')}
airline#extensions#quickfix#quickfix_text  Quickfix
NERDTreeMapCWD         CD
NERDTreeNaturalSort    0
EasyMotion_verbose    #1
PATH_SEP               :
ale_loclist_msg_format  %code: %%s
indentLine_leadingSpaceChar  ˰
did_load_filetypes    #1
jedi#smart_auto_mappings #0
jedi#completions_enabled #1
NERDTreeMapUpdir       u
syntax_on             #1
WebDevIconsUnicodeDecorateFolderNodesSymlinkSymbol  
mkdp_path_to_chrome    
NERDCommentWholeLinesInVMode  0
vim_json_syntax_conceal #0
ale_open_list         #0
ale#util#style_error_priority #2
indentLine_setConceal #1
loaded_shada_plugin   #1
mkdp_browserfunc       MKDP_browserfunc_default
NERDTreeMapChdir       cd
deoplete#sources#ternjs#docs #1
EasyMotion_command_line_key_mappings {}
NERDRPlace             <]
NERDTreeMapToggleZoom  A
NERDTreeBookmark      {'CacheBookmarks': function('85'), 'BookmarkNames': function('84'), 'openInNewTab': function('96'), 'activate': function('79'), 'CompareBookmarksByName': function('86'), 'open': function('95'), 'delete': function('88'), 'validate': function('102'), 'ToRoot': function('101'), 'New': function('94'), 'Bookmarks': function('81'), 'ClearAll': function('87'), 'InvalidBookmarks': function('92'), 'AddBookmark': function('80'), 'getNode': function('89'), 'toRoot': function('100'), 'str': function('99'), 'BookmarkFor': function('83'), 'mustExist': function('93'), 'BookmarkExistsFor': function('82'), 'GetNodeForName': function('90'), 'SortBookmarksList': function('98'), 'GetSelected': function('91'), 'Write': function('103'), 'setPath': function('97')}
NERDTreeMarkBookmarks  1
webdevicons_enable_flagship_statusline_fileformat_symbols #1
loaded_python3_provider #1
SignatureMarkerTextHL  SignatureMarkerText
fake_src_paths        []
ale_max_buffer_history_size #20
tagbar#icon_open       ▼
NERDRemoveAltComs      1
NERDTreeMapJumpLastChild  J
RE_TYPE_DECL           \<\C\(\%(\%(public\|protected\|private\|abstract\|static\|final\|strictfp\)\s\+\)*\)\(class\|interface\|enum\)[ \t\n\r^L]\+\([a-zA-Z_$][a-zA-Z0-9_$]*\)[{< \t\n\r^L]
tagbar_systemenc       utf-8
easytags_file          ~/.vimtags
webdevicons_enable_unite #1
deoplete#_serveraddr   /tmp/nvimGXRlFH/0
SignatureForceMarkPlacement #0
xolox#easytags#default_pattern_prefix  \C\<
mkdp_refresh_slow     #0
multi_cursor_normal_maps {'@': 1, 'F': 1, 'T': 1, '[': 1, '\': 1, ']': 1, '!': 1, '"': 1, 'c': 1, 'd': 1, 'f': 1, 'g': 1, 'm': 1, 'q': 1, 'r': 1, 't': 1, 'y': 1, 'z': 1, '<': 1, '=': 1, '>': 1}
indentLine_first_char  ¦
tagbar_compact        #0
EasyMotion_startofline #1
indentLine_fileType   []
NERDTreeMapJumpNextSibling  <C-j>
loaded_python_provider #1
did_load_ftplugin     #1
timer_enabled         #0
NERDTree              {'ForCurrentTab': function('219'), 'GetWinNum': function('221'), 'CursorToTreeWin': function('215'), 'CursorToBookmarkTable': function('214'), 'changeRoot': function('211'), 'setPreviousBuf': function('229'), 'PathFilters': function('227'), 'ExistsForBuf': function('216'), 'previousBuf': function('228'), 'ForCurrentBuf': function('218'), 'IsOpen': function('222'), 'CloseIfQuitOnOpen': function('213'), 'New': function('226'), 'isTabTree': function('223'), 'render': function('230'), 'MustBeOpen': function('225'), 'AddPathFilter': function('210'), 'ExistsForTab': function('217'), 'getRoot': function('220'), 'Close': function('212'), 'isWinTree': function('224')}
NERDTreeCopyCmd        cp -r 
NERDTreeMapQuit        q
AutoPairsParens       {'{': '}', '(': ')', '[': ']'}
J_PRIMITIVE_TYPE_INFO {'tag': 'CLASSDEF', 'name': '!', 'fields': [{'t': 'Class', 'm': '1', 'n': 'class'}]}
neoinclude#patterns   {}
did_indent_on         #1
indentLine_setColors  #1
NERDTreeEvent         {'New': function('260')}
EasyMotion_force_csapprox #0
EasyMotion_loaded     #1
ale_keep_list_window_open #0
neoinclude#_functions {'ruby': 'neoinclude#analyze_ruby_include_files'}
ale#util#info_priority #3
NERDLPlace             [>
NERDTreeDirArrowCollapsible  ▾
DevIconsEnableNERDTreeRedraw #0
multi_cursor_use_default_mapping #1
gitgutter_sign_column_always #0
loaded_gitgutter      #1
tagbar_previewwin_pos  topleft
AutoPairsMoveCharacter  ()[]{}"'
tagbar_sort           #1
ale_has_override      {}
tagbar_map_close       q
tagbar_map_zoomwin     x
NERDTreeQuitOnOpen     0
airline#extensions#wordcount#filetypes  \vhelp|markdown|rst|org|text|asciidoc|tex|mail
webdevicons_enable_airline_statusline_fileformat_symbols #1
SignatureRecycleMarks #0
b:undo_indent          setl indentkeys< indentexpr<
b:textobj_function_select *textobj#function#vim#select()
b:gitgutter           {'hunks': [], 'path': -2, 'summary': [0, 0, 0], 'other_signs': [64, 68, 84, 85, 19, 52, 56, 72, 76, 40, 46, 47, 48, 49, 60, 16], 'dummy_sign': 0, 'gitgutter_signs': {}, 'tick': 16}
b:easytags_last_highlighted #1534668617
b:current_syntax       vim
b:autopairs_enabled   #1
b:css_color_hi        {}
b:source_func          s:get_hunks_gitgutter
b:endwise_end_pattern  \%(end\%(fu\%[nction]\|wh\%[hile]\|if\|for\|try\)\)\|aug\%[roup]\%(\s\+\cEND\)
b:did_ftplugin        #1
b:match_ignorecase    #0
b:AutoPairs           {'`': '`', '¡': '!', '"': '"', '{': '}', '''': '''', '(': ')', '¿': '?', '[': ']'}
b:SignaturePrioritizeMarks #1
b:ale_history         [{'status': 'finished', 'job_id': 123, 'exit_code': 0, 'command': ['/usr/bin/zsh', '-c', '''vint'' --version']}, {'status': 'finished', 'output': ['/tmp/nvimGXRlFH/116/bugreport.vim:19:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/116/bugreport.vim:40:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/116/bugreport.vim:46:47: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/116/bugreport.vim:46:55: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/116/bugreport.vim:47:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/116/bugreport.vim:48:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/116/bugreport.vim:49:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/116/bugreport.vim:52:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/116/bugreport.vim:56:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/116/bugreport.vim:60:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/116/bugreport.vim:64:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/116/bugreport.vim:68:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/116/bugreport.vim:72:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/116/bugreport.vim:76:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/116/bugreport.vim:84:16: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))', '/tmp/nvimGXRlFH/116/bugreport.vim:85:10: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))'], 'job_id': 124, 'exit_code': 1, 'command': ['/usr/bin/zsh', '-c', '''vint'' -s --no-color --enable-neovim -f "{file_path}:{line_number}:{column_number}: {severity}: {description} (see {reference})" ''/tmp/nvimGXRlFH/116/bugreport.vim''']}, {'status': 'finished', 'job_id': 125, 'exit_code': 0, 'command': ['/usr/bin/zsh', '-c', '''vint'' --version']}, {'status': 'finished', 'output': ['/tmp/nvimGXRlFH/117/bugreport.vim:16:8: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))', '/tmp/nvimGXRlFH/117/bugreport.vim:19:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/117/bugreport.vim:40:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/117/bugreport.vim:46:47: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/117/bugreport.vim:46:55: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/117/bugreport.vim:47:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/117/bugreport.vim:48:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/117/bugreport.vim:49:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/117/bugreport.vim:52:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/117/bugreport.vim:56:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/117/bugreport.vim:60:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/117/bugreport.vim:64:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/117/bugreport.vim:68:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/117/bugreport.vim:72:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/117/bugreport.vim:76:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/117/bugreport.vim:84:16: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))', '/tmp/nvimGXRlFH/117/bugreport.vim:85:10: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))'], 'job_id': 126, 'exit_code': 1, 'command': ['/usr/bin/zsh', '-c', '''vint'' -s --no-color --enable-neovim -f "{file_path}:{line_number}:{column_number}: {severity}: {description} (see {reference})" ''/tmp/nvimGXRlFH/117/bugreport.vim''']}, {'status': 'finished', 'job_id': 127, 'exit_code': 0, 'command': ['/usr/bin/zsh', '-c', '''vint'' --version']}, {'status': 'started', 'job_id': 129, 'command': ['/usr/bin/zsh', '-c', '''vint'' -s --no-color --enable-neovim -f "{file_path}:{line_number}:{column_number}: {severity}: {description} (see {reference})" ''/tmp/nvimGXRlFH/127/bugreport.vim''']}, {'status': 'finished', 'job_id': 130, 'exit_code': 0, 'command': ['/usr/bin/zsh', '-c', '''vint'' --version']}, {'status': 'finished', 'output': ['/tmp/nvimGXRlFH/136/bugreport.vim:16:8: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))', '/tmp/nvimGXRlFH/136/bugreport.vim:19:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/136/bugreport.vim:40:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/136/bugreport.vim:46:47: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/136/bugreport.vim:46:55: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/136/bugreport.vim:47:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/136/bugreport.vim:48:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/136/bugreport.vim:49:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/136/bugreport.vim:52:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/136/bugreport.vim:56:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/136/bugreport.vim:60:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/136/bugreport.vim:64:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/136/bugreport.vim:68:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/136/bugreport.vim:72:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/136/bugreport.vim:76:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/136/bugreport.vim:84:16: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))', '/tmp/nvimGXRlFH/136/bugreport.vim:85:10: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))'], 'job_id': 132, 'exit_code': 1, 'command': ['/usr/bin/zsh', '-c', '''vint'' -s --no-color --enable-neovim -f "{file_path}:{line_number}:{column_number}: {severity}: {description} (see {reference})" ''/tmp/nvimGXRlFH/136/bugreport.vim''']}, {'status': 'finished', 'job_id': 144, 'exit_code': 0, 'command': ['/usr/bin/zsh', '-c', '''vint'' --version']}, {'status': 'finished', 'output': ['/tmp/nvimGXRlFH/141/bugreport.vim:16:8: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))', '/tmp/nvimGXRlFH/141/bugreport.vim:19:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/141/bugreport.vim:40:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/141/bugreport.vim:46:47: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/141/bugreport.vim:46:55: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/141/bugreport.vim:47:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/141/bugreport.vim:48:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/141/bugreport.vim:49:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/141/bugreport.vim:52:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/141/bugreport.vim:56:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/141/bugreport.vim:60:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/141/bugreport.vim:64:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/141/bugreport.vim:68:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/141/bugreport.vim:72:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/141/bugreport.vim:76:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/141/bugreport.vim:84:16: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))', '/tmp/nvimGXRlFH/141/bugreport.vim:85:10: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))'], 'job_id': 146, 'exit_code': 1, 'command': ['/usr/bin/zsh', '-c', '''vint'' -s --no-color --enable-neovim -f "{file_path}:{line_number}:{column_number}: {severity}: {description} (see {reference})" ''/tmp/nvimGXRlFH/141/bugreport.vim''']}, {'status': 'finished', 'job_id': 152, 'exit_code': 0, 'command': ['/usr/bin/zsh', '-c', '''vint'' --version']}, {'status': 'finished', 'output': ['/tmp/nvimGXRlFH/143/bugreport.vim:16:8: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))', '/tmp/nvimGXRlFH/143/bugreport.vim:19:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/143/bugreport.vim:40:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/143/bugreport.vim:46:47: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/143/bugreport.vim:46:55: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/143/bugreport.vim:47:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/143/bugreport.vim:48:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/143/bugreport.vim:49:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/143/bugreport.vim:52:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/143/bugreport.vim:56:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/143/bugreport.vim:60:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/143/bugreport.vim:64:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/143/bugreport.vim:68:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/143/bugreport.vim:72:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/143/bugreport.vim:76:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/143/bugreport.vim:84:16: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))', '/tmp/nvimGXRlFH/143/bugreport.vim:85:10: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))'], 'job_id': 153, 'exit_code': 1, 'command': ['/usr/bin/zsh', '-c', '''vint'' -s --no-color --enable-neovim -f "{file_path}:{line_number}:{column_number}: {severity}: {description} (see {reference})" ''/tmp/nvimGXRlFH/143/bugreport.vim''']}, {'status': 'finished', 'job_id': 156, 'exit_code': 0, 'command': ['/usr/bin/zsh', '-c', '''vint'' --version']}, {'status': 'finished', 'output': ['/tmp/nvimGXRlFH/145/bugreport.vim:16:8: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))', '/tmp/nvimGXRlFH/145/bugreport.vim:19:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/145/bugreport.vim:40:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/145/bugreport.vim:46:47: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/145/bugreport.vim:46:55: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/145/bugreport.vim:47:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/145/bugreport.vim:48:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/145/bugreport.vim:49:38: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/145/bugreport.vim:52:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/145/bugreport.vim:56:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/145/bugreport.vim:60:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/145/bugreport.vim:64:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/145/bugreport.vim:68:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/145/bugreport.vim:72:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/145/bugreport.vim:76:9: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/145/bugreport.vim:84:16: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))', '/tmp/nvimGXRlFH/145/bugreport.vim:85:10: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))'], 'job_id': 157, 'exit_code': 1, 'command': ['/usr/bin/zsh', '-c', '''vint'' -s --no-color --enable-neovim -f "{file_path}:{line_number}:{column_number}: {severity}: {description} (see {reference})" ''/tmp/nvimGXRlFH/145/bugreport.vim''']}, {'status': 'finished', 'job_id': 158, 'exit_code': 0, 'command': ['/usr/bin/zsh', '-c', '''vint'' --version']}, {'status': 'finished', 'output': ['/tmp/nvimGXRlFH/146/bugreport.vim:16:7: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))', '/tmp/nvimGXRlFH/146/bugreport.vim:19:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/146/bugreport.vim:40:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/146/bugreport.vim:46:46: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/146/bugreport.vim:46:54: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/146/bugreport.vim:47:37: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/146/bugreport.vim:48:37: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/146/bugreport.vim:49:37: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/146/bugreport.vim:52:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/146/bugreport.vim:56:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/146/bugreport.vim:60:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/146/bugreport.vim:64:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/146/bugreport.vim:68:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/146/bugreport.vim:72:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/146/bugreport.vim:76:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/146/bugreport.vim:84:15: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))', '/tmp/nvimGXRlFH/146/bugreport.vim:85:9: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))'], 'job_id': 159, 'exit_code': 1, 'command': ['/usr/bin/zsh', '-c', '''vint'' -s --no-color --enable-neovim -f "{file_path}:{line_number}:{column_number}: {severity}: {description} (see {reference})" ''/tmp/nvimGXRlFH/146/bugreport.vim''']}, {'status': 'finished', 'job_id': 160, 'exit_code': 0, 'command': ['/usr/bin/zsh', '-c', '''vint'' --version']}, {'status': 'started', 'job_id': 161, 'command': ['/usr/bin/zsh', '-c', '''vint'' -s --no-color --enable-neovim -f "{file_path}:{line_number}:{column_number}: {severity}: {description} (see {reference})" ''/tmp/nvimGXRlFH/149/bugreport.vim''']}, {'status': 'finished', 'job_id': 162, 'exit_code': 0, 'command': ['/usr/bin/zsh', '-c', '''vint'' --version']}, {'status': 'finished', 'output': ['/tmp/nvimGXRlFH/150/bugreport.vim:16:7: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))', '/tmp/nvimGXRlFH/150/bugreport.vim:19:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/150/bugreport.vim:40:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/150/bugreport.vim:46:46: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/150/bugreport.vim:46:54: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/150/bugreport.vim:47:37: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/150/bugreport.vim:48:37: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/150/bugreport.vim:49:37: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/150/bugreport.vim:52:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/150/bugreport.vim:56:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/150/bugreport.vim:60:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/150/bugreport.vim:64:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/150/bugreport.vim:68:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/150/bugreport.vim:72:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/150/bugreport.vim:76:8: warning: Prefer single quoted strings (see Google VimScript Style Guide (Strings))', '/tmp/nvimGXRlFH/150/bugreport.vim:84:15: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))', '/tmp/nvimGXRlFH/150/bugreport.vim:85:9: style_problem: Make the scope explicit like `g:more_save` (see Anti-pattern of vimrc (Scope of identifier))'], 'job_id': 163, 'exit_code': 1, 'command': ['/usr/bin/zsh', '-c', '''vint'' -s --no-color --enable-neovim -f "{file_path}:{line_number}:{column_number}: {severity}: {description} (see {reference})" ''/tmp/nvimGXRlFH/150/bugreport.vim''']}]
b:ale_linted          #17
b:match_skip           synIDattr(synID(line("."),col("."),1),"name") =~? "comment\\|string\\|vimSynReg\\|vimSet"
b:SignatureIncludeMarks  abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
b:sig_marks           {}
b:indentLine_original_concealcursor  
b:changedtick         #16
b:custom              {'option': {}, 'source_vars': {}}
b:endwise_syngroups    vimFuncKey,vimNotFunc,vimCommand,vimAugroupKey,vimAugroup,vimAugroupError
b:did_indent          #1
b:SignatureIncludeMarkers  )!@#$%^&*(
b:match_words          \<fu\%[nction]\>:\<retu\%[rn]\>:\<endf\%[unction]\>,\<\(wh\%[ile]\|for\)\>:\<brea\%[k]\>:\<con\%[tinue]\>:\<end\(w\%[hile]\|fo\%[r]\)\>,\<if\>:\<el\%[seif]\>:\<en\%[dif]\>,\<try\>:\<cat\%[ch]\>:\<fina\%[lly]\>:\<endt\%[ry]\>,\<aug\%[roup]\s\+\%(END\>\)\@!\S:\<aug\%[roup]\s\+END\>,(:)
b:autopairs_loaded    #1
b:indentLine_ConcealOptionSet #1
b:indentLine_original_conceallevel #2
b:ale_highlight_items [{'lnum': 16, 'bufnr': 3, 'col': 7, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'end_col': 15, 'text': 'Make the scope explicit like ''g:more_save'' (see Anti-pattern of vimrc (Scope of identifier))', 'sign_id': 1000017}, {'lnum': 19, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000002}, {'lnum': 40, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000003}, {'lnum': 46, 'bufnr': 3, 'col': 46, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000004}, {'lnum': 46, 'bufnr': 3, 'col': 54, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000004}, {'lnum': 47, 'bufnr': 3, 'col': 37, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000005}, {'lnum': 48, 'bufnr': 3, 'col': 37, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000006}, {'lnum': 49, 'bufnr': 3, 'col': 37, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000007}, {'lnum': 52, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000008}, {'lnum': 56, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000009}, {'lnum': 60, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000010}, {'lnum': 64, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000011}, {'lnum': 68, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000012}, {'lnum': 72, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000013}, {'lnum': 76, 'bufnr': 3, 'col': 8, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'text': 'Prefer single quoted strings (see Google VimScript Style Guide (Strings))', 'sign_id': 1000014}, {'lnum': 84, 'bufnr': 3, 'col': 15, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'end_col': 23, 'text': 'Make the scope explicit like ''g:more_save'' (see Anti-pattern of vimrc (Scope of identifier))', 'sign_id': 1000015}, {'lnum': 85, 'bufnr': 3, 'col': 9, 'linter_name': 'vint', 'vcol': 0, 'nr': -1, 'type': 'W', 'end_col': 17, 'text': 'Make the scope explicit like ''g:more_save'' (see Anti-pattern of vimrc (Scope of identifier))', 'sign_id': 1000016}]
b:sig_markers         {}
b:sig_enabled         #1
b:buffer_vcs_config   {'git': {'untracked': '', 'branch': ''}, 'mercurial': {'untracked': '', 'branch': ''}}
b:endwise_words        fu\%[nction],wh\%[ile],if,for,try,aug\%[roup]\%(\s\+\cEND\)\@!
b:SignatureMarkOrder   pm
b:SignatureDeferPlacement #1
b:airline_changenr    #16
b:SignatureWrapJumps  #1
b:AutoPairsClosedPairs {'`': '`', '!': '¡', '"': '"', '''': '''', ')': '(', '}': '{', ']': '[', '?': '¿'}
b:css_color_syn       {}
b:css_color_pat        #\(\x\{3}\|\x\{6}\)\>
b:ale_quitting        #0
b:ale_file_changed    #0
b:css_color_grp       ['vimHiGuiRgb', 'vimComment', 'vimLineComment', 'vimHiGuiRgb', 'vimComment', 'vimLineComment', 'vimHiGuiRgb', 'vimComment', 'vimLineComment', 'vimHiGuiRgb', 'vimComment', 'vimLineComment', 'vimHiGuiRgb', 'vimComment', 'vimLineComment']
b:css_color_off       #0
b:AutoPairsMoveCharacter  ()[]{}"'
b:airline_ws_changedtick #16
b:ale_save_event_fired #0
b:NERDCommenterDelims {'nestedAlt': 0, 'right': '', 'nested': 0, 'leftAlt': '', 'left': '"', 'rightAlt': ''}
b:sig_DummyExists     #0
b:neosnippet          {'optional_tabstop': 0, 'snippets': {}, 'unnamed_register': '', 'target': '', 'trigger': 0, 'selected_text': ''}
b:endwise_addition     \=submatch(0)=~"aug\\%[roup]" ? submatch(0) . " END" : "end" . submatch(0)
b:undo_ftplugin        setl fo< isk< com< tw< commentstring< keywordprg<| unlet! b:match_ignorecase b:match_words b:match_skip|unlet b:textobj_function_select
b:NERDSexyComMarker    
b:airline_hunks        
b:ale_original_filetype  vim
w:airline_lastmode     normal spell readonly
w:css_color_match_id  []
w:indentLine_indentLineId [566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585]
w:paren_hl_on         #0
w:airline_active      #1
w:airline_current_mode  NORMAL
w:airline_section_x    %{airline#util#prepend(airline#extensions#tagbar#currenttag(),0)}%{airline#util#prepend("",0)}%{airline#util#prepend("",0)}%{airline#util#wrap(airline#parts#filetype(),0)} %{WebDevIconsGetFileTypeSymbol()} 
w:airline_section_y     %{&fenc . " " . WebDevIconsGetFileFormatSymbol()} 
t:gitgutter_didtabenter #0
t:tagbar_buf_name      __Tagbar__.2
t:tagbar_state        {'_paused': {}, 'setPaused': function('316'), 'getCurrent': function('314'), '_current': {'fpath': '/usr/share/nvim/runtime/bugreport.vim', 'reset': function('<SNR>181_reset'), 'tagfolds': {'a': {}, 'c': {}, 'f': {}, 'v': {}, 'm': {}, 'n': {}}, 'addTag': function('<SNR>181_addTag'), 'fline': {'26': {'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>183_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>182_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'file': '/tmp/nvimGXRlFH/148.vim', 'name': 'CheckDir', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>182_getPrototype'), 'fields': {'column': 0, 'line': 26, 'kind': 'f'}, 'isFolded': function('<SNR>183_isFolded'), 'fileinfo': {...@1}, 'parent': {'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>184_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>183_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'short': 'f', 'toggleFold': function('<SNR>184_toggleFold'), 'name': 'functions', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>184_getPrototype'), 'fields': {'column': 0, 'line': 0}, 'isFolded': function('<SNR>184_isFolded'), 'fileinfo': {...@1}, 'parent': {}, 'isKindheader': function('<SNR>184_isKindheader'), 'isFoldable': function('<SNR>184_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'functions', 'numtags': 2, 'openFold': function('<SNR>184_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'typeinfo': {}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}, 'isKindheader': function('<SNR>183_isKindheader'), 'isFoldable': function('<SNR>183_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'CheckDir', 'str': function('<SNR>182_str'), 'openFold': function('<SNR>183_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'pattern': '\V\^\C  func <SID>CheckDir(n)\$', 'strfmt': function('<SNR>182_strfmt'), 'typeinfo': {'ctagstype': 'vim', 'ftype': 'vim', 'kinddict': {'a': 3, 'c': 4, 'f': 2, 'v': 1, 'm': 5, 'n': 0, '?': 6}, 'createKinddict': function('<SNR>180_createKinddict'), 'getKind': function('<SNR>180_getKind'), 'kinds': [{'short': 'n', 'long': 'vimball filenames', 'fold': 0, 'stl': 1}, {'short': 'v', 'long': 'variables', 'fold': 1, 'stl': 0}, {'short': 'f', 'long': 'functions', 'fold': 0, 'stl': 1}, {'short': 'a', 'long': 'autocommand groups', 'fold': 1, 'stl': 1}, {'short': 'c', 'long': 'commands', 'fold': 0, 'stl': 0}, {'short': 'm', 'long': 'maps', 'fold': 1, 'stl': 0}]}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}, '33': {'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>183_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>182_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'file': '/tmp/nvimGXRlFH/148.vim', 'name': 'CheckFile', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>182_getPrototype'), 'fields': {'column': 0, 'line': 33, 'kind': 'f'}, 'isFolded': function('<SNR>183_isFolded'), 'fileinfo': {...@1}, 'parent': {'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>184_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>183_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'short': 'f', 'toggleFold': function('<SNR>184_toggleFold'), 'name': 'functions', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>184_getPrototype'), 'fields': {'column': 0, 'line': 0}, 'isFolded': function('<SNR>184_isFolded'), 'fileinfo': {...@1}, 'parent': {}, 'isKindheader': function('<SNR>184_isKindheader'), 'isFoldable': function('<SNR>184_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'functions', 'numtags': 2, 'openFold': function('<SNR>184_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'typeinfo': {}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}, 'isKindheader': function('<SNR>183_isKindheader'), 'isFoldable': function('<SNR>183_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'CheckFile', 'str': function('<SNR>182_str'), 'openFold': function('<SNR>183_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'pattern': '\V\^\C  func <SID>CheckFile(n)\$', 'strfmt': function('<SNR>182_strfmt'), 'typeinfo': {'ctagstype': 'vim', 'ftype': 'vim', 'kinddict': {'a': 3, 'c': 4, 'f': 2, 'v': 1, 'm': 5, 'n': 0, '?': 6}, 'createKinddict': function('<SNR>180_createKinddict'), 'getKind': function('<SNR>180_getKind'), 'kinds': [{'short': 'n', 'long': 'vimball filenames', 'fold': 0, 'stl': 1}, {'short': 'v', 'long': 'variables', 'fold': 1, 'stl': 0}, {'short': 'f', 'long': 'functions', 'fold': 0, 'stl': 1}, {'short': 'a', 'long': 'autocommand groups', 'fold': 1, 'stl': 1}, {'short': 'c', 'long': 'commands', 'fold': 0, 'stl': 0}, {'short': 'm', 'long': 'maps', 'fold': 1, 'stl': 0}]}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}, '16': {'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>183_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>182_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'file': '/tmp/nvimGXRlFH/148.vim', 'name': 'more_save', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>182_getPrototype'), 'fields': {'column': 0, 'line': 16, 'kind': 'v'}, 'isFolded': function('<SNR>183_isFolded'), 'fileinfo': {...@1}, 'parent': {'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>184_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>183_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'short': 'v', 'toggleFold': function('<SNR>184_toggleFold'), 'name': 'variables', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>184_getPrototype'), 'fields': {'column': 0, 'line': 0}, 'isFolded': function('<SNR>184_isFolded'), 'fileinfo': {...@1}, 'parent': {}, 'isKindheader': function('<SNR>184_isKindheader'), 'isFoldable': function('<SNR>184_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'variables', 'numtags': 1, 'openFold': function('<SNR>184_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'typeinfo': {}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}, 'isKindheader': function('<SNR>183_isKindheader'), 'isFoldable': function('<SNR>183_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'more_save', 'str': function('<SNR>182_str'), 'openFold': function('<SNR>183_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'pattern': '\V\^\C  let more_save = &more\$', 'strfmt': function('<SNR>182_strfmt'), 'typeinfo': {'ctagstype': 'vim', 'ftype': 'vim', 'kinddict': {'a': 3, 'c': 4, 'f': 2, 'v': 1, 'm': 5, 'n': 0, '?': 6}, 'createKinddict': function('<SNR>180_createKinddict'), 'getKind': function('<SNR>180_getKind'), 'kinds': [{'short': 'n', 'long': 'vimball filenames', 'fold': 0, 'stl': 1}, {'short': 'v', 'long': 'variables', 'fold': 1, 'stl': 0}, {'short': 'f', 'long': 'functions', 'fold': 0, 'stl': 1}, {'short': 'a', 'long': 'autocommand groups', 'fold': 1, 'stl': 1}, {'short': 'c', 'long': 'commands', 'fold': 0, 'stl': 0}, {'short': 'm', 'long': 'maps', 'fold': 1, 'stl': 0}]}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}}, 'ftype': 'vim', 'bufnr': 3, 'clearOldFolds': function('<SNR>181_clearOldFolds'), 'closeKindFold': function('<SNR>181_closeKindFold'), 'getTags': function('<SNR>181_getTags'), 'sortTags': function('<SNR>181_sortTags'), '_taglist': [{'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>183_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>182_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'file': '/tmp/nvimGXRlFH/148.vim', 'name': 'more_save', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>182_getPrototype'), 'fields': {'column': 0, 'line': 16, 'kind': 'v'}, 'isFolded': function('<SNR>183_isFolded'), 'fileinfo': {...@1}, 'parent': {'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>184_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>183_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'short': 'v', 'toggleFold': function('<SNR>184_toggleFold'), 'name': 'variables', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>184_getPrototype'), 'fields': {'column': 0, 'line': 0}, 'isFolded': function('<SNR>184_isFolded'), 'fileinfo': {...@1}, 'parent': {}, 'isKindheader': function('<SNR>184_isKindheader'), 'isFoldable': function('<SNR>184_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'variables', 'numtags': 1, 'openFold': function('<SNR>184_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'typeinfo': {}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}, 'isKindheader': function('<SNR>183_isKindheader'), 'isFoldable': function('<SNR>183_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'more_save', 'str': function('<SNR>182_str'), 'openFold': function('<SNR>183_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'pattern': '\V\^\C  let more_save = &more\$', 'strfmt': function('<SNR>182_strfmt'), 'typeinfo': {'ctagstype': 'vim', 'ftype': 'vim', 'kinddict': {'a': 3, 'c': 4, 'f': 2, 'v': 1, 'm': 5, 'n': 0, '?': 6}, 'createKinddict': function('<SNR>180_createKinddict'), 'getKind': function('<SNR>180_getKind'), 'kinds': [{'short': 'n', 'long': 'vimball filenames', 'fold': 0, 'stl': 1}, {'short': 'v', 'long': 'variables', 'fold': 1, 'stl': 0}, {'short': 'f', 'long': 'functions', 'fold': 0, 'stl': 1}, {'short': 'a', 'long': 'autocommand groups', 'fold': 1, 'stl': 1}, {'short': 'c', 'long': 'commands', 'fold': 0, 'stl': 0}, {'short': 'm', 'long': 'maps', 'fold': 1, 'stl': 0}]}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}, {'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>183_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>182_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'file': '/tmp/nvimGXRlFH/148.vim', 'name': 'CheckDir', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>182_getPrototype'), 'fields': {'column': 0, 'line': 26, 'kind': 'f'}, 'isFolded': function('<SNR>183_isFolded'), 'fileinfo': {...@1}, 'parent': {'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>184_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>183_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'short': 'f', 'toggleFold': function('<SNR>184_toggleFold'), 'name': 'functions', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>184_getPrototype'), 'fields': {'column': 0, 'line': 0}, 'isFolded': function('<SNR>184_isFolded'), 'fileinfo': {...@1}, 'parent': {}, 'isKindheader': function('<SNR>184_isKindheader'), 'isFoldable': function('<SNR>184_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'functions', 'numtags': 2, 'openFold': function('<SNR>184_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'typeinfo': {}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}, 'isKindheader': function('<SNR>183_isKindheader'), 'isFoldable': function('<SNR>183_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'CheckDir', 'str': function('<SNR>182_str'), 'openFold': function('<SNR>183_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'pattern': '\V\^\C  func <SID>CheckDir(n)\$', 'strfmt': function('<SNR>182_strfmt'), 'typeinfo': {'ctagstype': 'vim', 'ftype': 'vim', 'kinddict': {'a': 3, 'c': 4, 'f': 2, 'v': 1, 'm': 5, 'n': 0, '?': 6}, 'createKinddict': function('<SNR>180_createKinddict'), 'getKind': function('<SNR>180_getKind'), 'kinds': [{'short': 'n', 'long': 'vimball filenames', 'fold': 0, 'stl': 1}, {'short': 'v', 'long': 'variables', 'fold': 1, 'stl': 0}, {'short': 'f', 'long': 'functions', 'fold': 0, 'stl': 1}, {'short': 'a', 'long': 'autocommand groups', 'fold': 1, 'stl': 1}, {'short': 'c', 'long': 'commands', 'fold': 0, 'stl': 0}, {'short': 'm', 'long': 'maps', 'fold': 1, 'stl': 0}]}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}, {'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>183_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>182_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'file': '/tmp/nvimGXRlFH/148.vim', 'name': 'CheckFile', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>182_getPrototype'), 'fields': {'column': 0, 'line': 33, 'kind': 'f'}, 'isFolded': function('<SNR>183_isFolded'), 'fileinfo': {...@1}, 'parent': {'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>184_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>183_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'short': 'f', 'toggleFold': function('<SNR>184_toggleFold'), 'name': 'functions', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>184_getPrototype'), 'fields': {'column': 0, 'line': 0}, 'isFolded': function('<SNR>184_isFolded'), 'fileinfo': {...@1}, 'parent': {}, 'isKindheader': function('<SNR>184_isKindheader'), 'isFoldable': function('<SNR>184_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'functions', 'numtags': 2, 'openFold': function('<SNR>184_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'typeinfo': {}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}, 'isKindheader': function('<SNR>183_isKindheader'), 'isFoldable': function('<SNR>183_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'CheckFile', 'str': function('<SNR>182_str'), 'openFold': function('<SNR>183_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'pattern': '\V\^\C  func <SID>CheckFile(n)\$', 'strfmt': function('<SNR>182_strfmt'), 'typeinfo': {'ctagstype': 'vim', 'ftype': 'vim', 'kinddict': {'a': 3, 'c': 4, 'f': 2, 'v': 1, 'm': 5, 'n': 0, '?': 6}, 'createKinddict': function('<SNR>180_createKinddict'), 'getKind': function('<SNR>180_getKind'), 'kinds': [{'short': 'n', 'long': 'vimball filenames', 'fold': 0, 'stl': 1}, {'short': 'v', 'long': 'variables', 'fold': 1, 'stl': 0}, {'short': 'f', 'long': 'functions', 'fold': 0, 'stl': 1}, {'short': 'a', 'long': 'autocommand groups', 'fold': 1, 'stl': 1}, {'short': 'c', 'long': 'commands', 'fold': 0, 'stl': 0}, {'short': 'm', 'long': 'maps', 'fold': 1, 'stl': 0}]}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}], 'mtime': 1534668614, 'removeTag': function('<SNR>181_removeTag'), '_tagdict': {'CheckFile': [{'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>183_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>182_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'file': '/tmp/nvimGXRlFH/148.vim', 'name': 'CheckFile', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>182_getPrototype'), 'fields': {'column': 0, 'line': 33, 'kind': 'f'}, 'isFolded': function('<SNR>183_isFolded'), 'fileinfo': {...@1}, 'parent': {'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>184_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>183_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'short': 'f', 'toggleFold': function('<SNR>184_toggleFold'), 'name': 'functions', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>184_getPrototype'), 'fields': {'column': 0, 'line': 0}, 'isFolded': function('<SNR>184_isFolded'), 'fileinfo': {...@1}, 'parent': {}, 'isKindheader': function('<SNR>184_isKindheader'), 'isFoldable': function('<SNR>184_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'functions', 'numtags': 2, 'openFold': function('<SNR>184_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'typeinfo': {}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}, 'isKindheader': function('<SNR>183_isKindheader'), 'isFoldable': function('<SNR>183_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'CheckFile', 'str': function('<SNR>182_str'), 'openFold': function('<SNR>183_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'pattern': '\V\^\C  func <SID>CheckFile(n)\$', 'strfmt': function('<SNR>182_strfmt'), 'typeinfo': {'ctagstype': 'vim', 'ftype': 'vim', 'kinddict': {'a': 3, 'c': 4, 'f': 2, 'v': 1, 'm': 5, 'n': 0, '?': 6}, 'createKinddict': function('<SNR>180_createKinddict'), 'getKind': function('<SNR>180_getKind'), 'kinds': [{'short': 'n', 'long': 'vimball filenames', 'fold': 0, 'stl': 1}, {'short': 'v', 'long': 'variables', 'fold': 1, 'stl': 0}, {'short': 'f', 'long': 'functions', 'fold': 0, 'stl': 1}, {'short': 'a', 'long': 'autocommand groups', 'fold': 1, 'stl': 1}, {'short': 'c', 'long': 'commands', 'fold': 0, 'stl': 0}, {'short': 'm', 'long': 'maps', 'fold': 1, 'stl': 0}]}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}], 'more_save': [{'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>183_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>182_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'file': '/tmp/nvimGXRlFH/148.vim', 'name': 'more_save', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>182_getPrototype'), 'fields': {'column': 0, 'line': 16, 'kind': 'v'}, 'isFolded': function('<SNR>183_isFolded'), 'fileinfo': {...@1}, 'parent': {'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>184_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>183_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'short': 'v', 'toggleFold': function('<SNR>184_toggleFold'), 'name': 'variables', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>184_getPrototype'), 'fields': {'column': 0, 'line': 0}, 'isFolded': function('<SNR>184_isFolded'), 'fileinfo': {...@1}, 'parent': {}, 'isKindheader': function('<SNR>184_isKindheader'), 'isFoldable': function('<SNR>184_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'variables', 'numtags': 1, 'openFold': function('<SNR>184_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'typeinfo': {}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}, 'isKindheader': function('<SNR>183_isKindheader'), 'isFoldable': function('<SNR>183_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'more_save', 'str': function('<SNR>182_str'), 'openFold': function('<SNR>183_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'pattern': '\V\^\C  let more_save = &more\$', 'strfmt': function('<SNR>182_strfmt'), 'typeinfo': {'ctagstype': 'vim', 'ftype': 'vim', 'kinddict': {'a': 3, 'c': 4, 'f': 2, 'v': 1, 'm': 5, 'n': 0, '?': 6}, 'createKinddict': function('<SNR>180_createKinddict'), 'getKind': function('<SNR>180_getKind'), 'kinds': [{'short': 'n', 'long': 'vimball filenames', 'fold': 0, 'stl': 1}, {'short': 'v', 'long': 'variables', 'fold': 1, 'stl': 0}, {'short': 'f', 'long': 'functions', 'fold': 0, 'stl': 1}, {'short': 'a', 'long': 'autocommand groups', 'fold': 1, 'stl': 1}, {'short': 'c', 'long': 'commands', 'fold': 0, 'stl': 0}, {'short': 'm', 'long': 'maps', 'fold': 1, 'stl': 0}]}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}], 'CheckDir': [{'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>183_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>182_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'file': '/tmp/nvimGXRlFH/148.vim', 'name': 'CheckDir', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>182_getPrototype'), 'fields': {'column': 0, 'line': 26, 'kind': 'f'}, 'isFolded': function('<SNR>183_isFolded'), 'fileinfo': {...@1}, 'parent': {'isSplitTag': function('<SNR>183_isSplitTag'), 'addChild': function('<SNR>183_addChild'), 'setFolded': function('<SNR>183_setFolded'), 'closeFold': function('<SNR>184_closeFold'), 'isPseudoTag': function('<SNR>183_isPseudoTag'), '_getPrefix': function('<SNR>183__getPrefix'), 'getChildrenByName': function('<SNR>183_getChildrenByName'), 'isNormalTag': function('<SNR>183_isNormalTag'), 'getChildren': function('<SNR>183_getChildren'), 'short': 'f', 'toggleFold': function('<SNR>184_toggleFold'), 'name': 'functions', 'removeChild': function('<SNR>183_removeChild'), 'getPrototype': function('<SNR>184_getPrototype'), 'fields': {'column': 0, 'line': 0}, 'isFolded': function('<SNR>184_isFolded'), 'fileinfo': {...@1}, 'parent': {}, 'isKindheader': function('<SNR>184_isKindheader'), 'isFoldable': function('<SNR>184_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'functions', 'numtags': 2, 'openFold': function('<SNR>184_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'typeinfo': {}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}, 'isKindheader': function('<SNR>183_isKindheader'), 'isFoldable': function('<SNR>183_isFoldable'), 'initFoldState': function('<SNR>183_initFoldState'), '_childlist': [], 'fullpath': 'CheckDir', 'str': function('<SNR>182_str'), 'openFold': function('<SNR>183_openFold'), 'prototype': '', '_childdict': {}, 'getClosedParentTline': function('<SNR>183_getClosedParentTline'), 'depth': 0, 'pattern': '\V\^\C  func <SID>CheckDir(n)\$', 'strfmt': function('<SNR>182_strfmt'), 'typeinfo': {'ctagstype': 'vim', 'ftype': 'vim', 'kinddict': {'a': 3, 'c': 4, 'f': 2, 'v': 1, 'm': 5, 'n': 0, '?': 6}, 'createKinddict': function('<SNR>180_createKinddict'), 'getKind': function('<SNR>180_getKind'), 'kinds': [{'short': 'n', 'long': 'vimball filenames', 'fold': 0, 'stl': 1}, {'short': 'v', 'long': 'variables', 'fold': 1, 'stl': 0}, {'short': 'f', 'long': 'functions', 'fold': 0, 'stl': 1}, {'short': 'a', 'long': 'autocommand groups', 'fold': 1, 'stl': 1}, {'short': 'c', 'long': 'commands', 'fold': 0, 'stl': 0}, {'short': 'm', 'long': 'maps', 'fold': 1, 'stl': 0}]}, 'openParents': function('<SNR>183_openParents'), 'tline': -1, 'path': ''}]}, 'getTagsByName': function('<SNR>181_getTagsByName'), 'foldlevel': 99, 'openKindFold': function('<SNR>181_openKindFold'), 'typeinfo': {'ctagstype': 'vim', 'ftype': 'vim', 'kinddict': {'a': 3, 'c': 4, 'f': 2, 'v': 1, 'm': 5, 'n': 0, '?': 6}, 'createKinddict': function('<SNR>180_createKinddict'), 'getKind': function('<SNR>180_getKind'), 'kinds': [{'short': 'n', 'long': 'vimball filenames', 'fold': 0, 'stl': 1}, {'short': 'v', 'long': 'variables', 'fold': 1, 'stl': 0}, {'short': 'f', 'long': 'functions', 'fold': 0, 'stl': 1}, {'short': 'a', 'long': 'autocommand groups', 'fold': 1, 'stl': 1}, {'short': 'c', 'long': 'commands', 'fold': 0, 'stl': 0}, {'short': 'm', 'long': 'maps', 'fold': 1, 'stl': 0}]}, 'tline': {}, 'kindfolds': {'a': 1, 'c': 0, 'f': 0, 'v': 1, 'm': 1, 'n': 0}}, 'New': function('313'), 'setCurrentFile': function('315')}
v:beval_winid         #0
v:version             #800
v:t_list              #3
v:beval_winnr         #0
v:errors              []
v:lnum                #0
v:hlsearch            #1
v:scrollstart          /usr/share/nvim/runtime/bugreport.vim, en la línea 20
v:oldfiles            ['/home/saul/.vimrc', '/home/saul/github/dotfiles/vimrc', '/home/saul/respuesta.c', '/home/saul/respuesta.txt', '/home/saul/.config/nvim/init.vim', '/home/saul/lineas_stacks', '/home/saul/.emacs', '/home/saul/.em', '/home/saul/.emacs~', '/home/saul/github/dotfiles/emacs', '/home/saul/github/jcommenter.vim/README.md', '/home/saul/github/jcommenter.vim/plugin/jcommenter.vim', '/home/saul/github/jcommenter.vim/doc/jcommenter.txt', '/home/saul/a.py', '/home/saul/a.pyx', '/home/saul/.zshrc', 'term://.//3309:/usr/bin/zsh', '/home/saul/.zsh', '/home/saul/test_brackets.vim', '/home/saul/mapeos.vim', '/home/saul/archivo.html', '/home/saul/gs.vim', '/home/saul/caracteristicas.txt', '/home/saul/contraseñas_wifi.txt', '/home/saul/a.vim', '/home/saul/github/examples/c/utilidades_comunes.h', '/usr/share/nvim/runtime/doc/various.txt', '/home/saul/github/C-Brick-Breaker/README.md', '/home/saul/hola', '/home/saul/folded.txt', '/home/saul/github/vim-move/.git/COMMIT_EDITMSG', '/home/saul/github/vim-move/doc/move.txt', '/home/saul/github/vim-move/plugin/move.vim', '/home/saul/github/vim-move/README.md', '/home/saul/github/vim-move/plugin/1 hP', '/home/saul/texto', '/usr/share/nvim/runtime/doc/eval.txt', '/usr/share/nvim/runtime/doc/options.txt', '/usr/share/nvim/runtime/doc/repeat.txt', '/usr/share/nvim/runtime/doc/cmdline.txt', '/usr/share/nvim/runtime/doc/map.txt', '/usr/share/nvim/runtime/doc/motion.txt', '/home/saul/github/ejercicios-vim/2.1_MoviendosePorLaInterfaz.txt', '/home/saul/github/ejercicios-vim/Temario.md', '/home/saul/github/ejercicios-vim/1.4_EntrandoYSaliendoInsercion.txt', '/home/saul/initialize_matrix.vim', '/usr/share/nvim/runtime/doc/pattern.txt', '/usr/share/nvim/runtime/doc/syntax.txt', '/home/saul/github/libsafec-10052013/src/safeclib/memcpy16_s.c', '/home/saul/github/libsafec-10052013/src/safeclib/memcmp_s.c', '/home/saul/github/libsafec-10052013/src/safeclib/memcmp32_s.c', '/home/saul/github/libsafec-10052013/src/safeclib/memcmp16_s.c', '/home/saul/github/libsafec-10052013/src/safeclib/ignore_handler_s.c', '/home/saul/github/libsafec-10052013/src/safeclib/abort_handler_s.c', '/home/saul/github/jcommenter.vim/.git/COMMIT_EDITMSG', '/home/saul/github/console_games/Gato/gato.c', '/home/saul/github/C-Brick-Breaker/brick.c', '/home/saul/github/C-Brick-Breaker/brick.', '/home/saul/github/ejercicios-vim/1.A_Registros.txt', '/usr/share/nvim/runtime/doc/change.txt', '/home/saul/github/ejercicios-vim/1.9_ModoVisual.txt', '/home/saul/github/ejercicios-vim/1.B_PegarTexto.txt', '/home/saul/github/ejercicios-vim/1.8_Completado.txt', '/home/saul/github/ejercicios-vim/1.7_Operadores.txt', '/home/saul/github/ejercicios-vim/1.6_ObjetosDeTexto.txt', '/home/saul/github/ejercicios-vim/1.5_ElLenguaVim.txt', '/home/saul/github/ejercicios-vim/1.3_MovimientoElemetoTexto.txt', '/home/saul/github/ejercicios-vim/1.2_ComenzandoAMoverse.txt', '/home/saul/github/ejercicios-vim/1.1_RepitiendoYDeshaciendo.txt', '/home/saul/github/ejercicios-vim/1.0_ComenzandoYGuardando.txt', '/home/saul/github/ejercicios-vim/enlaces_huerfanos.txt', '/home/saul/github/ejercicios-vim/5.1_RevisionOtrografica.txt', '/home/saul/github/ejercicios-vim/4.5_Funciones.txt', '/home/saul/github/ejercicios-vim/4.4_VariablesYCiclos.txt', '/home/saul/github/ejercicios-vim/4.3_ComandosAutomaticos.txt', '/home/saul/github/ejercicios-vim/4.2_Mapeos.txt', '/home/saul/github/ejercicios-vim/4.2_ListaComandosRemapeables.txt', '/home/saul/github/ejercicios-vim/4.1_ConfiguracionBasica.txt', '/home/saul/github/ejercicios-vim/3.6_EdicionModoComando.txt', '/home/saul/github/ejercicios-vim/3.5_ListaBuffersArgumentos.txt', '/home/saul/github/ejercicios-vim/3.4_BusquedaYRemplazo.txt', '/home/saul/github/ejercicios-vim/3.3_Filtros.txt', '/home/saul/github/ejercicios-vim/3.2_Redireccion.txt', '/home/saul/github/ejercicios-vim/3.2_Rangos.txt', '/home/saul/github/ejercicios-vim/3.1_ModoComando.txt', '/home/saul/github/ejercicios-vim/2.6_Ayuda.txt', '/home/saul/github/ejercicios-vim/2.5_Marcas.txt', '/home/saul/github/ejercicios-vim/2.4_QuickfixYLocallist.txt', '/home/saul/github/ejercicios-vim/2.3_Dobleces.txt', '/home/saul/github/ejercicios-vim/2.2_GestionArchivos.txt', '/home/saul/github/ejercicios-vim/1.E_ComandosEdicionExtras.txt', '/home/saul/github/ejercicios-vim/1.D_DeshacerCambios.txt', '/home/saul/github/ejercicios-vim/1.C_Macros.txt', '/home/saul/github/ejercicios-vim/4.Z_ConfiguracionEjemplo.vim', '/home/saul/github/neosnippet-snippets/.git/COMMIT_EDITMSG', '/home/saul/github/neosnippet-snippets/neosnippets/c.snip', '/home/saul/github/juegos_estructuras/README.md', '/home/saul/github/ProjectsFromMyStudents/Conecta4/README.md', '/home/saul/github/ProjectsFromMyStudents/README.md', '/home/saul/github/ProjectsFromMyStudents/Conecta4/Makefile']
v:dying               #0
v:windowid            #0
v:mouse_winid         #0
v:exiting              v:null
v:fcs_choice           
v:lang                 es_ES.UTF-8
v:count               #0
v:progpath             /usr/bin/nvim
v:fcs_reason           conflict
v:true                 v:true
v:t_string            #1
v:progname             nvim
v:t_bool              #6
v:t_number            #0
v:_null_dict          {}
v:vim_did_enter       #1
v:cmdbang             #0
v:foldlevel           #2
v:msgpack_types       {'float': [], 'array': [], 'binary': [], 'integer': [], 'nil': [], 'boolean': [], 'ext': [], 'map': [], 'string': []}
v:t_func              #2
v:operator             d
v:ctype                es_ES.UTF-8
v:prevcount           #0
v:register             "
v:mouse_win           #0
v:count1              #1
v:foldstart           #1098
v:foldend             #1123
v:_null_list          []
v:profiling           #0
v:t_float             #5
v:null                 v:null
v:beval_col           #0
v:errmsg               E162: No se ha grabado nada desde el último cambio en el búfer "/usr/share/nvim/runtime/bugreport.vim"
v:beval_lnum          #0
v:mouse_lnum          #0
v:insertmode           i
v:completed_item      {}
v:t_dict              #4
v:false                v:false
v:beval_bufnr         #0
v:shell_error         #0
v:testing             #0
v:servername           /tmp/nvimGXRlFH/0
v:lc_time              es_ES.UTF-8
v:searchforward       #1
v:event               {}
v:mouse_col           #0
v:statusmsg            No se encontró ninguna abreviatura
v:warningmsg           W12: Advertencia: el archivo "/usr/share/nvim/runtime/bugreport.vim" ha cambiado y el búfer se modificó también en Vim